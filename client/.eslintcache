[{"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\index.js":"1","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\serviceWorker.js":"2","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\App.js":"3","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\config.js":"4","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\store.js":"5","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\index.js":"6","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\Loader_1.js":"7","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\index.js":"8","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\index.js":"9","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\interviews.js":"10","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\index.js":"11","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\login.js":"12","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\resendConfirmation.js":"13","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\checkLogin.js":"14","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\forgotPassword.js":"15","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\register.js":"16","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\user\\editUserData.js":"17","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\logout.js":"18","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\user\\fetchUserData.js":"19","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\profile\\editProfile.js":"20","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\profile\\fetchProfile.js":"21","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\profile\\getSomeProfiles.js":"22","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\createJob.js":"23","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\deleteJob.js":"24","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\editJob.js":"25","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\getJob.js":"26","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\fetchJobs.js":"27","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\fetchUserJobs.js":"28","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\fetchJobApplicants.js":"29","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\quiz\\addQuestion.js":"30","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\quiz\\deleteQuestion.js":"31","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\quiz\\editQuestion.js":"32","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\getAppliedJobs.js":"33","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\editApplicantStatus.js":"34","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\getApplicants.js":"35","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\filters\\filters.js":"36","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\cancelJobApplication.js":"37","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\applyForJob.js":"38","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\editPost.js":"39","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\uploadPost.js":"40","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\fetchPosts.js":"41","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\loadMorePosts.js":"42","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\uploadEvent.js":"43","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\deletePost.js":"44","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\editEvent.js":"45","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\fetchEvents.js":"46","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\loadMoreEvents.js":"47","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\setGoing.js":"48","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\deleteEvent.js":"49","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\createConversation.js":"50","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\addNewMsg.js":"51","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\fetchConversations.js":"52","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\checkAddNewCov.js":"53","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\getConversation.js":"54","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\company\\openContact.js":"55","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\changeCompanyPlan.js":"56","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\adminLogin.js":"57","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\adminGetAnalysis.js":"58","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\adminGetWebsiteAnalysis.js":"59","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\getCompanies.js":"60","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\notifications\\getUnreadNotifications.js":"61","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\NavbarUser.js":"62","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\NavbarAdmin.js":"63","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\ApplyJobRoute.js":"64","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\NavbarGuest.js":"65","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\MainPagesRoutes.js":"66","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\types.js":"67","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\authReducer.js":"68","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\userReducer.js":"69","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\profileReducer.js":"70","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\isEmpty.js":"71","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\notificationReducer.js":"72","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\interviewReducer.js":"73","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\adminReducer.js":"74","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\eventsReducer.js":"75","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\filtersReducers.js":"76","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\blogReducer.js":"77","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\jobReducer.js":"78","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\chatReducer.js":"79","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\PrivateRoute.js":"80","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\StrictApplicantRoute.js":"81","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\StrictCompanyRoute.js":"82","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\StrictAdminRoute.js":"83","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Blog\\Blog.js":"84","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\Events.js":"85","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Interview\\Interview.js":"86","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\index.js":"87","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\Notifications\\index.js":"88","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Blog\\BlogCard.js":"89","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Blog\\BlogPostModal.js":"90","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\DotsGroup.js":"91","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\AgoraMain\\index.jsx":"92","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\meeting\\index.jsx":"93","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\EventCard.js":"94","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\EventPostModal.js":"95","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\ResetPassword\\index.jsx":"96","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Privacy.js":"97","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\NotFound.js":"98","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Settings.js":"99","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Interview\\InterviewRoom.js":"100","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Contact.js":"101","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\AdminLogin.js":"102","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Interview\\JoinInterview.js":"103","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\Home.js":"104","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\Profile.js":"105","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\ApplicantProfilePreview.js":"106","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\CompanyProfile.js":"107","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\CompanyProfilePreview.js":"108","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\timeline\\Timeline.js":"109","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\completeRegistration\\CompleteRegistration.js":"110","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobDescription.js":"111","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\OurJobs.js":"112","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobApplyQuiz.js":"113","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\AnswerJobQuiz.js":"114","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\CreateJobQuiz.js":"115","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\ShowJobApplicants.js":"116","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobApply.js":"117","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\ApplicantAppliedJobsHistory.js":"118","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\Analysis.js":"119","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Chat.js":"120","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\payment\\Payment.js":"121","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\searchProfiles\\SearchProfiles.js":"122","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\notification.js":"123","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\Validator.js":"124","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\interviews.js":"125","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\agora.config.js":"126","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\Speaker.js":"127","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\user.js":"128","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\aograUtils.js":"129","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\ServicesCard.js":"130","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\Footer.js":"131","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\BrandingVideoModal.js":"132","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\fixtures.js":"133","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\searchProfiles\\UserCard.js":"134","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\searchProfiles\\FilterationForm.js":"135","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\payment\\PlanCard.js":"136","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Mymessage.js":"137","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Reply.js":"138","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Contact.js":"139","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AnalysisSidebar.js":"140","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\AnalysisRoutes.js":"141","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobApplicantCard.js":"142","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\FakeExtraData.js":"143","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\QuizElementPreview.js":"144","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\QuizElement.js":"145","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\timeline\\InfoCard.js":"146","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\truncate_text.js":"147","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\OurJobCard.js":"148","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\JobsCard.js":"149","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\CircularLoader.js":"150","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\PostCard.js":"151","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\timeline\\Post.js":"152","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\PostJobModal.js":"153","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\EditCompanyProfileModal.js":"154","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\auth\\LoginModal.js":"155","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\auth\\RegisterModal.js":"156","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\data\\profileQuestions.js":"157","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\selectors\\jobsSearchFilter.js":"158","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\AgoraVideoCall\\index.jsx":"159","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\index.js":"160","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\WebsiteAnalysis.js":"161","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\EventsAnalysis.js":"162","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\PaymentsAnalysis.js":"163","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AdminNotifications.js":"164","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\GeneralAnalysis.js":"165","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AdminSettings.js":"166","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\GenerateInterviewModal.js":"167","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\validation\\validatePostJob.js":"168","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\validation\\validateAuth.js":"169","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Brief.js":"170","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Education.js":"171","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Experience.js":"172","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Training.js":"173","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Certificate.js":"174","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\ExtraInfo.js":"175","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Languages.js":"176","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\QuestionBox.js":"177","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Skills.js":"178","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\LanguagesRating.js":"179","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\admin.js":"180","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\CompanyFiltersForm.js":"181","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\paymentAnalysisCard.js":"182","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AnalysisDataCard.js":"183","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\charts\\LineChart.js":"184","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\BarLoader.js":"185","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\ExtraInfoModal.js":"186","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\validation\\validateProfile.js":"187","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\ReactConfirmAlert.js":"188"},{"size":1230,"mtime":1611788785039,"results":"189","hashOfConfig":"190"},{"size":5140,"mtime":1611788785588,"results":"191","hashOfConfig":"190"},{"size":5646,"mtime":1611833318521,"results":"192","hashOfConfig":"190"},{"size":4351,"mtime":1611823980856,"results":"193","hashOfConfig":"190"},{"size":646,"mtime":1611788785406,"results":"194","hashOfConfig":"190"},{"size":3224,"mtime":1611788785387,"results":"195","hashOfConfig":"190"},{"size":451,"mtime":1611788785033,"results":"196","hashOfConfig":"190"},{"size":169,"mtime":1611788785030,"results":"197","hashOfConfig":"190"},{"size":126,"mtime":1611788785411,"results":"198","hashOfConfig":"190"},{"size":323,"mtime":1611788785387,"results":"199","hashOfConfig":"190"},{"size":584,"mtime":1611788785404,"results":"200","hashOfConfig":"190"},{"size":1095,"mtime":1611788785341,"results":"201","hashOfConfig":"190"},{"size":253,"mtime":1611788785346,"results":"202","hashOfConfig":"190"},{"size":334,"mtime":1611788785340,"results":"203","hashOfConfig":"190"},{"size":179,"mtime":1611788785340,"results":"204","hashOfConfig":"190"},{"size":864,"mtime":1611788785346,"results":"205","hashOfConfig":"190"},{"size":574,"mtime":1611788785398,"results":"206","hashOfConfig":"190"},{"size":828,"mtime":1611788785342,"results":"207","hashOfConfig":"190"},{"size":883,"mtime":1611788785399,"results":"208","hashOfConfig":"190"},{"size":929,"mtime":1611788785394,"results":"209","hashOfConfig":"190"},{"size":848,"mtime":1611788785395,"results":"210","hashOfConfig":"190"},{"size":756,"mtime":1611788785395,"results":"211","hashOfConfig":"190"},{"size":675,"mtime":1611788785388,"results":"212","hashOfConfig":"190"},{"size":656,"mtime":1611788785388,"results":"213","hashOfConfig":"190"},{"size":831,"mtime":1611788785388,"results":"214","hashOfConfig":"190"},{"size":613,"mtime":1611788785390,"results":"215","hashOfConfig":"190"},{"size":648,"mtime":1611788785390,"results":"216","hashOfConfig":"190"},{"size":611,"mtime":1611788785390,"results":"217","hashOfConfig":"190"},{"size":742,"mtime":1611788785389,"results":"218","hashOfConfig":"190"},{"size":614,"mtime":1611788785397,"results":"219","hashOfConfig":"190"},{"size":610,"mtime":1611788785397,"results":"220","hashOfConfig":"190"},{"size":702,"mtime":1611788785398,"results":"221","hashOfConfig":"190"},{"size":593,"mtime":1611788785339,"results":"222","hashOfConfig":"190"},{"size":1054,"mtime":1611788785338,"results":"223","hashOfConfig":"190"},{"size":711,"mtime":1611788785339,"results":"224","hashOfConfig":"190"},{"size":495,"mtime":1611788785386,"results":"225","hashOfConfig":"190"},{"size":758,"mtime":1611788785337,"results":"226","hashOfConfig":"190"},{"size":961,"mtime":1611788785287,"results":"227","hashOfConfig":"190"},{"size":714,"mtime":1611788785349,"results":"228","hashOfConfig":"190"},{"size":694,"mtime":1611788785350,"results":"229","hashOfConfig":"190"},{"size":715,"mtime":1611788785349,"results":"230","hashOfConfig":"190"},{"size":726,"mtime":1611788785350,"results":"231","hashOfConfig":"190"},{"size":705,"mtime":1611788785385,"results":"232","hashOfConfig":"190"},{"size":674,"mtime":1611788785348,"results":"233","hashOfConfig":"190"},{"size":705,"mtime":1611788785382,"results":"234","hashOfConfig":"190"},{"size":739,"mtime":1611788785382,"results":"235","hashOfConfig":"190"},{"size":735,"mtime":1611788785383,"results":"236","hashOfConfig":"190"},{"size":667,"mtime":1611788785384,"results":"237","hashOfConfig":"190"},{"size":682,"mtime":1611788785382,"results":"238","hashOfConfig":"190"},{"size":806,"mtime":1611788785354,"results":"239","hashOfConfig":"190"},{"size":144,"mtime":1611788785353,"results":"240","hashOfConfig":"190"},{"size":777,"mtime":1611788785355,"results":"241","hashOfConfig":"190"},{"size":188,"mtime":1611788785353,"results":"242","hashOfConfig":"190"},{"size":632,"mtime":1611788785355,"results":"243","hashOfConfig":"190"},{"size":762,"mtime":1611788785381,"results":"244","hashOfConfig":"190"},{"size":694,"mtime":1611788785286,"results":"245","hashOfConfig":"190"},{"size":827,"mtime":1611788785286,"results":"246","hashOfConfig":"190"},{"size":673,"mtime":1611788785285,"results":"247","hashOfConfig":"190"},{"size":745,"mtime":1611788785285,"results":"248","hashOfConfig":"190"},{"size":645,"mtime":1611788785287,"results":"249","hashOfConfig":"190"},{"size":632,"mtime":1611788785393,"results":"250","hashOfConfig":"190"},{"size":12289,"mtime":1611788785027,"results":"251","hashOfConfig":"190"},{"size":3557,"mtime":1611788785027,"results":"252","hashOfConfig":"190"},{"size":399,"mtime":1611788785410,"results":"253","hashOfConfig":"190"},{"size":3868,"mtime":1611788785027,"results":"254","hashOfConfig":"190"},{"size":4013,"mtime":1611788785410,"results":"255","hashOfConfig":"190"},{"size":9213,"mtime":1611788785409,"results":"256","hashOfConfig":"190"},{"size":2150,"mtime":1611788785401,"results":"257","hashOfConfig":"190"},{"size":2300,"mtime":1611788785406,"results":"258","hashOfConfig":"190"},{"size":3996,"mtime":1611788785406,"results":"259","hashOfConfig":"190"},{"size":296,"mtime":1611788785612,"results":"260","hashOfConfig":"190"},{"size":375,"mtime":1611788785406,"results":"261","hashOfConfig":"190"},{"size":435,"mtime":1611788785404,"results":"262","hashOfConfig":"190"},{"size":4880,"mtime":1611788785400,"results":"263","hashOfConfig":"190"},{"size":6032,"mtime":1611788785403,"results":"264","hashOfConfig":"190"},{"size":852,"mtime":1611788785404,"results":"265","hashOfConfig":"190"},{"size":5118,"mtime":1611788785401,"results":"266","hashOfConfig":"190"},{"size":9978,"mtime":1611788785405,"results":"267","hashOfConfig":"190"},{"size":2364,"mtime":1611788785402,"results":"268","hashOfConfig":"190"},{"size":474,"mtime":1611788785028,"results":"269","hashOfConfig":"190"},{"size":666,"mtime":1611788785029,"results":"270","hashOfConfig":"190"},{"size":668,"mtime":1611788785029,"results":"271","hashOfConfig":"190"},{"size":534,"mtime":1611788785028,"results":"272","hashOfConfig":"190"},{"size":5112,"mtime":1611788784954,"results":"273","hashOfConfig":"190"},{"size":4505,"mtime":1611788784957,"results":"274","hashOfConfig":"190"},{"size":8389,"mtime":1611788784964,"results":"275","hashOfConfig":"190"},{"size":1688,"mtime":1611788784979,"results":"276","hashOfConfig":"190"},{"size":2885,"mtime":1611788784951,"results":"277","hashOfConfig":"190"},{"size":2381,"mtime":1611788784954,"results":"278","hashOfConfig":"190"},{"size":10152,"mtime":1611788784955,"results":"279","hashOfConfig":"190"},{"size":1104,"mtime":1611788785031,"results":"280","hashOfConfig":"190"},{"size":10538,"mtime":1611788784953,"results":"281","hashOfConfig":"190"},{"size":2316,"mtime":1611788784987,"results":"282","hashOfConfig":"190"},{"size":6232,"mtime":1611788784956,"results":"283","hashOfConfig":"190"},{"size":21369,"mtime":1611788784957,"results":"284","hashOfConfig":"190"},{"size":2914,"mtime":1611788784966,"results":"285","hashOfConfig":"190"},{"size":264,"mtime":1611788784966,"results":"286","hashOfConfig":"190"},{"size":97,"mtime":1611788784965,"results":"287","hashOfConfig":"190"},{"size":4580,"mtime":1611833264547,"results":"288","hashOfConfig":"190"},{"size":2365,"mtime":1611788784964,"results":"289","hashOfConfig":"190"},{"size":4778,"mtime":1611788784955,"results":"290","hashOfConfig":"190"},{"size":2865,"mtime":1611788784952,"results":"291","hashOfConfig":"190"},{"size":2245,"mtime":1611788784965,"results":"292","hashOfConfig":"190"},{"size":9336,"mtime":1611788784959,"results":"293","hashOfConfig":"190"},{"size":13076,"mtime":1611788785010,"results":"294","hashOfConfig":"190"},{"size":9797,"mtime":1611788784990,"results":"295","hashOfConfig":"190"},{"size":22707,"mtime":1611788784990,"results":"296","hashOfConfig":"190"},{"size":9477,"mtime":1611788785008,"results":"297","hashOfConfig":"190"},{"size":8617,"mtime":1611788785024,"results":"298","hashOfConfig":"190"},{"size":14385,"mtime":1611832220263,"results":"299","hashOfConfig":"190"},{"size":14920,"mtime":1611788784983,"results":"300","hashOfConfig":"190"},{"size":3315,"mtime":1611788784984,"results":"301","hashOfConfig":"190"},{"size":8845,"mtime":1611788784983,"results":"302","hashOfConfig":"190"},{"size":10144,"mtime":1611788784979,"results":"303","hashOfConfig":"190"},{"size":6506,"mtime":1611788784981,"results":"304","hashOfConfig":"190"},{"size":4152,"mtime":1611788784985,"results":"305","hashOfConfig":"190"},{"size":1461,"mtime":1611788784982,"results":"306","hashOfConfig":"190"},{"size":4119,"mtime":1611788784980,"results":"307","hashOfConfig":"190"},{"size":1004,"mtime":1611788784969,"results":"308","hashOfConfig":"190"},{"size":9484,"mtime":1611788784974,"results":"309","hashOfConfig":"190"},{"size":3537,"mtime":1611788784988,"results":"310","hashOfConfig":"190"},{"size":6905,"mtime":1611788785021,"results":"311","hashOfConfig":"190"},{"size":328,"mtime":1611788785590,"results":"312","hashOfConfig":"190"},{"size":344,"mtime":1611788785591,"results":"313","hashOfConfig":"190"},{"size":252,"mtime":1611788785589,"results":"314","hashOfConfig":"190"},{"size":89,"mtime":1611788784891,"results":"315","hashOfConfig":"190"},{"size":689,"mtime":1611788784957,"results":"316","hashOfConfig":"190"},{"size":209,"mtime":1611788785590,"results":"317","hashOfConfig":"190"},{"size":1669,"mtime":1611788785594,"results":"318","hashOfConfig":"190"},{"size":301,"mtime":1611788784960,"results":"319","hashOfConfig":"190"},{"size":4627,"mtime":1611788785026,"results":"320","hashOfConfig":"190"},{"size":665,"mtime":1611788784959,"results":"321","hashOfConfig":"190"},{"size":8345,"mtime":1611788785611,"results":"322","hashOfConfig":"190"},{"size":544,"mtime":1611788785022,"results":"323","hashOfConfig":"190"},{"size":7154,"mtime":1611788785021,"results":"324","hashOfConfig":"190"},{"size":541,"mtime":1611788784989,"results":"325","hashOfConfig":"190"},{"size":759,"mtime":1611788784976,"results":"326","hashOfConfig":"190"},{"size":667,"mtime":1611788784977,"results":"327","hashOfConfig":"190"},{"size":849,"mtime":1611788784975,"results":"328","hashOfConfig":"190"},{"size":1435,"mtime":1611788784971,"results":"329","hashOfConfig":"190"},{"size":1290,"mtime":1611788785409,"results":"330","hashOfConfig":"190"},{"size":5037,"mtime":1611788784981,"results":"331","hashOfConfig":"190"},{"size":5885,"mtime":1611788785016,"results":"332","hashOfConfig":"190"},{"size":2502,"mtime":1611788784985,"results":"333","hashOfConfig":"190"},{"size":8100,"mtime":1611788784985,"results":"334","hashOfConfig":"190"},{"size":565,"mtime":1611788785023,"results":"335","hashOfConfig":"190"},{"size":264,"mtime":1611788785614,"results":"336","hashOfConfig":"190"},{"size":4426,"mtime":1611788784984,"results":"337","hashOfConfig":"190"},{"size":275,"mtime":1611788785008,"results":"338","hashOfConfig":"190"},{"size":464,"mtime":1611788785031,"results":"339","hashOfConfig":"190"},{"size":1742,"mtime":1611788785009,"results":"340","hashOfConfig":"190"},{"size":3294,"mtime":1611788785023,"results":"341","hashOfConfig":"190"},{"size":18722,"mtime":1611788785018,"results":"342","hashOfConfig":"190"},{"size":5562,"mtime":1611788785013,"results":"343","hashOfConfig":"190"},{"size":10107,"mtime":1611833199396,"results":"344","hashOfConfig":"190"},{"size":7631,"mtime":1611788784963,"results":"345","hashOfConfig":"190"},{"size":136896,"mtime":1611877761265,"results":"346","hashOfConfig":"190"},{"size":808,"mtime":1611788785613,"results":"347","hashOfConfig":"190"},{"size":13266,"mtime":1611788784950,"results":"348","hashOfConfig":"190"},{"size":536,"mtime":1611788785020,"results":"349","hashOfConfig":"190"},{"size":3134,"mtime":1611788784973,"results":"350","hashOfConfig":"190"},{"size":150,"mtime":1611788784972,"results":"351","hashOfConfig":"190"},{"size":6028,"mtime":1611788784973,"results":"352","hashOfConfig":"190"},{"size":5435,"mtime":1611788784967,"results":"353","hashOfConfig":"190"},{"size":3865,"mtime":1611788784972,"results":"354","hashOfConfig":"190"},{"size":2501,"mtime":1611788784968,"results":"355","hashOfConfig":"190"},{"size":2479,"mtime":1611788784981,"results":"356","hashOfConfig":"190"},{"size":299,"mtime":1611788785615,"results":"357","hashOfConfig":"190"},{"size":1164,"mtime":1611788785614,"results":"358","hashOfConfig":"190"},{"size":7218,"mtime":1611788785011,"results":"359","hashOfConfig":"190"},{"size":9671,"mtime":1611877550824,"results":"360","hashOfConfig":"190"},{"size":11365,"mtime":1611876553153,"results":"361","hashOfConfig":"190"},{"size":8696,"mtime":1611788785019,"results":"362","hashOfConfig":"190"},{"size":9354,"mtime":1611788785012,"results":"363","hashOfConfig":"190"},{"size":22776,"mtime":1611877518379,"results":"364","hashOfConfig":"190"},{"size":4779,"mtime":1611788785017,"results":"365","hashOfConfig":"190"},{"size":3106,"mtime":1611788785019,"results":"366","hashOfConfig":"190"},{"size":4233,"mtime":1611788785019,"results":"367","hashOfConfig":"190"},{"size":5031,"mtime":1611788785017,"results":"368","hashOfConfig":"190"},{"size":180,"mtime":1611788785589,"results":"369","hashOfConfig":"190"},{"size":2014,"mtime":1611788784971,"results":"370","hashOfConfig":"190"},{"size":6532,"mtime":1611788784974,"results":"371","hashOfConfig":"190"},{"size":856,"mtime":1611788784970,"results":"372","hashOfConfig":"190"},{"size":1374,"mtime":1611788785030,"results":"373","hashOfConfig":"190"},{"size":421,"mtime":1611788785031,"results":"374","hashOfConfig":"190"},{"size":17396,"mtime":1611788785016,"results":"375","hashOfConfig":"190"},{"size":1784,"mtime":1611875338058,"results":"376","hashOfConfig":"190"},{"size":480,"mtime":1611788785028,"results":"377","hashOfConfig":"190"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},"3tyzfn",{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"380"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"380"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"380"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"380"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"380"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"380"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"380"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"380"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"380"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"380"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"380"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"380"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"380"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"380"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"380"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"380"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"380"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"380"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"380"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"380"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"380"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"380"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"380"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"380"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"380"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"380"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"380"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"380"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"380"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"380"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"380"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"380"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"380"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"380"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"380"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"380"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"380"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"380"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"380"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"380"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"380"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"380"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"380"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"380"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"380"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"380"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"380"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"380"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"380"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"380"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"380"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"380"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"380"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"380"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"380"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"380"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"380"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"380"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"380"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"380"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"380"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"380"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\index.js",[],["817","818"],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\serviceWorker.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\App.js",["819","820"],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\config.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\store.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\index.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\Loader_1.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\index.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\index.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\interviews.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\index.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\login.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\resendConfirmation.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\checkLogin.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\forgotPassword.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\register.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\user\\editUserData.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\auth\\logout.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\user\\fetchUserData.js",["821"],"import {\r\n  FETCH_USER_FAILURE,\r\n  FETCH_USER_START,\r\n  FETCH_USER_SUCCESS,\r\n  LOGOUT_START,\r\n  LOGOUT_SUCCESS,\r\n} from \"../../types\";\r\nimport Axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\nimport { fetchProfile } from \"../profile/fetchProfile\";\r\nexport const fetchUserData = (history) => (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_USER_START,\r\n  });\r\n  Axios.get(uris.user.getUserData, {\r\n    timeout: 9999999,\r\n    headers: {\r\n      Authorization: localStorage.token,\r\n    },\r\n  })\r\n    .then(({ data }) => {\r\n      dispatch(fetchProfile(data.user.type, data.user._id, false));\r\n      dispatch({\r\n        type: FETCH_USER_SUCCESS,\r\n        payload: data.user,\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      localStorage.removeItem(\"token\");\r\n      dispatch({ type: FETCH_USER_FAILURE });\r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n      });\r\n    });\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\profile\\editProfile.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\profile\\fetchProfile.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\profile\\getSomeProfiles.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\createJob.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\deleteJob.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\editJob.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\getJob.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\fetchJobs.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\fetchUserJobs.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\job\\fetchJobApplicants.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\quiz\\addQuestion.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\quiz\\deleteQuestion.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\quiz\\editQuestion.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\getAppliedJobs.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\editApplicantStatus.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\getApplicants.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\filters\\filters.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\cancelJobApplication.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\applicant\\applyForJob.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\editPost.js",["822"],"import {\r\n  EDIT_POST_FAILURE,\r\n  EDIT_POST_START,\r\n  EDIT_POST_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default (id, newPost) => dispatch => {\r\n  dispatch({\r\n    type: EDIT_POST_START\r\n  });\r\n  axios\r\n    .put(uris.blog.editPost + id, { data: newPost }, { timeout: 60000 })\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: EDIT_POST_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: EDIT_POST_SUCCESS,\r\n        payload: { id, newPost }\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: EDIT_POST_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\uploadPost.js",["823"],"import {\r\n  UPLOAD_POST_START,\r\n  UPLOAD_POST_SUCCESS,\r\n  UPLOAD_POST_FAILURE\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default newPost => dispatch => {\r\n  dispatch({\r\n    type: UPLOAD_POST_START\r\n  });\r\n  axios\r\n    .post(uris.blog.uploadPost, { data: newPost })\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: UPLOAD_POST_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: UPLOAD_POST_SUCCESS,\r\n        payload: data.post\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: UPLOAD_POST_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\fetchPosts.js",["824"],"import {\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_START,\r\n  FETCH_POSTS_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default () => dispatch => {\r\n  dispatch({\r\n    type: FETCH_POSTS_START\r\n  });\r\n  axios\r\n    .get(uris.blog.fetchPosts)\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: FETCH_POSTS_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: FETCH_POSTS_SUCCESS,\r\n        payload: data.posts instanceof Array ? data.posts.reverse() : []\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: FETCH_POSTS_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\loadMorePosts.js",["825"],"import {\r\n  LOAD_MORE_POSTS_FAILURE,\r\n  LOAD_MORE_POSTS_START,\r\n  LOAD_MORE_POSTS_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default skipCount => dispatch => {\r\n  dispatch({\r\n    type: LOAD_MORE_POSTS_START\r\n  });\r\n  axios\r\n    .get(uris.blog.loadMorePosts + skipCount)\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: LOAD_MORE_POSTS_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: LOAD_MORE_POSTS_SUCCESS,\r\n        payload: data.posts || []\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: LOAD_MORE_POSTS_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\uploadEvent.js",["826"],"import {\r\n  UPLOAD_EVENT_START,\r\n  UPLOAD_EVENT_SUCCESS,\r\n  UPLOAD_EVENT_FAILURE\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default newEvent => dispatch => {\r\n  dispatch({\r\n    type: UPLOAD_EVENT_START\r\n  });\r\n  axios\r\n    .post(uris.event.uploadPost, { data: newEvent })\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: UPLOAD_EVENT_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: UPLOAD_EVENT_SUCCESS,\r\n        payload: data.event\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: UPLOAD_EVENT_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\blog\\deletePost.js",["827"],"import {\r\n  DELETE_POST_FAILURE,\r\n  DELETE_POST_START,\r\n  DELETE_POST_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default id => dispatch => {\r\n  dispatch({\r\n    type: DELETE_POST_START\r\n  });\r\n  axios\r\n    .delete(uris.blog.deletePost + id)\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: DELETE_POST_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_POST_SUCCESS,\r\n        payload: { id }\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: DELETE_POST_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\editEvent.js",["828"],"import {\r\n  EDIT_EVENT_FAILURE,\r\n  EDIT_EVENT_START,\r\n  EDIT_EVENT_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default (id, newEvent) => dispatch => {\r\n  dispatch({\r\n    type: EDIT_EVENT_START\r\n  });\r\n  axios\r\n    .put(uris.event.editPost + id, { data: newEvent })\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: EDIT_EVENT_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: EDIT_EVENT_SUCCESS,\r\n        payload: { id, newEvent }\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: EDIT_EVENT_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\fetchEvents.js",["829"],"import {\r\n  FETCH_EVENTS_FAILURE,\r\n  FETCH_EVENTS_START,\r\n  FETCH_EVENTS_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default () => dispatch => {\r\n  dispatch({\r\n    type: FETCH_EVENTS_START\r\n  });\r\n  axios\r\n    .get(uris.event.fetchPosts, { timeout: 60000 })\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500 || Object.keys(data).length === 0) {\r\n        return dispatch({\r\n          type: FETCH_EVENTS_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: FETCH_EVENTS_SUCCESS,\r\n        payload: data.events || []\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: FETCH_EVENTS_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\loadMoreEvents.js",["830"],"import {\r\n  LOAD_MORE_EVENTS_FAILURE,\r\n  LOAD_MORE_EVENTS_START,\r\n  LOAD_MORE_EVENTS_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default skipCount => dispatch => {\r\n  dispatch({\r\n    type: LOAD_MORE_EVENTS_START\r\n  });\r\n  axios\r\n    .get(uris.event.loadMorePosts + skipCount)\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: LOAD_MORE_EVENTS_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: LOAD_MORE_EVENTS_SUCCESS,\r\n        payload: data.events || []\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: LOAD_MORE_EVENTS_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\setGoing.js",["831"],"import {\r\n  SET_GOING_START,\r\n  SET_GOING_SUCCESS,\r\n  SET_GOING_FAILURE,\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default (eventId) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_GOING_START,\r\n  });\r\n  axios\r\n    .post(uris.event.setGoing, { data: { id: eventId } })\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: SET_GOING_FAILURE,\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: SET_GOING_SUCCESS,\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: SET_GOING_FAILURE,\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\events\\deleteEvent.js",["832"],"import {\r\n  DELETE_EVENT_FAILURE,\r\n  DELETE_EVENT_START,\r\n  DELETE_EVENT_SUCCESS\r\n} from \"../../types\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport default id => dispatch => {\r\n  dispatch({\r\n    type: DELETE_EVENT_START\r\n  });\r\n  axios\r\n    .delete(uris.event.deletePost + id)\r\n    .then(({ data, status }) => {\r\n      if (!!data.error || status === 500) {\r\n        return dispatch({\r\n          type: DELETE_EVENT_FAILURE\r\n        });\r\n      }\r\n\r\n      return dispatch({\r\n        type: DELETE_EVENT_SUCCESS,\r\n        payload: { id }\r\n      });\r\n    })\r\n    .catch(() =>\r\n      dispatch({\r\n        type: DELETE_EVENT_FAILURE\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\createConversation.js",["833"],"import {\r\n  CREATE_CONVERSATION_START,\r\n  CREATE_CONVERSATION_SUCCESS,\r\n  CREATE_CONVERSATION_FAILURE,\r\n} from \"../../types\";\r\n\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nexport const createConversation = (remoteUserId) => (dispatch) => {\r\n  dispatch({\r\n    type: CREATE_CONVERSATION_START,\r\n  });\r\n  axios\r\n    .post(uris.chat.createConversation + remoteUserId)\r\n    .then(({ data, status }) => {\r\n      console.log(data, status);\r\n      /* if (!data?.messages)\r\n        return dispatch({\r\n          type: CREATE_CONVERSATION_FAILURE,\r\n        });\r\n      dispatch({\r\n        type: CREATE_CONVERSATION_SUCCESS,\r\n        payload: data?.messages || [],\r\n      }); */\r\n    })\r\n    .catch((e) =>\r\n      dispatch({\r\n        type: CREATE_CONVERSATION_FAILURE,\r\n      })\r\n    );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\addNewMsg.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\fetchConversations.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\checkAddNewCov.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\chat\\getConversation.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\company\\openContact.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\changeCompanyPlan.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\adminLogin.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\adminGetAnalysis.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\adminGetWebsiteAnalysis.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\Admin\\getCompanies.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\actions\\notifications\\getUnreadNotifications.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\NavbarUser.js",["834","835","836"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getUnreadNotifications } from \"../../redux/actions\";\r\nimport recMsgSound from \"../../assets/message_sound.mp3\";\r\nimport { socket } from \"../../index\";\r\nimport { setTextFilter } from \"../../redux/actions\";\r\nimport Notifications from \"../Notifications\";\r\nimport { GET_UNREAD_NOTIFICATIONS_SUCCESS } from \"../../redux/types\";\r\nconst planToColor = {\r\n  gold: \"#B5A900\",\r\n  silver: \"#949494\",\r\n  plat: \"#31B4C9\",\r\n  none: \"#FF6600\",\r\n};\r\nconst NavbarUser = ({\r\n  img = \"\",\r\n  name = \"user name\",\r\n  _logout,\r\n  profession = \"profession\",\r\n  type,\r\n}) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [searchInputText, setSearchInputText] = useState(\"\");\r\n  const [loadingUnreadNotf, setLoadingUnreadNotf] = useState(true);\r\n  const notf = useSelector((state) => state.notf);\r\n  const user = useSelector((state) => state.user.userData);\r\n  const profileData = useSelector((state) => state.profile.profileData);\r\n  const currentPayPlan = profileData?.subscribe?.type\r\n    ? profileData.subscribe?.type\r\n    : \"none\";\r\n  let planText = currentPayPlan;\r\n  if (planText === \"plat\") planText = \"Platinum\";\r\n  if (planText === \"none\") planText = \"No plan\";\r\n  const currentCount = profileData?.subscribe?.count\r\n    ? profileData.subscribe.count\r\n    : \"0\";\r\n  const [recMsg, setRecMsg] = useState(null);\r\n  const [playSound, setPlaySound] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setRecMsg(false);\r\n    if (!location?.pathname?.toString()?.includes(\"chat\")) {\r\n      socket.on(\"NewMessage\", ({ message }) => {\r\n        console.log(message);\r\n        if (message?.info?.to === user?._id) {\r\n          setPlaySound(true);\r\n          setRecMsg(true);\r\n        }\r\n      });\r\n    }\r\n\r\n    socket.on(\"notification\", (data) => {\r\n      const newNotifs = [data, ...notf.unread];\r\n      dispatch({\r\n        type: GET_UNREAD_NOTIFICATIONS_SUCCESS,\r\n        payload: newNotifs,\r\n      });\r\n    });\r\n  }, [setRecMsg, location, socket, notf]);\r\n\r\n  useEffect(() => {\r\n    if (loadingUnreadNotf === true) {\r\n      dispatch(getUnreadNotifications());\r\n    }\r\n  }, [dispatch, loadingUnreadNotf, getUnreadNotifications]);\r\n\r\n  const searchForJobs = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setTextFilter(searchInputText));\r\n  };\r\n  if (location.pathname === \"/interview/room\" || location.pathname === \"/reset\")\r\n    return null;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md  bg-light navbar-user  relative-container\">\r\n      {playSound && (\r\n        <audio\r\n          src={recMsgSound}\r\n          autoPlay\r\n          hidden\r\n          onEnded={() => setPlaySound(false)}\r\n        />\r\n      )}\r\n      <div className=\"navbar-brand d-flex align-items-center\" href=\"/#\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"link-unstyled\"\r\n          style={{ color: \"#FFF\", fontWeight: \"bold\" }}\r\n        >\r\n          <img className=\"mr-2\" src=\"/images/Logo.svg\" alt=\"Logo\" />\r\n          WorkEgypt\r\n        </Link>\r\n      </div>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarUser\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n        style={{ outline: \"none\" }}\r\n      >\r\n        <i className=\"fas fa-bars text-light\" />\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarUser\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                exact\r\n                to=\"/jobs\"\r\n              >\r\n                Jobs\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                activeclassname=\"active\"\r\n                exact\r\n                to=\"/blog\"\r\n              >\r\n                Blog\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                activeclassname=\"active\"\r\n                exact\r\n                to=\"/events\"\r\n              >\r\n                Events\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                exact\r\n                to=\"/contact\"\r\n              >\r\n                Contact\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" activeclassname=\"active\" href=\"/privacy\">\r\n                Privacy\r\n              </a>\r\n            </li>\r\n\r\n            <form className=\"form-inline\" onSubmit={searchForJobs}>\r\n              <div\r\n                className={`relative-container search-box-container ${\r\n                  location.pathname !== \"/jobs\" && \"invisible\"\r\n                }`}\r\n              >\r\n                <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search for jobs\"\r\n                  aria-label=\"Search\"\r\n                  value={searchInputText}\r\n                  onChange={(e) => setSearchInputText(e.target.value)}\r\n                />\r\n\r\n                <button className=\"btn--icon search-button\" type=\"submit\">\r\n                  <img\r\n                    src=\"/images/magnifying-glass-browser.svg\"\r\n                    alt=\"search\"\r\n                  />\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"navbar-user__data\">\r\n              <div className=\"navbar-user__data__info\">\r\n                <a\r\n                  className=\"link-unstyled\"\r\n                  href=\"/#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <div\r\n                    className=\"mr-2 responsive_img_container rounded-circle\"\r\n                    style={{\r\n                      width: 35,\r\n                      height: 35,\r\n                      padding: 2,\r\n                      border: \"1px solid #999\",\r\n                    }}\r\n                  >\r\n                    <img className=\"rounded-circle\" src={img} alt=\"\" />\r\n                  </div>\r\n                </a>\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                  <div className=\"relative-container\">\r\n                    <a\r\n                      className=\"link-unstyled text-light\"\r\n                      href=\"/#\"\r\n                      id=\"navbarDropdown\"\r\n                      role=\"button\"\r\n                      data-toggle=\"dropdown\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      <h6>{name}</h6>\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"dropdown\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: \"0\",\r\n                        top: \"1.5rem\",\r\n                      }}\r\n                    >\r\n                      <a\r\n                        className=\"dropdown-toggle\"\r\n                        href=\"/#\"\r\n                        id=\"navbarDropdown\"\r\n                        role=\"button\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        <></>\r\n                      </a>\r\n\r\n                      <div\r\n                        className=\"dropdown-menu\"\r\n                        aria-labelledby=\"navbarDropdown\"\r\n                      >\r\n                        <a\r\n                          className=\"dropdown-item bg-secondary dropdown-header disabled\"\r\n                          href=\"/#\"\r\n                        >\r\n                          {profession}\r\n                        </a>\r\n\r\n                        <Link to={\"/profile\"} className=\"dropdown-item\">\r\n                          <i className=\"fas fa-user\"></i>\r\n                          Profile\r\n                        </Link>\r\n                        <Link to={\"/interview/join\"} className=\"dropdown-item\">\r\n                          <i className=\"fas fa-handshake\"></i>\r\n                          Interviews\r\n                        </Link>\r\n\r\n                        {type ? (\r\n                          <>\r\n                            <Link className=\"dropdown-item\" to=\"/our-jobs\">\r\n                              <i className=\"fas fa-briefcase\"></i>\r\n                              Our Jobs\r\n                            </Link>\r\n                            <Link\r\n                              className=\"dropdown-item\"\r\n                              to=\"/search-profiles\"\r\n                            >\r\n                              <i className=\"fas fa-search\"></i>\r\n                              Search applicants\r\n                            </Link>\r\n                          </>\r\n                        ) : (\r\n                          <Link\r\n                            className=\"dropdown-item\"\r\n                            to=\"/applied-jobs-history\"\r\n                          >\r\n                            <i className=\"fas fa-briefcase\"></i>\r\n                            My Applications\r\n                          </Link>\r\n                        )}\r\n\r\n                        <Link className=\"dropdown-item\" to=\"/settings\">\r\n                          <i className=\"fas fa-cogs\"></i>\r\n                          settings\r\n                        </Link>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <button\r\n                          className=\"dropdown-item\"\r\n                          to=\"/\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n\r\n                            _logout(history);\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-sign-out-alt\"></i>\r\n                          Logout\r\n                        </button>\r\n                      </div>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <span className=\"vr-line mx-4\"></span>\r\n              <div className=\"navbar-user__data__notification\">\r\n                <div\r\n                  className=\"relative-container\"\r\n                  onClick={() => {\r\n                    history.push(\"/chat\");\r\n                    setRecMsg(false);\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"mr-3\"\r\n                    src=\"/images/chat-speech-balloon.svg\"\r\n                    alt=\"chat\"\r\n                  />\r\n                  <span\r\n                    style={{\r\n                      top: \"-0.5rem\",\r\n                      right: \"0.5rem\",\r\n                      fontSize: 8,\r\n                    }}\r\n                    className=\"badge badge-pill badge-danger notification-badge\"\r\n                  >\r\n                    {recMsg === true && \"new\"}\r\n                  </span>\r\n                </div>\r\n                <Notifications notfs={notf?.unread} />\r\n              </div>\r\n              {user?.type === true && (\r\n                <p\r\n                  className=\"badge badge-pill ml-2\"\r\n                  style={{\r\n                    background: planToColor[currentPayPlan],\r\n                    color: \"#FFF\",\r\n                  }}\r\n                >\r\n                  {planText}&nbsp;{currentCount}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default NavbarUser;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\NavbarAdmin.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\ApplyJobRoute.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\NavbarGuest.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\MainPagesRoutes.js",["837","838","839","840"],"import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {\r\n  Home,\r\n  Profile,\r\n  ApplicantProfilePreview,\r\n  CompanyProfilePreview,\r\n  CompanyProfile,\r\n  Timeline,\r\n  CompleteRegistration,\r\n  JobDescription,\r\n  CreateJobQuiz,\r\n  ShowJobApplicants,\r\n  ApplicantAppliedJobsHistory,\r\n  Contact,\r\n  Privacy,\r\n  JobApply,\r\n  NotFound,\r\n  OurJobs,\r\n  Settings,\r\n  Analysis,\r\n  Chat,\r\n  Payment,\r\n  SearchProfiles,\r\n  AdminLogin,\r\n  InterviewRoom,\r\n  JoinInterview,\r\n} from \"../components/pages\";\r\nimport Blog from \"../components/pages/Blog/Blog\";\r\nimport Events from \"../components/pages/Events/Events\";\r\nimport Interview from \"../components/pages/Interview/Interview\";\r\nimport PrivateRoute from \"../components/reusable/PrivateRoute\";\r\nimport StrictApplicantRoute from \"../components/reusable/StrictApplicantRoute\";\r\nimport StrictCompanyRoute from \"../components/reusable/StrictCompanyRoute\";\r\nimport { useSelector } from \"react-redux\";\r\nimport StrictAdminRoute from \"../components/reusable/StrictAdminRoute\";\r\nimport MeetingHome from \"../components/pages/AgoraMain\";\r\nimport Meeting from \"../components/pages/meeting\";\r\nimport ResetPassword from \"../components/pages/ResetPassword\";\r\nexport default () => {\r\n  const type = useSelector((state) => state.user?.userData?.type);\r\n  return (\r\n    <Switch>\r\n      {/* both applicant and company */}\r\n      <PrivateRoute exact path=\"/job/:id\" component={JobDescription} />\r\n      <PrivateRoute\r\n        exact\r\n        path=\"/interview/:company/:applicant\"\r\n        component={Interview}\r\n      />\r\n      <PrivateRoute\r\n        exact\r\n        path=\"/profile\"\r\n        component={type === true ? CompanyProfile : Profile}\r\n      />\r\n      <PrivateRoute exact path=\"/settings\" component={Settings} />\r\n      <PrivateRoute exact path=\"/chat\" component={Chat} />\r\n      <PrivateRoute path=\"/chat/:remoteUserID\" component={Chat} />\r\n      <PrivateRoute path=\"/interview/join\" component={MeetingHome} />\r\n      <PrivateRoute path=\"/interview/room\" component={Meeting} />\r\n      {/* <div className=\"full\"> */}\r\n      <Route exact path=\"/interview/join\" component={MeetingHome} />\r\n      <Route path=\"/meeting\" component={Meeting} />\r\n      {/* </div> */}\r\n\r\n      {/* applicant only */}\r\n      <StrictApplicantRoute\r\n        exact\r\n        path=\"/complete-registration\"\r\n        component={CompleteRegistration}\r\n      />\r\n      <StrictApplicantRoute path=\"/job-apply/:jobId\" component={JobApply} />\r\n\r\n      <StrictApplicantRoute\r\n        exact\r\n        path=\"/applied-jobs-history\"\r\n        component={ApplicantAppliedJobsHistory}\r\n      />\r\n      {/* company only */}\r\n\r\n      <StrictCompanyRoute exact path=\"/our-jobs\" component={OurJobs} />\r\n      <StrictCompanyRoute\r\n        exact\r\n        path=\"/create-job-quiz/:jobId\"\r\n        component={CreateJobQuiz}\r\n      />\r\n      <StrictCompanyRoute\r\n        exact\r\n        path=\"/show-job-applicants/:jobId\"\r\n        component={ShowJobApplicants}\r\n      />\r\n      <StrictCompanyRoute\r\n        exact\r\n        path=\"/profile/:applicantId\"\r\n        component={ApplicantProfilePreview}\r\n      />\r\n      <StrictCompanyRoute\r\n        exact\r\n        path=\"/search-profiles\"\r\n        component={SearchProfiles}\r\n      />\r\n\r\n      {/* for admins only */}\r\n      <StrictAdminRoute path=\"/analysis\" component={Analysis} />\r\n\r\n      {/* for non auth users */}\r\n      <Route\r\n        exact\r\n        path=\"/profile/:companyId/:userId\"\r\n        component={CompanyProfilePreview}\r\n      />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/jobs\" component={Timeline} />\r\n      <Route exact path=\"/contact\" component={Contact} />\r\n      <Route exact path=\"/privacy\" component={Privacy} />\r\n      <Route exact path=\"/blog\" component={Blog} />\r\n      <Route exact path=\"/admin-login\" component={AdminLogin} />\r\n      <Route exact path=\"/events\" component={Events} />\r\n      <Route exact path=\"/reset\" component={ResetPassword} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\types.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\authReducer.js",["841"],"import {\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_START,\r\n  REGISTER_FAILED,\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n  LOGOUT_START,\r\n  LOGOUT_SUCCESS,\r\n  TOKEN_VALID,\r\n  TOKEN_INVALID\r\n} from \"../types\";\r\nconst initialState = {\r\n  isAuth: false,\r\n  isLogging: null,\r\n  isRegistering: null,\r\n  name: undefined,\r\n  isLoggingOut: null,\r\n  error: {\r\n    login_err: false,\r\n    register_err: false\r\n  }\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    //sub__login\r\n    case LOGIN_START: {\r\n      return {\r\n        ...state,\r\n        isLogging: true,\r\n        error: {\r\n          ...state.error,\r\n          login_err: false\r\n        }\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLogging: false,\r\n        error: { ...state.error, login_err: false },\r\n        isAuth: true,\r\n        name: payload.name\r\n      };\r\n    }\r\n    case LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLogging: false,\r\n        error: {\r\n          ...state.error,\r\n          login_err: { ...payload }\r\n        }\r\n      };\r\n    }\r\n\r\n    //sub__register\r\n    case REGISTER_START: {\r\n      return {\r\n        ...state,\r\n        isRegistering: true\r\n      };\r\n    }\r\n    case REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isRegistering: false,\r\n        error: { ...state.error, register_err: false }\r\n      };\r\n    }\r\n\r\n    case REGISTER_FAILED: {\r\n      return {\r\n        ...state,\r\n        isRegistering: false,\r\n        error: {\r\n          ...state.error,\r\n          register_err: true\r\n        }\r\n      };\r\n    }\r\n\r\n    //sub__validate-token\r\n    case TOKEN_VALID: {\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      };\r\n    }\r\n\r\n    case TOKEN_INVALID: {\r\n      return {\r\n        ...state,\r\n        isAuth: false\r\n      };\r\n    }\r\n    //sub__logout\r\n    case LOGOUT_START: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true\r\n      };\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...initialState,\r\n        isAuth: false,\r\n        isLoggingOut: false\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\userReducer.js",["842"],"import {\r\n  FETCH_USER_START,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_START,\r\n  EDIT_USER_FAILURE,\r\n  OPEN_CONTACT_START,\r\n  OPEN_CONTACT_SUCCESS,\r\n  OPEN_CONTACT_FAILURE,\r\n  LOGOUT_SUCCESS,\r\n} from \"../types\";\r\nconst initialState = {\r\n  userData: undefined,\r\n  userDataLoading: null,\r\n  userIsEditing: null,\r\n  contactOpeningLoader: null,\r\n\r\n  errors: {\r\n    fetchUserData: false,\r\n    editUserData: false,\r\n    contactOpening: null,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_USER_START: {\r\n      let st = { ...state };\r\n      st.userDataLoading = true;\r\n      return st;\r\n    }\r\n\r\n    case FETCH_USER_SUCCESS: {\r\n      let st = { ...state };\r\n      st.userDataLoading = false;\r\n      st.userData = { ...st.userData, ...payload };\r\n      return st;\r\n    }\r\n    case FETCH_USER_FAILURE: {\r\n      let st = { ...state };\r\n      st.userDataLoading = null;\r\n      st.errors = { ...st.errors, fetchUserData: true };\r\n      return st;\r\n    }\r\n\r\n    case EDIT_USER_START: {\r\n      let st = { ...state };\r\n      st.userIsEditing = true;\r\n\r\n      return st;\r\n    }\r\n    case EDIT_USER_SUCCESS: {\r\n      let st = { ...state };\r\n      st.userIsEditing = false;\r\n      st.userData = { ...st.userData, ...payload };\r\n      return st;\r\n    }\r\n\r\n    case EDIT_USER_FAILURE: {\r\n      let st = { ...state };\r\n      st.userIsEditing = false;\r\n      st.errors = { ...st.errors, editUserData: true };\r\n      return st;\r\n    }\r\n\r\n    case OPEN_CONTACT_START: {\r\n      return {\r\n        ...state,\r\n        contactOpeningLoader: true,\r\n        errors: {\r\n          ...state.errors,\r\n          contactOpening: false,\r\n        },\r\n      };\r\n    }\r\n    case OPEN_CONTACT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        contactOpeningLoader: false,\r\n        errors: {\r\n          ...state.errors,\r\n          contactOpening: false,\r\n        },\r\n      };\r\n    }\r\n    case OPEN_CONTACT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        contactOpeningLoader: undefined,\r\n        errors: {\r\n          ...state.errors,\r\n          contactOpening: true,\r\n        },\r\n      };\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\profileReducer.js",["843"],"import {\r\n  EDIT_PROFILE,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAILURE,\r\n  FETCH_PROFILE,\r\n  FETCH_PROFILE_SUCCESS,\r\n  FETCH_PROFILE_FAILURE,\r\n  LOGOUT_SUCCESS,\r\n  UPLOAD_CV_START,\r\n  UPLOAD_CV_SUCCESS,\r\n  UPLOAD_CV_FAILURE,\r\n  GET_SOME_PROFILES_START,\r\n  GET_SOME_PROFILES_SUCCESS,\r\n  GET_SOME_PROFILES_FAILURE,\r\n  OPEN_CONTACT_SUCCESS,\r\n} from \"../types\";\r\nconst initialState = {\r\n  profileData: null,\r\n  currentShownProfile: null,\r\n  someProfiles: [],\r\n  totalResults: 0,\r\n  loaders: {\r\n    profileEditing: null,\r\n    profileFetching: null,\r\n    shownProfileFetching: null,\r\n    uploadingCV: null,\r\n    gettingSomeProfiles: null,\r\n  },\r\n  errors: {\r\n    profileEditing: false,\r\n    profileFetching: false,\r\n    uploadingCV: false,\r\n    gettingSomeProfiles: false,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    //sub__profile-editing\r\n\r\n    case EDIT_PROFILE: {\r\n      return { ...state, loaders: { ...state.loaders, profileEditing: true } };\r\n    }\r\n    case EDIT_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, profileEditing: false },\r\n        profileData: { ...payload.profile },\r\n      };\r\n    }\r\n\r\n    case EDIT_PROFILE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, profileEditing: undefined },\r\n        errors: { ...state.errors, profileEditing: true },\r\n      };\r\n    }\r\n\r\n    //sub__profile-fetching\r\n    case FETCH_PROFILE: {\r\n      return { ...state, loaders: { ...state.loaders, profileFetching: true } };\r\n    }\r\n\r\n    case FETCH_PROFILE_SUCCESS: {\r\n      if (!!payload.isViewingProfile) {\r\n        return {\r\n          ...state,\r\n          loaders: { ...state.loaders, shownProfileFetching: false },\r\n\r\n          currentShownProfile: { ...payload.profile },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          loaders: { ...state.loaders, profileFetching: false },\r\n          profileData: { ...payload.profile },\r\n        };\r\n      }\r\n    }\r\n    case FETCH_PROFILE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, profileFetching: undefined },\r\n        errors: { ...state.errors, profileFetching: true },\r\n      };\r\n    }\r\n\r\n    //uploading cv\r\n    case UPLOAD_CV_START: {\r\n      return { ...state, loaders: { ...state.loaders, uploadingCV: true } };\r\n    }\r\n\r\n    case UPLOAD_CV_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, uploadingCV: false },\r\n      };\r\n    }\r\n    case UPLOAD_CV_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, uploadingCV: undefined },\r\n        errors: { ...state.errors, uploadingCV: true },\r\n      };\r\n    }\r\n    //logging out\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n\r\n    // getting some profiles\r\n    case GET_SOME_PROFILES_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          gettingSomeProfiles: true,\r\n        },\r\n      };\r\n    }\r\n    case GET_SOME_PROFILES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        someProfiles: payload?.profiles || [],\r\n        totalResults: payload.totalResults || 0,\r\n        loaders: {\r\n          ...state.loaders,\r\n          gettingSomeProfiles: false,\r\n        },\r\n      };\r\n    }\r\n    case GET_SOME_PROFILES_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          gettingSomeProfiles: undefined,\r\n        },\r\n      };\r\n    }\r\n\r\n    case OPEN_CONTACT_SUCCESS: {\r\n      const st = { ...state };\r\n      const count = state.profileData?.subscribe?.count;\r\n\r\n      st.profileData.subscribe = {\r\n        ...st.profileData.subscribe,\r\n        count: count - 1,\r\n      };\r\n      console.log(\"state\", st);\r\n      console.log(\"count\", count);\r\n      if (count) {\r\n        return { ...st };\r\n      } else {\r\n        return { ...state };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\isEmpty.js",["844"],"export default data => {\r\n  if (typeof data === \"string\" && data.trim() === \"\") return true;\r\n  if (data === \"undefined\" || data === null) return true;\r\n  if (\r\n    typeof data === \"object\" &&\r\n    (Object.keys(data).length === 0 || data === [])\r\n  )\r\n    return true;\r\n  else return false;\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\notificationReducer.js",["845","846"],"import {\r\n  GET_UNREAD_NOTIFICATIONS_START,\r\n  GET_UNREAD_NOTIFICATIONS_SUCCESS,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  unread: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_UNREAD_NOTIFICATIONS_SUCCESS: {\r\n      return { ...state, unread: payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\interviewReducer.js",["847"],"import { SET_INTERVIEW_CODE, REMOVE_INTERVIEW_CODE } from \"../types\";\r\nconst initialState = {\r\n  interviewCode: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_INTERVIEW_CODE: {\r\n      return { ...state, interviewCode: payload };\r\n    }\r\n    case REMOVE_INTERVIEW_CODE: {\r\n      return { ...state, interviewCode: null };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\adminReducer.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\eventsReducer.js",["848"],"import {\r\n  UPLOAD_EVENT_START,\r\n  UPLOAD_EVENT_SUCCESS,\r\n  UPLOAD_EVENT_FAILURE,\r\n  EDIT_EVENT_START,\r\n  EDIT_EVENT_SUCCESS,\r\n  EDIT_EVENT_FAILURE,\r\n  DELETE_EVENT_START,\r\n  DELETE_EVENT_SUCCESS,\r\n  DELETE_EVENT_FAILURE,\r\n  FETCH_EVENTS_START,\r\n  FETCH_EVENTS_SUCCESS,\r\n  FETCH_EVENTS_FAILURE,\r\n  LOAD_MORE_EVENTS_START,\r\n  LOAD_MORE_EVENTS_SUCCESS,\r\n  LOAD_MORE_EVENTS_FAILURE,\r\n  SET_GOING_START,\r\n  SET_GOING_SUCCESS,\r\n  SET_GOING_FAILURE\r\n} from \"../types\";\r\nconst initialState = {\r\n  events: [],\r\n  currentEvent: null,\r\n  loaders: {\r\n    uploadingEvent: null,\r\n    editingEvent: null,\r\n    deletingEvent: null,\r\n    fetchingEvents: null,\r\n    loadingMoreEvents: null,\r\n    settingGoing: null\r\n  },\r\n  errors: {\r\n    uploadingEvent: false,\r\n    editingEvent: false,\r\n    deletingEvent: false,\r\n    fetchingEvents: false,\r\n    loadingMoreEvents: false,\r\n    settingGoing: false\r\n  }\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    /* adding event start */\r\n    case UPLOAD_EVENT_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          uploadingEvent: true\r\n        },\r\n        errors: { ...state.errors, uploadingEvent: false }\r\n      };\r\n    }\r\n    case UPLOAD_EVENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          uploadingEvent: false\r\n        },\r\n        errors: { ...state.errors, uploadingEvent: false },\r\n        events: [payload, ...state.events]\r\n      };\r\n    }\r\n    case UPLOAD_EVENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          uploadingEvent: undefined\r\n        },\r\n        errors: { ...state.errors, uploadingEvent: true }\r\n      };\r\n    }\r\n    /* adding event end */\r\n\r\n    //Edit event start\r\n    case EDIT_EVENT_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          editingEvent: true\r\n        },\r\n        errors: { ...state.errors, editingEvent: false }\r\n      };\r\n    }\r\n    case EDIT_EVENT_SUCCESS: {\r\n      const events = state.events.map(event => {\r\n        if (event._id === payload.id) return { ...event, ...payload.newEvent };\r\n        return event;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        events,\r\n        loaders: {\r\n          ...state.loaders,\r\n          editingEvent: false\r\n        },\r\n        errors: { ...state.errors, editingEvent: false }\r\n      };\r\n    }\r\n\r\n    case EDIT_EVENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          editingEvent: undefined\r\n        },\r\n        errors: { ...state.errors, editingEvent: true }\r\n      };\r\n    }\r\n    //edit event end\r\n\r\n    //delete event start\r\n    case DELETE_EVENT_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          deletingEvent: true\r\n        },\r\n        errors: { ...state.errors, deletingEvent: false }\r\n      };\r\n    }\r\n    case DELETE_EVENT_SUCCESS: {\r\n      const events = state.events.filter(event => event._id !== payload.id);\r\n      return {\r\n        ...state,\r\n        events,\r\n        loaders: {\r\n          ...state.loaders,\r\n          deletingEvent: false\r\n        },\r\n        errors: { ...state.errors, deletingEvent: false }\r\n      };\r\n    }\r\n    case DELETE_EVENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          deletingEvent: undefined\r\n        },\r\n        errors: { ...state.errors, deletingEvent: true }\r\n      };\r\n    }\r\n    //delete event end\r\n\r\n    //fetch event start\r\n    case FETCH_EVENTS_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingEvents: true\r\n        },\r\n        errors: { ...state.errors, fetchingEvents: false }\r\n      };\r\n    }\r\n    case FETCH_EVENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        events: payload instanceof Array ? [...payload] : [],\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingEvents: false\r\n        },\r\n        errors: { ...state.errors, fetchingEvents: false }\r\n      };\r\n    }\r\n    case FETCH_EVENTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingEvents: undefined\r\n        },\r\n        errors: { ...state.errors, fetchingEvents: true }\r\n      };\r\n    }\r\n    //fetch event end\r\n\r\n    //load more events start\r\n    case LOAD_MORE_EVENTS_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          loadingMoreEvents: true\r\n        },\r\n        errors: { ...state.errors, loadingMoreEvents: false }\r\n      };\r\n    }\r\n    case LOAD_MORE_EVENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          loadingMoreEvents: false\r\n        },\r\n        errors: { ...state.errors, loadingMoreEvents: false }\r\n      };\r\n    }\r\n    case LOAD_MORE_EVENTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          loadingMoreEvents: undefined\r\n        },\r\n        errors: { ...state.errors, loadingMoreEvents: true }\r\n      };\r\n    }\r\n    //load more events end\r\n\r\n    //set going start\r\n    case SET_GOING_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          settingGoing: true\r\n        },\r\n        errors: { ...state.errors, settingGoing: false }\r\n      };\r\n    }\r\n    case SET_GOING_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          settingGoing: false\r\n        },\r\n        errors: { ...state.errors, settingGoing: false }\r\n      };\r\n    }\r\n\r\n    case SET_GOING_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          settingGoing: undefined\r\n        },\r\n        errors: { ...state.errors, settingGoing: true }\r\n      };\r\n    }\r\n    //set going end\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\filtersReducers.js",["849"],"import moment from \"moment\";\r\n\r\n// Filters Reducer\r\n\r\nconst filtersReducerDefaultState = {\r\n  text: \"\",\r\n  sortBy: \"date\",\r\n  startDate: moment().startOf(\"month\"),\r\n  endDate: moment().endOf(\"month\")\r\n};\r\n\r\nexport default (state = filtersReducerDefaultState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TEXT_FILTER\":\r\n      return {\r\n        ...state,\r\n        text: action.text\r\n      };\r\n    case \"SORT_BY_AMOUNT\":\r\n      return {\r\n        ...state,\r\n        sortBy: \"amount\"\r\n      };\r\n    case \"SORT_BY_DATE\":\r\n      return {\r\n        ...state,\r\n        sortBy: \"date\"\r\n      };\r\n    case \"SET_START_DATE\":\r\n      return {\r\n        ...state,\r\n        startDate: action.startDate\r\n      };\r\n    case \"SET_END_DATE\":\r\n      return {\r\n        ...state,\r\n        endDate: action.endDate\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\blogReducer.js",["850"],"import {\r\n  UPLOAD_POST_START,\r\n  UPLOAD_POST_SUCCESS,\r\n  UPLOAD_POST_FAILURE,\r\n  EDIT_POST_START,\r\n  EDIT_POST_SUCCESS,\r\n  EDIT_POST_FAILURE,\r\n  DELETE_POST_START,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_FAILURE,\r\n  FETCH_POSTS_START,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_FAILURE,\r\n  LOAD_MORE_POSTS_START,\r\n  LOAD_MORE_POSTS_SUCCESS,\r\n  LOAD_MORE_POSTS_FAILURE\r\n} from \"../types\";\r\nconst initialState = {\r\n  posts: [],\r\n  currentPost: null,\r\n  loaders: {\r\n    uploadingPost: null,\r\n    editingPost: null,\r\n    deletingPost: null,\r\n    fetchingPosts: null,\r\n    loadingMorePosts: null\r\n  },\r\n  errors: {\r\n    uploadingPost: false,\r\n    editingPost: false,\r\n    deletingPost: false,\r\n    fetchingPosts: false,\r\n    loadingMorePosts: false\r\n  }\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    /* adding post start */\r\n    case UPLOAD_POST_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          uploadingPost: true\r\n        },\r\n        errors: { ...state.errors, uploadingPost: false }\r\n      };\r\n    }\r\n    case UPLOAD_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          uploadingPost: false\r\n        },\r\n        errors: { ...state.errors, uploadingPost: false },\r\n        posts: [payload, ...state.posts]\r\n      };\r\n    }\r\n    case UPLOAD_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          uploadingPost: undefined\r\n        },\r\n        errors: { ...state.errors, uploadingPost: true }\r\n      };\r\n    }\r\n    /* adding post end */\r\n\r\n    //Edit post start\r\n    case EDIT_POST_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          editingPost: true\r\n        },\r\n        errors: { ...state.errors, editingPost: false }\r\n      };\r\n    }\r\n    case EDIT_POST_SUCCESS: {\r\n      const posts = state.posts.map(post => {\r\n        if (post._id === payload.id) return { ...post, ...payload.newPost };\r\n        return post;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        posts,\r\n        loaders: {\r\n          ...state.loaders,\r\n          editingPost: false\r\n        },\r\n        errors: { ...state.errors, editingPost: false }\r\n      };\r\n    }\r\n\r\n    case EDIT_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          editingPost: undefined\r\n        },\r\n        errors: { ...state.errors, editingPost: true }\r\n      };\r\n    }\r\n    //edit post end\r\n\r\n    //delete post start\r\n    case DELETE_POST_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          deletingPost: true\r\n        },\r\n        errors: { ...state.errors, deletingPost: false }\r\n      };\r\n    }\r\n    case DELETE_POST_SUCCESS: {\r\n      const posts = state.posts.filter(post => post._id !== payload.id);\r\n      return {\r\n        ...state,\r\n        posts,\r\n        loaders: {\r\n          ...state.loaders,\r\n          deletingPost: false\r\n        },\r\n        errors: { ...state.errors, deletingPost: false }\r\n      };\r\n    }\r\n    case DELETE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          deletingPost: undefined\r\n        },\r\n        errors: { ...state.errors, deletingPost: true }\r\n      };\r\n    }\r\n    //delete post end\r\n\r\n    //fetch post start\r\n    case FETCH_POSTS_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingPosts: true\r\n        },\r\n        errors: { ...state.errors, fetchingPosts: false }\r\n      };\r\n    }\r\n    case FETCH_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        posts: payload instanceof Array ? [...payload] : [],\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingPosts: false\r\n        },\r\n        errors: { ...state.errors, fetchingPosts: false }\r\n      };\r\n    }\r\n    case FETCH_POSTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingPosts: undefined\r\n        },\r\n        errors: { ...state.errors, fetchingPosts: true }\r\n      };\r\n    }\r\n    //fetch post end\r\n\r\n    //load more posts start\r\n    case LOAD_MORE_POSTS_START: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          loadingMorePosts: true\r\n        },\r\n        errors: { ...state.errors, loadingMorePosts: false }\r\n      };\r\n    }\r\n    case LOAD_MORE_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, ...payload],\r\n        loaders: {\r\n          ...state.loaders,\r\n          loadingMorePosts: false\r\n        },\r\n        errors: { ...state.errors, loadingMorePosts: false }\r\n      };\r\n    }\r\n    case LOAD_MORE_POSTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          loadingMorePosts: undefined\r\n        },\r\n        errors: { ...state.errors, loadingMorePosts: true }\r\n      };\r\n    }\r\n    //load more posts end\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\jobReducer.js",["851"],"import {\r\n  CREATE_JOB_FAILURE,\r\n  CREATE_JOB_START,\r\n  CREATE_JOB_SUCCESS,\r\n  DELETE_JOB_FAILURE,\r\n  DELETE_JOB_START,\r\n  DELETE_JOB_SUCCESS,\r\n  EDIT_JOB_FAILURE,\r\n  EDIT_JOB_START,\r\n  EDIT_JOB_SUCCESS,\r\n  FETCH_JOBS_FAILURE,\r\n  FETCH_JOBS_START,\r\n  FETCH_JOBS_SUCCESS,\r\n  FETCH_USER_JOBS_START,\r\n  FETCH_USER_JOBS_SUCCESS,\r\n  FETCH_USER_JOBS_FAILURE,\r\n  FETCH_JOB_APPLICANTS_START,\r\n  FETCH_JOB_APPLICANTS_SUCCESS,\r\n  FETCH_JOB_APPLICANTS_FAILURE,\r\n  GET_JOB_FAILURE,\r\n  GET_JOB_START,\r\n  GET_JOB_SUCCESS,\r\n  ADD_QUESTION_START,\r\n  ADD_QUESTION_SUCCESS,\r\n  ADD_QUESTION_FAILURE,\r\n  DELETE_QUESTION_START,\r\n  DELETE_QUESTION_SUCCESS,\r\n  DELETE_QUESTION_FAILURE,\r\n  GET_APPLICANTS_START,\r\n  GET_APPLICANTS_SUCCESS,\r\n  GET_APPLICANTS_FAILURE,\r\n  APPLY_FOR_JOB_START,\r\n  APPLY_FOR_JOB_SUCCESS,\r\n  APPLY_FOR_JOB_FAILURE,\r\n  GET_APPLIED_JOBS_START,\r\n  GET_APPLIED_JOBS_SUCCESS,\r\n  GET_APPLIED_JOBS_FAILURE,\r\n  CANCEL_JOB_APPLICATION_START,\r\n  CANCEL_JOB_APPLICATION_SUCCESS,\r\n  CANCEL_JOB_APPLICATION_FAILURE,\r\n  LOGOUT_SUCCESS,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  jobs: [],\r\n  totalResults: 0,\r\n  userJobs: [],\r\n  jobApplicants: [],\r\n  currentJob: null,\r\n  loaders: {\r\n    creatingJob: null,\r\n    editingJob: null,\r\n    deletingJob: null,\r\n    fetchingJobs: null,\r\n    fetchingUserJobs: null,\r\n    fetchingJobApplicants: null,\r\n    gettingJob: null,\r\n    addingQuestion: null,\r\n    deletingQuestion: null,\r\n    gettingApplicants: null,\r\n    applyingForJob: null,\r\n    gettingAppliedJobs: null,\r\n    cancellingApplication: null,\r\n  },\r\n  errors: {\r\n    creatingJob: false,\r\n    editingJob: false,\r\n    deletingJob: false,\r\n    fetchingJobs: false,\r\n    fetchingUserJobs: false,\r\n    fetchingJobApplicants: false,\r\n    gettingJob: false,\r\n    addingQuestion: false,\r\n    deletingQuestion: false,\r\n    gettingApplicants: false,\r\n    applyingForJob: false,\r\n    gettingAppliedJobs: false,\r\n    cancellingApplication: false,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CREATE_JOB_START: {\r\n      const st = { ...state };\r\n      st.loaders.creatingJob = true;\r\n      return st;\r\n    }\r\n    case CREATE_JOB_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders.creatingJob = false;\r\n      st.jobs = [{ ...payload }, ...st.jobs];\r\n      st.userJobs = [{ ...payload }, ...st.userJobs];\r\n      return st;\r\n    }\r\n    case CREATE_JOB_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, creatingJob: true };\r\n      st.loaders = { ...st.loaders, creatingJob: undefined };\r\n      return st;\r\n    }\r\n    case DELETE_JOB_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, deletingJob: true };\r\n      return st;\r\n    }\r\n    case DELETE_JOB_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, deletingJob: false };\r\n\r\n      st.jobs = [...st.jobs.filter((job) => job._id !== payload)];\r\n      st.userJobs = [...st.userJobs.filter((job) => job._id !== payload)];\r\n\r\n      return st;\r\n    }\r\n    case DELETE_JOB_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, deletingJob: true };\r\n      st.loaders = { ...st.loaders, deletingJob: undefined };\r\n      return st;\r\n    }\r\n    case EDIT_JOB_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, editingJob: true };\r\n      return st;\r\n    }\r\n    case EDIT_JOB_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, editingJob: false };\r\n      st.jobs = st.jobs.map((job) =>\r\n        payload.jobId === job._id ? payload.newJob : job\r\n      );\r\n      st.userJobs = st.userJobs.map((job) =>\r\n        payload.jobId === job._id ? payload.newJob : job\r\n      );\r\n      return st;\r\n    }\r\n    case EDIT_JOB_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, editingJob: true };\r\n      st.loaders = { ...st.loaders, editingJob: undefined };\r\n      return st;\r\n    }\r\n    case FETCH_JOBS_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, fetchingJobs: true };\r\n      return st;\r\n    }\r\n    case FETCH_JOBS_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, fetchingJobs: false };\r\n      st.jobs = payload.jobs ? [...payload.jobs] : [];\r\n      st.totalResults = payload.totalResults;\r\n      return st;\r\n    }\r\n    case FETCH_JOBS_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, fetchingJobs: true };\r\n      st.loaders = { ...st.loaders, fetchingJobs: undefined };\r\n      return st;\r\n    }\r\n\r\n    case FETCH_USER_JOBS_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, fetchingUserJobs: true };\r\n      return st;\r\n    }\r\n    case FETCH_USER_JOBS_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, fetchingUserJobs: false };\r\n      st.userJobs = [...payload];\r\n      return st;\r\n    }\r\n    case FETCH_USER_JOBS_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, fetchingUserJobs: true };\r\n      st.loaders = { ...st.loaders, fetchingUserJobs: undefined };\r\n      return st;\r\n    }\r\n\r\n    case FETCH_JOB_APPLICANTS_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, fetchingJobApplicants: true };\r\n      return st;\r\n    }\r\n    case FETCH_JOB_APPLICANTS_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, fetchingJobApplicants: false };\r\n\r\n      st.jobApplicants = [...payload];\r\n      return st;\r\n    }\r\n    case FETCH_JOB_APPLICANTS_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, fetchingJobApplicants: true };\r\n      st.loaders = { ...st.loaders, fetchingJobApplicants: undefined };\r\n      return st;\r\n    }\r\n\r\n    case GET_JOB_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, gettingJob: true };\r\n      return st;\r\n    }\r\n    case GET_JOB_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, gettingJob: false };\r\n      st.currentJob = { ...payload };\r\n      return st;\r\n    }\r\n    case GET_JOB_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, gettingJob: true };\r\n      st.loaders = { ...st.loaders, gettingJob: undefined };\r\n      return st;\r\n    }\r\n\r\n    case ADD_QUESTION_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, addingQuestion: true };\r\n      return st;\r\n    }\r\n    case ADD_QUESTION_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, addingQuestion: false };\r\n      st.currentJob = {\r\n        ...st.currentJob,\r\n        quiz: [...payload],\r\n      };\r\n\r\n      return st;\r\n    }\r\n    case ADD_QUESTION_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, addingQuestion: true };\r\n      st.loaders = { ...st.loaders, addingQuestion: undefined };\r\n      return st;\r\n    }\r\n\r\n    case DELETE_QUESTION_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, deletingQuestion: true };\r\n      return st;\r\n    }\r\n    case DELETE_QUESTION_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, deletingQuestion: false };\r\n      st.currentJob = {\r\n        ...st.currentJob,\r\n        quiz: st.currentJob.quiz.filter((quiz) => quiz._id !== payload),\r\n      };\r\n\r\n      return st;\r\n    }\r\n    case DELETE_QUESTION_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, deletingQuestion: true };\r\n      st.loaders = { ...st.loaders, deletingQuestion: undefined };\r\n      return st;\r\n    }\r\n    //applicants\r\n    case GET_APPLICANTS_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, gettingApplicants: true };\r\n      return st;\r\n    }\r\n    case GET_APPLICANTS_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, gettingApplicants: false };\r\n      st.jobApplicants = [...payload];\r\n      return st;\r\n    }\r\n    case GET_APPLICANTS_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, gettingApplicants: true };\r\n      st.loaders = { ...st.loaders, gettingApplicants: undefined };\r\n      return st;\r\n    }\r\n\r\n    case APPLY_FOR_JOB_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, applyingForJob: true };\r\n      return st;\r\n    }\r\n    case APPLY_FOR_JOB_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, applyingForJob: false };\r\n      return st;\r\n    }\r\n    case APPLY_FOR_JOB_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, applyingForJob: true };\r\n      st.loaders = { ...st.loaders, applyingForJob: undefined };\r\n      return st;\r\n    }\r\n\r\n    case GET_APPLIED_JOBS_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, gettingAppliedJobs: true };\r\n      return st;\r\n    }\r\n    case GET_APPLIED_JOBS_SUCCESS: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, gettingAppliedJobs: false };\r\n      st.userJobs = [...payload];\r\n      return st;\r\n    }\r\n    case GET_APPLIED_JOBS_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, gettingAppliedJobs: true };\r\n      st.loaders = { ...st.loaders, gettingAppliedJobs: undefined };\r\n      return st;\r\n    }\r\n\r\n    case CANCEL_JOB_APPLICATION_START: {\r\n      const st = { ...state };\r\n      st.loaders = { ...st.loaders, cancellingApplication: true };\r\n      return st;\r\n    }\r\n    case CANCEL_JOB_APPLICATION_SUCCESS: {\r\n      const st = { ...state };\r\n      st.userJobs = st.userJobs.filter((job) => job._id !== payload);\r\n      return st;\r\n    }\r\n    case CANCEL_JOB_APPLICATION_FAILURE: {\r\n      const st = { ...state };\r\n      st.errors = { ...st.errors, cancellingApplication: true };\r\n      st.loaders = { ...st.loaders, cancellingApplication: undefined };\r\n      return st;\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\redux\\reducers\\chatReducer.js",["852"],"import {\r\n  GET_CONVERSATION_START,\r\n  GET_CONVERSATION_SUCCESS,\r\n  GET_CONVERSATION_FAILURE,\r\n  FETCH_CONVERSATIONS_START,\r\n  FETCH_CONVERSATIONS_SUCCESS,\r\n  FETCH_CONVERSATIONS_FAILURE,\r\n  ADD_NEW_MESSAGE,\r\n  CHECK_AND_ADD_NEW_CONVERSATION,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  conversations: [],\r\n  currentConversation: {},\r\n  loaders: {\r\n    gettingConversation: null,\r\n    fetchingConversations: null,\r\n    creatingConversation: null,\r\n  },\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_CONVERSATION_START: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, gettingConversation: true },\r\n      };\r\n    }\r\n    case GET_CONVERSATION_SUCCESS: {\r\n      let st = { ...state };\r\n      st.currentConversation = { ...payload };\r\n\r\n      return {\r\n        ...st,\r\n        loaders: { ...state.loaders, gettingConversation: false },\r\n      };\r\n    }\r\n    case GET_CONVERSATION_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, gettingConversation: undefined },\r\n      };\r\n    }\r\n    /* ######################################## */\r\n    case FETCH_CONVERSATIONS_START: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, fetchingConversations: true },\r\n      };\r\n    }\r\n    case FETCH_CONVERSATIONS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loaders: {\r\n          ...state.loaders,\r\n          fetchingConversations: false,\r\n        },\r\n        conversations: [...payload],\r\n      };\r\n    }\r\n    case FETCH_CONVERSATIONS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loaders: { ...state.loaders, fetchingConversations: undefined },\r\n      };\r\n    }\r\n\r\n    case ADD_NEW_MESSAGE: {\r\n      let currentConv = { ...state.currentConversation };\r\n      if (currentConv.messages) {\r\n        currentConv.messages.push({ ...payload });\r\n        return {\r\n          ...state,\r\n          currentConversation: { ...currentConv },\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n\r\n    case CHECK_AND_ADD_NEW_CONVERSATION: {\r\n      let newConv = state.conversations.filter(\r\n        (conv) => conv._id !== payload._id\r\n      );\r\n      newConv.unshift({ ...payload });\r\n      return {\r\n        ...state,\r\n        conversations: newConv,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\PrivateRoute.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\StrictApplicantRoute.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\StrictCompanyRoute.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\StrictAdminRoute.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Blog\\Blog.js",["853","854"],"import React, { useEffect } from \"react\";\r\nimport BlogCard from \"./BlogCard\";\r\nimport Modal from \"react-modal\";\r\nimport BlogPostModal from \"./BlogPostModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts, loadMorePosts } from \"../../../redux/actions\";\r\n\r\nimport { useState } from \"react\";\r\nimport DotsGroup from \"../../reusable/loaders/DotsGroup\";\r\nimport moment from \"moment\";\r\n// modal settings\r\n\r\nModal.setAppElement(\"#modals-root\");\r\n\r\nconst Blog = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector(state => state.blog.posts);\r\n  const loaders = useSelector(state => state.blog.loaders);\r\n  const errors = useSelector(state => state.blog.errors);\r\n  const [getMoreCounter, setGetMoreCounter] = useState(0);\r\n  const { fetchingPosts, loadingMorePosts } = loaders || {};\r\n  const {\r\n    fetchingPosts: fetchingPostsErr,\r\n    loadingMorePosts: loadingMorePostsErr,\r\n  } = errors || {};\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [moreLoading, setMoreLoading] = useState(null);\r\n  const [localErrors, setLocalErrors] = useState({});\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n    /*    dispatch(\r\n      editPost(\"5e8d23dd0b181635b1d28a91\", {\r\n        text: \"hello world\"\r\n      })\r\n    ); */\r\n    /*dispatch(deletePost(\"5e8d239c0b181635b1d28a90\")); */\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loading && fetchingPosts === false) setLoading(false);\r\n    if (loading && fetchingPostsErr === true) {\r\n      setLoading(false);\r\n      setLocalErrors({\r\n        ...localErrors,\r\n        fetchErr: \"Network Connection Instable, please Try Refreshing Page.\",\r\n      });\r\n    }\r\n    if (moreLoading && loadingMorePosts === false) setMoreLoading(false);\r\n    if (moreLoading && loadingMorePostsErr === true) {\r\n      setMoreLoading(false);\r\n    }\r\n  }, [fetchingPosts, fetchingPostsErr, loadingMorePosts, loadingMorePostsErr]);\r\n  return (\r\n    <>\r\n      {localStorage.admToken && (\r\n        <BlogPostModal isOpen={modalIsOpen} onClose={closeModal} />\r\n      )}\r\n      <div className=\"blog\">\r\n        <div className=\"container\">\r\n          {localStorage.admToken && (\r\n            <div className=\"blog__header\">\r\n              <img\r\n                src=\"/images/Logo.svg\"\r\n                alt=\"Logo\"\r\n                width={50}\r\n                height={50}\r\n                className=\"mr-2 rounded-circle \"\r\n              />\r\n              <input\r\n                className=\"general-input\"\r\n                onKeyDown={e => e.preventDefault()}\r\n                onFocus={e => e.preventDefault()}\r\n                placeholder=\"Write your post now....\"\r\n                onClick={openModal}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {loading ? (\r\n            <DotsGroup isCentered={true} />\r\n          ) : (\r\n            <div className=\"row\">\r\n              {posts instanceof Array && posts.length > 0 ? (\r\n                <>\r\n                  {posts.map(post => (\r\n                    <BlogCard\r\n                      key={post._id}\r\n                      postId={post._id}\r\n                      isVideo={post.video}\r\n                      postingTime={moment(post.created_date).fromNow()}\r\n                      text={post.text}\r\n                      url={post.video ? post.video_link : post.image_link}\r\n                    />\r\n                  ))}\r\n                  <div\r\n                    style={{\r\n                      background: \"rgb(250,250,250)\",\r\n                      borderRadius: 20,\r\n                      width: \"100%\",\r\n                      height: 40,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      display: \"flex\",\r\n                      border: \"1px solid #DDD\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => {\r\n                      dispatch(loadMorePosts((getMoreCounter + 1) * 5));\r\n                      setMoreLoading(true);\r\n                      setGetMoreCounter(getMoreCounter + 1);\r\n                    }}\r\n                  >\r\n                    {moreLoading === true ? (\r\n                      <span className=\"spinner-border text-secondary\" />\r\n                    ) : (\r\n                      <span>Load more</span>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {localErrors.fetchErr ? (\r\n                    <div\r\n                      className=\"alert alert-danger text-center\"\r\n                      style={{ maxWidth: 400, margin: \"auto\" }}\r\n                    >\r\n                      {localErrors.fetchErr}\r\n                    </div>\r\n                  ) : (\r\n                    <p style={{ color: \"#444\" }}>No Posts Added Yet.</p>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Blog;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\Events.js",["855","856","857","858"],"import React from \"react\";\r\nimport EventCard from \"./EventCard\";\r\nimport EventPostModal from \"./EventPostModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport DotsGroup from \"../../reusable/loaders/DotsGroup\";\r\nimport { fetchEvents, loadMoreEvents } from \"../../../redux/actions\";\r\nimport moment from \"moment\";\r\nconst Events = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // states\r\n  const [fetching, setFetching] = useState(true);\r\n  const [getMoreCounter, setGetMoreCounter] = useState(0);\r\n  const [moreLoading, setMoreLoading] = useState(null);\r\n\r\n  //selectors\r\n  const events = useSelector(state => state.event.events);\r\n  const { fetchingEvents, loadingMoreEvents, settingGoing } = useSelector(\r\n    state => state.event.loaders\r\n  );\r\n  const {\r\n    fetchingEvents: fetchingEventsErr,\r\n    settingGoing: settingGoingErr,\r\n  } = useSelector(state => state.event.errors);\r\n\r\n  // EFFECTS\r\n\r\n  //mounting event\r\n  useEffect(() => {\r\n    dispatch(fetchEvents());\r\n  }, []);\r\n  useEffect(() => {\r\n    if (fetching && fetchingEvents === false) {\r\n      //success case\r\n      setFetching(false);\r\n    } else if (fetching && fetchingEventsErr === true) {\r\n      // error case\r\n      setFetching(null);\r\n    }\r\n    if (moreLoading && loadingMoreEvents === false) setMoreLoading(false);\r\n  }, [fetchingEvents, fetchingEventsErr, loadingMoreEvents, moreLoading]);\r\n  return (\r\n    <div className=\"events\">\r\n      <div className=\"container\">\r\n        {localStorage.admToken && (\r\n          <div className=\"events__header\">\r\n            <img\r\n              src=\"/images/Logo.svg\"\r\n              alt=\"Logo\"\r\n              width={50}\r\n              height={50}\r\n              className=\"mr-2 rounded-circle \"\r\n            />\r\n            <input\r\n              className=\"events__header__input general-input\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#EventPostModal\"\r\n              type=\"text\"\r\n              placeholder=\"Upload your event....\"\r\n            />\r\n            <EventPostModal />\r\n          </div>\r\n        )}\r\n        {fetching === true && <DotsGroup isCentered={true} />}\r\n        {fetching === null && (\r\n          <div className=\"alert alert-danger alert-dismissible fade show\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"remove-outline close\"\r\n              data-dismiss=\"alert\"\r\n            >\r\n              <span>&times;</span>\r\n            </button>\r\n            An error occurred while loading events, please try refreshing the\r\n            page or check your internet connection\r\n          </div>\r\n        )}\r\n        {fetching === false && (\r\n          <>\r\n            {events instanceof Array && events.length > 0 ? (\r\n              <>\r\n                {events.map(event => (\r\n                  <EventCard\r\n                    key={event._id}\r\n                    eventId={event._id}\r\n                    created_date={moment(event.created_date).fromNow()}\r\n                    title={event.title}\r\n                    desc={event.desc}\r\n                    image_link={event.image_link}\r\n                    agenda={event.agenda}\r\n                    speakers={event.speakers}\r\n                    going_counter={event.going_counter}\r\n                    time={event.time}\r\n                  />\r\n                ))}\r\n\r\n                <div\r\n                  style={{\r\n                    background: \"rgb(250,250,250)\",\r\n                    borderRadius: 20,\r\n                    width: \"100%\",\r\n                    height: 40,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    border: \"1px solid #DDD\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    dispatch(loadMoreEvents((getMoreCounter + 1) * 5));\r\n                    setMoreLoading(true);\r\n                    setGetMoreCounter(getMoreCounter + 1);\r\n                  }}\r\n                >\r\n                  {moreLoading === true ? (\r\n                    <span className=\"spinner-border text-secondary\" />\r\n                  ) : (\r\n                    <span>Load more</span>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span>No Events Added!</span>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Events;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Interview\\Interview.js",["859","860","861","862","863","864","865","866","867","868","869","870"],"import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport SimplePeer from \"simple-peer\";\r\nimport { socket } from \"../../../index\";\r\nimport $ from \"jquery\";\r\nimport { connect } from \"react-redux\";\r\nimport queryString from \"query-string\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Interview extends Component {\r\n  state = {\r\n    client: {},\r\n    companyId: this.props.match.params.company,\r\n    applicantId: this.props.match.params.applicant,\r\n    streamMode: false,\r\n    mode: \"Connecting\",\r\n    loader: true,\r\n    user: this.props.user.userData,\r\n    stream: \"\",\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.loading && this.props.applicantsLoading === false) {\r\n      this.setState({ ...this.state, loading: false });\r\n    }\r\n    if (this.props.user != prevProps.user) {\r\n      console.log(\"UPDATREEEDD\");\r\n      this.setState({ ...this.state, user: this.props.user });\r\n    }\r\n  }\r\n  startStreaming(stream) {\r\n    const video = document.getElementById(\"my-video\");\r\n    video.srcObject = stream;\r\n    video.play();\r\n\r\n    //user see himself\r\n    let user = this.props.user.userData;\r\n\r\n    //get video Stream\r\n    if (user.type) {\r\n      //  socket.emit(\"CreatePeer\",{userId:user._id,applicantId:this.state.applicantId})\r\n    }\r\n  }\r\n  CreateVideo = ({ stream, companyId, applicantId }) => {\r\n    console.log(\"STREAM MODE \", this.state.streamMode);\r\n    if (!this.state.streamMode) {\r\n      console.log(\"VIDDDEO \", stream);\r\n      let video = document.createElement(\"video\");\r\n      video.id = \"peerVideo\";\r\n      video.srcObject = stream;\r\n      video.class = \"video\";\r\n      document\r\n        .querySelector(\"#interview__another-person-video\")\r\n        .appendChild(video);\r\n      video.play();\r\n\r\n      this.setState({ streamMode: true });\r\n    }\r\n  };\r\n  InitPeer = type => {\r\n    let peer = new SimplePeer({\r\n      initiator: type == \"init\" ? true : false,\r\n      stream: this.state.stream,\r\n      trickle: false,\r\n    });\r\n\r\n    //get stream from other user\r\n    peer.on(\"stream\", stream => {\r\n      console.log(\"STREAMING\");\r\n      this.setState({ loader: false });\r\n      this.CreateVideo({\r\n        stream,\r\n        companyId: this.state.companyId,\r\n        applicantId: this.state.applicantId,\r\n      });\r\n    });\r\n    peer.on(\"close\", function () {\r\n      console.log(\"CLOSED\");\r\n      document.getElementById(\"peerVideo\").remove();\r\n      peer.destroy();\r\n    });\r\n\r\n    return peer;\r\n  };\r\n  //for peer of type init\r\n  MakePeer = applicantId => {\r\n    console.log(\"MAKE PEER\", this.state.user);\r\n\r\n    this.setState({ client: { ...this.state.client, gotAnswer: false } });\r\n    let peer = this.InitPeer(\"init\");\r\n\r\n    peer.on(\"signal\", data => {\r\n      if (!this.state.client.gotAnswer) {\r\n        console.log(\"SEND OFFER \", this.state);\r\n        socket.emit(\"Offer\", {\r\n          offer: data,\r\n          userId: this.state.companyId,\r\n          applicantId: this.state.applicantId,\r\n        });\r\n      }\r\n    });\r\n\r\n    this.setState({ client: { ...this.state.client, peer: peer } });\r\n  };\r\n  //used when get an offer from client\r\n  //for peer type not init\r\n  FrontAnswer = ({ offer, userid, applicantId }) => {\r\n    console.log(\"RECIEVE OFFER\", offer);\r\n    let peer = this.InitPeer(\"notInit\");\r\n    peer.on(\"signal\", data => {\r\n      console.log(\"FRONT ANSWER\", this.state);\r\n      socket.emit(\"Answer\", {\r\n        answer: data,\r\n        userId: this.state.companyId,\r\n        applicantId: this.state.applicantId,\r\n      });\r\n    });\r\n    peer.signal(offer);\r\n  };\r\n\r\n  SignalAnswer = ({ answer, companyId, applicantId }) => {\r\n    this.state.client.gotAnswer = true;\r\n    let peer = this.state.client.peer;\r\n    console.log(\"Signal ANSWER\", peer);\r\n    peer.signal(answer);\r\n  };\r\n\r\n  SessionActive = ({ steam, companyId, applicantId }) => {\r\n    if (\r\n      this.state.companyId == companyId &&\r\n      this.state.applicantId == applicantId\r\n    ) {\r\n      document.write(\"Session Active. please come back later\");\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //console.log(\"MOUNT \",this.props)\r\n    if (localStorage.getItem(\"#$import\") != \"#$im\") {\r\n      window.top.close();\r\n\r\n      window.location = \"/jobs\";\r\n\r\n      this.setState({ ring: false });\r\n    } else {\r\n      localStorage.removeItem(\"#$import\");\r\n    }\r\n    socket.on(\"CreatePeer\", this.MakePeer);\r\n    socket.on(\"BackOffer\", this.FrontAnswer);\r\n\r\n    socket.on(\"BackAnswer\", this.SignalAnswer);\r\n    socket.on(\"SessionActive\", this.SessionActive);\r\n\r\n    let user = this.props.user.userData;\r\n    let profile = this.props.profile;\r\n    socket.on(\"rejected\", ({ companyId }) => {\r\n      // $(\"#ring\").pause()\r\n      localStorage.removeItem(\"#$import\", \"#$im\");\r\n\r\n      this.setState({ mode: \"Busy\" });\r\n    });\r\n    socket.on(\"accepted\", ({ companyId }) => {\r\n      // $(\"#ring\").pause()\r\n      localStorage.removeItem(\"#$import\", \"#$im\");\r\n\r\n      socket.emit(\"CreatePeer\", {\r\n        userId: user._id,\r\n        applicantId: this.state.applicantId,\r\n      });\r\n      this.setState({ mode: \"Starting video call\" });\r\n    });\r\n    const values = queryString.parse(this.props.location.search);\r\n    if (values.type) {\r\n      this.setState({ mode: \"Starting video call\" });\r\n    }\r\n\r\n    if (!values.type)\r\n      socket.on(\"UserConnected\", applicantId => {\r\n        console.log(\"USSSSSSSSSSSSSSSSSSSSSSSER connected\");\r\n\r\n        socket.emit(\"CallUser\", {\r\n          applicantId,\r\n          companyName: user.name,\r\n          companyId: user._id,\r\n          companyImg: profile.image,\r\n        });\r\n        this.setState({ mode: \"Ring\" });\r\n      });\r\n\r\n    const video = document.getElementById(\"my-video\");\r\n    let companyId = this.state.companyId;\r\n    let applicantId = this.state.applicantId;\r\n    socket.emit(\"CheckOnline\", { applicantId, companyId });\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true }) // get browser perm\r\n      .then(stream => {\r\n        this.setState({ stream });\r\n        this.startStreaming(stream);\r\n\r\n        console.log(stream);\r\n        const values = queryString.parse(this.props.location.search);\r\n        if (values.type) {\r\n          socket.emit(\"accept\", { companyId: this.state.companyId });\r\n\r\n          console.log(\"MOUNTTTTTTTTTTTTTTTT \", values);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(\"EERRRRORR \", e);\r\n      });\r\n  }\r\n\r\n  cancel = () => {\r\n    window.top.close();\r\n    socket.emit(\"cancel\", { applicantId: this.state.applicantId });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"interview\">\r\n        {this.state.mode == \"Ring\" && (\r\n          <audio id=\"ring\" autoPlay loop>\r\n            <source\r\n              src=\"/audio/sms-alert-3-daniel_simon.mp3\"\r\n              type=\"audio/mpeg\"\r\n            />\r\n          </audio>\r\n        )}\r\n\r\n        <div className=\"container\">\r\n          {this.state.loader && (\r\n            <div style={{ zIndex: 9999 }} className=\"interview-overlay\">\r\n              {this.state.mode == \"Busy\" ? (\r\n                <React.Fragment>\r\n                  <p>Busy</p>\r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <img className=\"\" src=\"/images/Eclipse-loader.gif\"></img>\r\n                  <p>{this.state.mode}...</p>\r\n                  {this.state.user.type && (\r\n                    <button onClick={this.cancel} className=\"btn btn-danger\">\r\n                      cancel\r\n                    </button>\r\n                  )}\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 col-sm-12\">\r\n              <div className=\"interview__my-video bounded-video\">\r\n                <video className=\"video\" id=\"my-video\" muted></video>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-9 col-sm-12\">\r\n              <div\r\n                id=\"interview__another-person-video\"\r\n                className=\"interview__another-person-video bounded-video\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  isAuth: state.auth.isAuth,\r\n  auth: state.auth,\r\n  user: state.user,\r\n  profile: state.profile.profileData,\r\n});\r\n\r\nexport default connect(mapStateToProps, undefined)(withRouter(Interview));\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\index.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\Notifications\\index.js",["871","872"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GET_UNREAD_NOTIFICATIONS_SUCCESS } from \"../../redux/types\";\r\nimport { markAsRead } from \"../../services/notification\";\r\nconst NotificationItem = ({ notf, _handleRead }) => {\r\n  const { notificationType: type, isRead, job, title, body, url } = notf;\r\n  let content = null;\r\n\r\n  if (type === \"job\") {\r\n    content = (\r\n      <Link style={{ textDecoration: \"none\" }} to={`/job/${job}`}>\r\n        <div\r\n          className={`notification-item dropdown-item ${!isRead && \"unread\"}`}\r\n        >\r\n          <h5>{title}</h5>\r\n          <p>{body}</p>\r\n        </div>\r\n      </Link>\r\n    );\r\n  } else if (type === \"url\") {\r\n    content = (\r\n      <a href={url} style={{ textDecoration: \"none\" }} target=\"_blank\">\r\n        <div\r\n          className={`notification-item dropdown-item ${!isRead && \"unread\"}`}\r\n        >\r\n          <h5>{title}</h5>\r\n          <p>{body}</p>\r\n        </div>\r\n      </a>\r\n    );\r\n  } else {\r\n    content = (\r\n      <div\r\n        className={`notification-item dropdown-item  ${!isRead && \"unread\"}`}\r\n        style={{ cursor: \"default\" }}\r\n      >\r\n        <h5>{title}</h5>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"navbar-item p-2\"\r\n        onClick={() => {\r\n          if (!!notf._id) {\r\n            _handleRead(notf._id);\r\n          } else {\r\n            _handleRead(notf.notificationId);\r\n          }\r\n        }}\r\n      >\r\n        {content}\r\n      </div>\r\n      <div className=\"dropdown-divider\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Notifications = ({ notfs = [] }) => {\r\n  const dispatch = useDispatch();\r\n  const _handleRead = async (id) => {\r\n    try {\r\n      await markAsRead(id);\r\n      const newNotfs = notfs.filter((notf) => notf._id !== id);\r\n      dispatch({\r\n        type: GET_UNREAD_NOTIFICATIONS_SUCCESS,\r\n        payload: newNotfs,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <div className=\"relative-container\">\r\n      <a\r\n        type=\"button\"\r\n        data-toggle=\"dropdown\"\r\n        data-display=\"static\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        <img src=\"/images/bell.svg\" alt=\"bell\" />\r\n        {notfs.length > 0 && (\r\n          <span className=\"badge badge-danger notification-badge\">\r\n            {notfs.length}\r\n          </span>\r\n        )}\r\n      </a>\r\n      <div className=\"dropdown-menu notification-dropdown\">\r\n        {notfs.length <= 0 && (\r\n          <h3 className=\"text-center mt-5\">No available notifications</h3>\r\n        )}\r\n        {notfs.map((notf, key) => (\r\n          <NotificationItem\r\n            key={notf.title + notf.body + key}\r\n            notf={notf}\r\n            _handleRead={_handleRead}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Blog\\BlogCard.js",["873"],"import React from \"react\";\r\nimport BlogPostModal from \"./BlogPostModal\";\r\nimport { useState } from \"react\";\r\n\r\nconst BlogCard = ({\r\n  postingTime = \"1 min ago\",\r\n  url,\r\n  isVideo = false,\r\n  text = \"Text\",\r\n  postId,\r\n}) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <>\r\n      {localStorage.admToken && (\r\n        <BlogPostModal\r\n          isOpen={modalIsOpen}\r\n          onClose={closeModal}\r\n          url={url}\r\n          isEditProcess={true}\r\n          isVideo={isVideo}\r\n          text={text}\r\n          postId={postId}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"col-12 col-lg-6 mx-auto mx-lg-0\"\r\n        style={{ maxWidth: 600 }}\r\n      >\r\n        <div className=\"blogCard\">\r\n          <div className=\"blogCard__header d-flex\">\r\n            <img\r\n              src=\"/images/Logo.svg\"\r\n              alt=\"Logo\"\r\n              width={50}\r\n              height={50}\r\n              className=\"mr-2 mb-3 rounded-circle \"\r\n            />\r\n            <div className=\"blogCard__header__text \">\r\n              <h4 className=\"mb-0\">WorkEgypt</h4>\r\n              <p className=\"mb-0\">Telecom and communication company</p>\r\n              <small>{postingTime}</small>\r\n            </div>\r\n            {localStorage.admToken && (\r\n              <i\r\n                className=\"fas fa-pen ml-auto\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={openModal}\r\n              />\r\n            )}\r\n          </div>\r\n          {!!url && (\r\n            <>\r\n              <div\r\n                className=\"responsive_img_container\"\r\n                style={{ width: \"100%\", height: 300, borderRadius: 5 }}\r\n              >\r\n                {isVideo ? (\r\n                  <iframe\r\n                    src={url}\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                ) : (\r\n                  <img className=\"blogCard__img\" src={url} alt=\"\" />\r\n                )}\r\n              </div>\r\n              <hr />\r\n            </>\r\n          )}\r\n          <p className=\"mt-4 mx-5\">{text}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogCard;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Blog\\BlogPostModal.js",["874","875","876","877"],"import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uploadPost, deletePost, editPost } from \"../../../redux/actions\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    maxWidth: 500,\r\n    backgroundColor: \"transparent\",\r\n    color: \"#333\",\r\n    margin: \"auto\",\r\n    height: \"auto\",\r\n    border: \"none\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  overlay: {\r\n    background: \"rgba(10,10,10,0.3)\",\r\n    display: \"flex\",\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\nconst inputStyle = { resize: \"none\", width: \"100%\" };\r\nfunction BlogPostModal({\r\n  isOpen,\r\n  onClose,\r\n  isEditProcess,\r\n  url = \"\",\r\n  isVideo = false,\r\n  text = \"\",\r\n  postId\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const loaders = useSelector(state => state.blog.loaders);\r\n  const errors = useSelector(state => state.blog.errors);\r\n  const { uploadingPost, editingPost, deletingPost } = loaders || {};\r\n  const {\r\n    uploadingPost: uploadingPostErr,\r\n    editingPost: editingPostErr,\r\n    deletingPost: deletingPostErr\r\n  } = errors || {};\r\n\r\n  const [post, setPost] = useState({\r\n    text: \"\",\r\n    url: \"\",\r\n    isVideo: false\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState();\r\n  const [imageUploading, setImageUploading] = useState();\r\n  const [uploadSuccess, setUploadSuccess] = useState();\r\n  const onChangeHandler = ({ target }) => {\r\n    let controlledVal =\r\n      target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    setPost(prevPost => ({ ...prevPost, [target.name]: controlledVal }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImageUploading(null);\r\n    setSuccess(null);\r\n    setUploadSuccess(null);\r\n    if (isEditProcess) {\r\n      setPost({ url, isVideo, text });\r\n    }\r\n  }, []);\r\n  //handling loaders\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (\r\n      (loading && uploadingPost === false) ||\r\n      (loading && editingPost === false) ||\r\n      (loading && deletingPost === false)\r\n    ) {\r\n      setLoading(false);\r\n      setSuccess(true);\r\n      timeout = setTimeout(() => {\r\n        onClose();\r\n      }, 1500);\r\n    }\r\n  }, [uploadingPost, editingPost, deletingPost]);\r\n  //handling errors\r\n  useEffect(() => {\r\n    if (\r\n      (loading && uploadingPostErr === true) ||\r\n      (loading && editingPostErr === true) ||\r\n      (loading && deletingPostErr === true)\r\n    ) {\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n  }, [uploadingPostErr, editingPostErr, deletingPostErr]);\r\n\r\n  const onPostHandler = e => {\r\n    e.preventDefault();\r\n    setLoading(false);\r\n    let uriV;\r\n    if (post.url?.includes(\"embed\")) {\r\n      uriV = post.uri.split(\"embed/\")[1];\r\n    } else {\r\n      uriV = post.url?.split(\"v=\")[1]?.split(\"&\")[0];\r\n    }\r\n    const newPost = {\r\n      video: post.isVideo,\r\n      video_link: post.isVideo ? `https://www.youtube.com/embed/${uriV}` : \"\",\r\n\r\n      image_link: post.isVideo ? \"\" : post.url,\r\n      text: post.text\r\n    };\r\n    setLoading(true);\r\n    if (isEditProcess) {\r\n      dispatch(editPost(postId, newPost));\r\n    } else {\r\n      dispatch(uploadPost(newPost));\r\n    }\r\n  };\r\n  const uploadImage = e => {\r\n    setUploadSuccess(undefined);\r\n    if (!(e.target.files && e.target.files[0])) return;\r\n    let formData = new FormData();\r\n    formData.append(\"image\", e.target.files[0]);\r\n    setImageUploading(true);\r\n    axios\r\n      .post(uris.profile.uploadCompanyImg, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        if (data?.error) return setUploadSuccess(false);\r\n        console.log(data.link);\r\n        setImageUploading(false);\r\n        setUploadSuccess(true);\r\n        setPost(prevPost => ({ ...prevPost, url: data?.link }));\r\n      })\r\n      .catch(() => setUploadSuccess(false));\r\n  };\r\n  useEffect(() => {\r\n    if (imageUploading && typeof uploadSuccess === \"boolean\") {\r\n      setImageUploading(false);\r\n    }\r\n  }, [uploadSuccess, imageUploading]);\r\n  return (\r\n    <Modal\r\n      onAfterClose={() => {\r\n        if (!isEditProcess) {\r\n          setPost({\r\n            url: \"\",\r\n            text: \"\",\r\n            isVideo: false\r\n          });\r\n        }\r\n        setImageUploading(null);\r\n        setSuccess(null);\r\n        setUploadSuccess(null);\r\n      }}\r\n      style={customStyles}\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n    >\r\n      <form\r\n        onSubmit={onPostHandler}\r\n        style={{\r\n          padding: 20,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          backgroundColor: \"#FFF\",\r\n          borderRadius: 10,\r\n          width: \"100%\"\r\n        }}\r\n      >\r\n        {success && (\r\n          <div className=\"alert alert-success text-center\">\r\n            Finished Successfully\r\n          </div>\r\n        )}\r\n        {success === false && (\r\n          <div className=\"alert alert-danger text-center\">\r\n            An Error Occurred, Please Try Again!\r\n          </div>\r\n        )}\r\n        {loading && (\r\n          <div\r\n            className=\"spinner-border\"\r\n            role=\"status\"\r\n            style={{\r\n              margin: \"auto\",\r\n              marginBottom: 12\r\n            }}\r\n          >\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        )}\r\n        <textarea\r\n          placeholder=\"Write your text here..\"\r\n          onChange={onChangeHandler}\r\n          required\r\n          style={{ ...inputStyle, height: 100, marginBottom: 10 }}\r\n          className=\"general-input\"\r\n          value={post.text}\r\n          name=\"text\"\r\n        />\r\n        {post.isVideo ? (\r\n          <input\r\n            placeholder=\"Past a youtube video url..\"\r\n            onChange={onChangeHandler}\r\n            style={{ ...inputStyle, marginBottom: 10 }}\r\n            className=\"general-input\"\r\n            value={post.url}\r\n            type=\"url\"\r\n            name=\"url\"\r\n          />\r\n        ) : (\r\n          <>\r\n            <input\r\n              onChange={uploadImage}\r\n              className=\"general-input\"\r\n              type=\"file\"\r\n              accept=\".jpg, .png\"\r\n              id=\"blog_post_image\"\r\n              hidden\r\n              name=\"url\"\r\n            />\r\n            <label\r\n              htmlFor=\"blog_post_image\"\r\n              className=\"general-input\"\r\n              style={{\r\n                ...inputStyle,\r\n                marginBottom: 10,\r\n                textAlign: \"center\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              {imageUploading === true ? (\r\n                <div className=\"spinner-border text-secondary\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              ) : (\r\n                \"Upload Image\"\r\n              )}\r\n            </label>\r\n            {post.url && (\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div\r\n                  className=\"responsive_img_container\"\r\n                  style={{\r\n                    width: 100,\r\n                    height: 100,\r\n                    borderRadius: \"50%\",\r\n                    padding: 2,\r\n                    borderColor: \"#DDD\",\r\n                    borderWidth: 2\r\n                  }}\r\n                >\r\n                  <img src={post.url} alt=\"\" style={{ borderRadius: \"50%\" }} />\r\n                </div>\r\n              </div>\r\n            )}\r\n            {uploadSuccess === false && (\r\n              <span className=\"text-danger\">\r\n                Image Upload Error, Please Try Again!\r\n              </span>\r\n            )}\r\n            {uploadSuccess === true && (\r\n              <span className=\"text-success\">Image Uploaded Successfully</span>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <div className=\"d-flex align-items-center my-3\">\r\n          <label htmlFor=\"isVideo\" className=\"mr-3\">\r\n            Upload Video\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={post.isVideo}\r\n            onChange={onChangeHandler}\r\n            id=\"isVideo\"\r\n            name=\"isVideo\"\r\n            style={{ width: 15, height: 15 }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"d-flex\">\r\n          {isEditProcess ? (\r\n            <>\r\n              <button\r\n                className=\"btn\"\r\n                style={{\r\n                  background: \"#1abc9c\",\r\n                  color: \"#FFF\",\r\n                  width: 100,\r\n                  borderRadius: 20\r\n                }}\r\n                onClick={onPostHandler}\r\n              >\r\n                Save Edits\r\n              </button>\r\n\r\n              <button\r\n                className=\"btn ml-auto\"\r\n                style={{\r\n                  background: \"#EA2027\",\r\n                  color: \"#FFF\",\r\n                  width: 100,\r\n                  borderRadius: 20\r\n                }}\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setLoading(true);\r\n                  dispatch(deletePost(postId));\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button\r\n              className=\"btn\"\r\n              onClick={onPostHandler}\r\n              style={{\r\n                background: \"#1abc9c\",\r\n                color: \"#FFF\",\r\n                width: 100,\r\n                borderRadius: 20\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"btn\"\r\n            onClick={onClose}\r\n            type=\"button\"\r\n            style={{\r\n              background: \"#34495e\",\r\n              color: \"#FFF\",\r\n              width: 100,\r\n              borderRadius: 20,\r\n              marginLeft: 10\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default BlogPostModal;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\DotsGroup.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\AgoraMain\\index.jsx",["878","879"],"import * as Cookies from \"js-cookie\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\nimport Validator from \"../../../utils/Validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { setInterviewCode } from \"../../../redux/actions\";\r\n// import \"bulma/css/bulma.css\";\r\nimport \"./index.css\";\r\nimport { validateCode } from \"../../../services/interviews\";\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      joinBtn: false,\r\n      channel: \"\",\r\n      baseMode: \"avc\",\r\n      transcode: \"interop\",\r\n      attendeeMode: \"video\",\r\n      videoProfile: \"480p_4\",\r\n      codeError: false,\r\n      validating: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keypress\", (e) => {\r\n      e.keyCode === 13 && this.handleJoin();\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} val 0-9 a-z A-Z _ only\r\n   * @param {Boolean} state\r\n   */\r\n  handleChannel = (val, state) => {\r\n    this.setState({\r\n      channel: val,\r\n      joinBtn: state,\r\n    });\r\n  };\r\n\r\n  handleJoin = async () => {\r\n    if (!this.state.joinBtn) return;\r\n    this.setState({ ...this.state, validating: true });\r\n    try {\r\n      const res = await validateCode(this.state.channel);\r\n      this.setState({ ...this.state, codeError: true, validating: false });\r\n      this.props.setInterviewCode(this.state.channel);\r\n      Cookies.set(\"channel\", this.state.channel);\r\n      Cookies.set(\"baseMode\", this.state.baseMode);\r\n      Cookies.set(\"transcode\", this.state.transcode);\r\n      Cookies.set(\"attendeeMode\", this.state.attendeeMode);\r\n      Cookies.set(\"videoProfile\", this.state.videoProfile);\r\n      this.props.history.push(\"/interview/room\");\r\n    } catch (error) {\r\n      this.setState({ ...this.state, codeError: true, validating: undefined });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ag-full\">\r\n        <div className=\"wrapper index\">\r\n          <div className=\"ag-header\"></div>\r\n          <div className=\"ag-main\">\r\n            <section className=\"login-wrapper\">\r\n              <div className=\"login-header\">\r\n                <img\r\n                  src={require(\"../../../assets/images/ag-logo.png\")}\r\n                  alt=\"\"\r\n                />\r\n                <p className=\"login-title\">WorkEgypt</p>\r\n                <p className=\"login-subtitle\">Real-Time Communications</p>\r\n              </div>\r\n              <div className=\"login-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <InputChannel\r\n                      onChange={this.handleChannel}\r\n                      placeholder=\"Enter meeting code..\"\r\n                    ></InputChannel>\r\n                  </div>\r\n                  <div className=\"col-12 mb-5\">\r\n                    <BaseOptions\r\n                      onChange={(val) => this.setState({ baseMode: val })}\r\n                    ></BaseOptions>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"column\">\r\n                    <div id=\"attendeeMode\" className=\"control\">\r\n                      <label className=\"radio\">\r\n                        <input\r\n                          onChange={(e) =>\r\n                            this.setState({ attendeeMode: e.target.value })\r\n                          }\r\n                          value=\"video\"\r\n                          type=\"radio\"\r\n                          name=\"attendee\"\r\n                          defaultChecked\r\n                        />\r\n                        <span className=\"radio-btn\"></span>\r\n                        <span className=\"radio-img video\"></span>\r\n                        <span className=\"radio-msg\">\r\n                          Video Call : join with video call\r\n                        </span>\r\n                      </label>\r\n                      <br />\r\n                      <label className=\"radio\">\r\n                        <input\r\n                          onChange={(e) =>\r\n                            this.setState({ attendeeMode: e.target.value })\r\n                          }\r\n                          value=\"audio-only\"\r\n                          type=\"radio\"\r\n                          name=\"attendee\"\r\n                        />\r\n                        <span className=\"radio-btn\"></span>\r\n                        <span className=\"radio-img audio\"></span>\r\n                        <span className=\"radio-msg\">\r\n                          Audio-only : join with audio call\r\n                        </span>\r\n                      </label>\r\n                      <br />\r\n                      <label className=\"radio\">\r\n                        <input\r\n                          onChange={(e) =>\r\n                            this.setState({ attendeeMode: e.target.value })\r\n                          }\r\n                          value=\"audience\"\r\n                          type=\"radio\"\r\n                          name=\"attendee\"\r\n                        />\r\n                        <span className=\"radio-btn\"></span>\r\n                        <span className=\"radio-img audience\"></span>\r\n                        <span className=\"radio-msg\">\r\n                          Audience : join as an audience\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.codeError && (\r\n                <p className=\"text-danger\">\r\n                  Sorry, this code is not valid. please generate a new one.\r\n                </p>\r\n              )}\r\n\r\n              <div className=\"login-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"joinBtn\"\r\n                  onClick={this.handleJoin}\r\n                  disabled={!this.state.joinBtn}\r\n                  className={`btn btn-info  ${\r\n                    !this.state.joinBtn && \"disabled\"\r\n                  }`}\r\n                >\r\n                  {!this.state.validating ? (\r\n                    \"Join\"\r\n                  ) : (\r\n                    <span className=\"spinner-border\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InputChannel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: \"\",\r\n      state: \"\",\r\n    };\r\n  }\r\n\r\n  validate = (val) => {\r\n    this.setState({\r\n      state: \"\",\r\n      errorMsg: \"\",\r\n    });\r\n    if (Validator.isNonEmpty(val.trim())) {\r\n      this.setState({\r\n        errorMsg: \"Cannot be empty!\",\r\n        state: \"is-danger\",\r\n      });\r\n      return false;\r\n    } else if (Validator.minLength(val.trim(), 9)) {\r\n      this.setState({\r\n        errorMsg: \"Code is invalid\",\r\n        state: \"is-danger\",\r\n      });\r\n      return false;\r\n    } else if (Validator.maxLength(val.trim(), 9)) {\r\n      this.setState({\r\n        errorMsg: \"Code is invalid\",\r\n        state: \"is-danger\",\r\n      });\r\n      return false;\r\n    } else if (Validator.validChar(val.trim())) {\r\n      this.setState({\r\n        state: \"is-danger\",\r\n        errorMsg:\r\n          'Only capital or lower-case letter, number and \"_\" are permitted!',\r\n      });\r\n      return false;\r\n    } else {\r\n      this.setState({\r\n        state: \"is-success\",\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let state = this.validate(e.target.value);\r\n    this.props.onChange(e.target.value, state);\r\n  };\r\n\r\n  render() {\r\n    let validateIcon = \"\";\r\n    switch (this.state.state) {\r\n      default:\r\n      case \"\":\r\n        validateIcon = \"\";\r\n        break;\r\n      case \"is-success\":\r\n        validateIcon = <i className=\"ag-icon ag-icon-valid\"></i>;\r\n        break;\r\n      case \"is-danger\":\r\n        validateIcon = <i className=\"ag-icon ag-icon-invalid\"></i>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"channel-wrapper control has-icons-left\">\r\n        <input\r\n          onInput={this.handleChange}\r\n          id=\"channel\"\r\n          className={\"ag-rounded form-control \" + this.state.state}\r\n          type=\"text\"\r\n          placeholder={this.props.placeholder}\r\n        />\r\n        <span className=\"icon is-small is-left\">\r\n          <img src={require(\"../../../assets/images/ag-login.png\")} alt=\"\" />\r\n        </span>\r\n        <span className=\"validate-icon\">{validateIcon}</span>\r\n        <div className=\"validate-msg\">{this.state.errorMsg}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass BaseOptions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._options = [\r\n      {\r\n        label: \"Agora Video Call\",\r\n        value: \"avc\",\r\n        content: \"One to one and group calls\",\r\n      },\r\n      {\r\n        label: \"Agora Live\",\r\n        value: \"al\",\r\n        content:\r\n          \"Enabling real-time interactions between the host and the audience\",\r\n      },\r\n    ];\r\n    this.state = {\r\n      active: false,\r\n      message: \"Agora Video Call\",\r\n    };\r\n  }\r\n\r\n  handleSelect = (item) => {\r\n    let msg = item.label;\r\n    let val = item.value;\r\n    this.setState({\r\n      message: msg,\r\n      active: false,\r\n    });\r\n    this.props.onChange(val);\r\n  };\r\n\r\n  render() {\r\n    const options = this._options.map((item, index) => {\r\n      return (\r\n        <div\r\n          className=\"dropdown-item\"\r\n          key={index}\r\n          onClick={(e) => this.handleSelect(item, e)}\r\n        >\r\n          <p>{item.label}</p>\r\n          <hr />\r\n          <p>{item.content}</p>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <div\r\n          className=\"dropdown-toggle\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n          // onClick={() => this.setState({ active: !this.state.active })}\r\n        >\r\n          <a\r\n            id=\"baseMode\"\r\n            className=\"ag-rounded button\"\r\n            aria-haspopup=\"true\"\r\n            aria-controls=\"baseModeOptions\"\r\n          >\r\n            <span id=\"baseOptionLabel\">{this.state.message}</span>\r\n          </a>\r\n        </div>\r\n        <div className=\"dropdown-menu\" id=\"baseModeOptions\" role=\"menu\">\r\n          <div className=\"dropdown-content\">{options}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst IndexWithRouter = withRouter(Index);\r\nexport default connect(null, { setInterviewCode })(IndexWithRouter);\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\meeting\\index.jsx",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\EventCard.js",["880","881"],"import React, { useEffect, useState } from \"react\";\r\nimport Speaker from \"./Speaker\";\r\nimport uuid from \"uuid\";\r\nimport EventPostModal from \"./EventPostModal\";\r\nimport { setGoing } from \"../../../redux/actions\";\r\nimport $ from \"jquery\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EventCard = ({\r\n  eventId,\r\n\r\n  title = \"WorkEgypt Event\",\r\n  desc,\r\n  image_link = \"http://placehold.it/100/ddd\",\r\n  going_counter,\r\n  created_date = \"1 min ago\",\r\n  time,\r\n  speakers = [],\r\n  agenda = [],\r\n}) => {\r\n  const [goingLoader, setGoingLoader] = useState(undefined);\r\n  const [registered, setRegistered] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { settingGoing } = useSelector((state) => state.event.loaders);\r\n  const { settingGoing: settingGoingErr } = useSelector(\r\n    (state) => state.event.errors\r\n  );\r\n  const _handleRegister = () => {\r\n    setGoingLoader(true);\r\n    dispatch(setGoing(eventId));\r\n  };\r\n  useEffect(() => {\r\n    const localEvents = localStorage.registeredEvents\r\n      ? JSON.parse(localStorage.registeredEvents)\r\n      : [];\r\n    const didRegister = localEvents.includes(eventId);\r\n    if (didRegister) {\r\n      setRegistered(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (goingLoader && settingGoing === false) {\r\n      setGoingLoader(false);\r\n\r\n      const localEvents = localStorage.registeredEvents\r\n        ? JSON.parse(localStorage.registeredEvents)\r\n        : [];\r\n      const newEvents = [...localEvents, eventId];\r\n      localStorage.setItem(\"registeredEvents\", JSON.stringify(newEvents));\r\n      setRegistered(true);\r\n    }\r\n    if (goingLoader && settingGoing === undefined) setGoingLoader(undefined);\r\n  }, [goingLoader, setGoingLoader, settingGoing]);\r\n\r\n  return (\r\n    <div className=\"relative-container\">\r\n      {localStorage.admToken && (\r\n        <>\r\n          <i\r\n            className=\"fas fa-pen\"\r\n            onClick={() => $(\"#EventPostModal\" + eventId).modal(\"show\")}\r\n            title=\"Edit Event\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              position: \"absolute\",\r\n              right: 20,\r\n              top: 20,\r\n            }}\r\n          />\r\n\r\n          <EventPostModal\r\n            eventId={eventId}\r\n            isEditProcess={true}\r\n            title={title}\r\n            desc={desc}\r\n            eventImageUrl={image_link}\r\n            timeFrom={time?.timeFrom?.split(\"#\")[0] || \"\"}\r\n            timeTo={time?.timeTo?.split(\"#\")[0] || \"\"}\r\n            hour_from={time?.timeTo?.split(\"#\")[1]?.split(\" \")[0] || \"\"}\r\n            minutes_from={time?.timeTo?.split(\"#\")[1]?.split(\" \")[1] || \"\"}\r\n            gmt_from={time?.timeTo?.split(\"#\")[1]?.split(\" \")[2] || \"\"}\r\n            hour_to={time?.timeFrom?.split(\"#\")[1]?.split(\" \")[0] || \"\"}\r\n            minutes_to={time?.timeFrom?.split(\"#\")[1]?.split(\" \")[1] || \"\"}\r\n            gmt_to={time?.timeFrom?.split(\"#\")[1]?.split(\" \")[2] || \"\"}\r\n            eventSpeakers={speakers || []}\r\n            eventAgenda={agenda || []}\r\n          />\r\n        </>\r\n      )}\r\n      <div className=\"eventCard row\">\r\n        <div className=\"event-agenda col-lg-6\">\r\n          <div className=\"event-agenda__header d-flex\">\r\n            <img\r\n              src=\"/images/Logo.svg\"\r\n              alt=\"Logo\"\r\n              width={50}\r\n              height={50}\r\n              className=\"mr-2 mb-3 rounded-circle\"\r\n            />\r\n            <div className=\"event-agenda__header__text \">\r\n              <h4 className=\"mb-0\">WorkEgypt</h4>\r\n              <p className=\"mb-0\">Telecom and communication company</p>\r\n              <small>{created_date}</small>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"mb-4\">{title}</h2>\r\n          <p>{desc}</p>\r\n          {image_link && (\r\n            <div className=\"responsive_img_container\">\r\n              <img className=\"event-agenda__img\" src={image_link} alt=\"\" />\r\n            </div>\r\n          )}\r\n\r\n          {agenda.map((agenda) => (\r\n            <div className=\"agenda\" key={uuid()}>\r\n              <h1 className=\"mb-3 mt-5\">{agenda.title}</h1>\r\n              {agenda.desc && <p className=\"\">{agenda.desc}</p>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"event-speaker col-lg-6\">\r\n          {speakers?.length > 0 && (\r\n            <>\r\n              <h2 className=\"text-center mb-5\">Speakers</h2>\r\n              <div className=\"row\">\r\n                {speakers.map((speaker) => (\r\n                  <div key={uuid()} className=\"col-12 col-md-6\">\r\n                    <Speaker\r\n                      speakerName={speaker.speakerName}\r\n                      speakerInfo={speaker.speakerInfo}\r\n                      speakerImgUrl={speaker.speakerImgUrl}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n          {!registered && (\r\n            <button\r\n              className=\"green-btn remove-outline\"\r\n              type=\"button\"\r\n              onClick={_handleRegister}\r\n            >\r\n              {goingLoader === true ? (\r\n                <span className=\"spinner-border text-light\" />\r\n              ) : (\r\n                \"Register Now\"\r\n              )}\r\n            </button>\r\n          )}\r\n          {goingLoader === undefined && settingGoingErr === true && (\r\n            <div className=\"alert alert-danger\">\r\n              Failed To Register, Please Try Again.\r\n            </div>\r\n          )}\r\n          {goingLoader === false && (\r\n            <div className=\"alert alert-success\">Registered successfully.</div>\r\n          )}\r\n          <h2 className=\"ml-4 mb-5\">Time</h2>\r\n\r\n          <span className=\"d-block ml-5 mb-2\">\r\n            From: {time.timeFrom?.replace(\" \", \":\").replace(\"#\", \" At \")}\r\n          </span>\r\n          <span className=\"d-block ml-5\">\r\n            To: {time.timeTo?.replace(\" \", \":\").replace(\"#\", \" At \")}\r\n          </span>\r\n          {!!localStorage.admToken && (\r\n            <h2 className=\"ml-4 my-5\">\r\n              Going\r\n              <small className=\"badge badge-primary ml-3\">\r\n                {going_counter}\r\n              </small>\r\n            </h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\EventPostModal.js",["882","883","884","885","886","887"],"import React from \"react\";\r\nimport { uploadEvent, deleteEvent, editEvent } from \"../../../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { uris } from \"../../../config\";\r\nimport uuid from \"uuid\";\r\nimport { useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nlet hoursArray = [];\r\nlet minutesArray = [];\r\nfor (let i = 1; i <= 12; i++) {\r\n  hoursArray.push(i.toString());\r\n}\r\nfor (let i = 0; i <= 59; i++) {\r\n  if (i < 10) {\r\n    minutesArray.push(\"0\" + i.toString());\r\n  } else {\r\n    minutesArray.push(i.toString());\r\n  }\r\n}\r\nconst EventPostModal = ({\r\n  eventId,\r\n  isEditProcess,\r\n  title = \"\",\r\n  desc = \"\",\r\n  eventImageUrl = \"\",\r\n  timeFrom = \"\",\r\n  timeTo = \"\",\r\n  hour_from = \"\",\r\n  minutes_from = \"\",\r\n  gmt_from = \"\",\r\n  hour_to = \"\",\r\n  minutes_to = \"\",\r\n  gmt_to = \"\",\r\n  eventSpeakers = [],\r\n  eventAgenda = []\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [deleteLoading, setDeleteLoading] = useState(undefined);\r\n  const [uploadSuccess, setUploadSuccess] = useState();\r\n  const [imageUploading, setImageUploading] = useState();\r\n\r\n  const [event, setEvent] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    eventImageUrl: \"\",\r\n    timeFrom: \"\",\r\n    timeTo: \"\",\r\n    hour_from: \"\",\r\n    minutes_from: \"\",\r\n    gmt_from: \"\",\r\n    hour_to: \"\",\r\n    minutes_to: \"\",\r\n    gmt_to: \"\"\r\n  });\r\n  const [agenda, setAgenda] = useState([]);\r\n  const [speakers, setSpeakers] = useState([]); // speakerName,speakerInfo,speakerImage\r\n  const [agendaError, setAgendaError] = useState([]);\r\n  const [speakerError, setSpeakerError] = useState([]);\r\n\r\n  /* selectors */\r\n\r\n  const { uploadingEvent, editingEvent, deletingEvent } =\r\n    useSelector(state => state.event.loaders) || {};\r\n  const {\r\n    uploadingEvent: uploadingEventErr,\r\n    editingEvent: editingEventErr,\r\n    deletingEventErr\r\n  } = useSelector(state => state.event.errors) || {};\r\n  /* handlers */\r\n  const onChangeHandler = e => {\r\n    const { name, value } = e.target;\r\n    setEvent(prevEvent => ({ ...prevEvent, [name]: value }));\r\n  };\r\n  const onAgendaChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    let prevAgenda = [...agenda];\r\n    let currentAgenda = { ...prevAgenda[index] };\r\n    prevAgenda[index] = { ...currentAgenda, [name]: value };\r\n    setAgenda([...prevAgenda]);\r\n  };\r\n  const onSpeakerChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    let prevSpeakers = [...speakers];\r\n    let currentSpeaker = { ...prevSpeakers[index] };\r\n    prevSpeakers[index] = { ...currentSpeaker, [name]: value };\r\n    setSpeakers([...prevSpeakers]);\r\n  };\r\n  const uploadImage = (e, index) => {\r\n    setUploadSuccess(undefined);\r\n    if (!(e.target.files && e.target.files[0])) return;\r\n    let formData = new FormData();\r\n    formData.append(\"image\", e.target.files[0]);\r\n    setImageUploading(true);\r\n    axios\r\n      .post(uris.profile.uploadCompanyImg, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(({ data }) => {\r\n        if (data?.error) return setUploadSuccess(false);\r\n        setImageUploading(false);\r\n        setUploadSuccess(true);\r\n        if (typeof index === \"number\") {\r\n          let newSpeaks = [...speakers];\r\n          newSpeaks[index].speakerImgUrl = data.link;\r\n          return setSpeakers([...newSpeaks]);\r\n        } else {\r\n          setEvent(prevEvent => ({ ...prevEvent, eventImageUrl: data?.link }));\r\n        }\r\n      })\r\n      .catch(() => setUploadSuccess(false));\r\n  };\r\n\r\n  const onPost = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      title: event.title,\r\n      desc: event.desc,\r\n      image_link: event.eventImageUrl,\r\n      time: {\r\n        timeFrom: `${event.timeFrom}#${event.hour_from} ${event.minutes_from} ${event.gmt_from}`,\r\n        timeTo: `${event.timeTo}#${event.hour_to} ${event.minutes_to} ${event.gmt_to}`\r\n      },\r\n\r\n      speakers: speakers.map(sp => ({\r\n        speakerName: sp.speakerName,\r\n        speakerInfo: sp.speakerInfo,\r\n        speakerImgUrl: sp.speakerImgUrl\r\n      })),\r\n      agenda: agenda.map(ag => ({ title: ag.title, desc: ag.desc }))\r\n    };\r\n    setLoading(true);\r\n    if (isEditProcess) {\r\n      dispatch(editEvent(eventId, data));\r\n    } else {\r\n      dispatch(uploadEvent(data));\r\n    }\r\n  };\r\n\r\n  const clearState = () => {\r\n    setEvent({\r\n      title: \"\",\r\n      desc: \"\",\r\n      eventImageUrl: \"\",\r\n      timeFrom: \"\",\r\n      timeTo: \"\",\r\n      hour_from: \"\",\r\n      minutes_from: \"\",\r\n      gmt_from: \"\",\r\n      hour_to: \"\",\r\n      minutes_to: \"\",\r\n      gmt_to: \"\"\r\n    });\r\n    setSpeakers([]);\r\n    setAgenda([]);\r\n  };\r\n\r\n  // EFFECTS\r\n  // -------------\r\n  /* handling edit process */\r\n  useEffect(() => {\r\n    if (isEditProcess) {\r\n      setEvent({\r\n        title,\r\n        desc,\r\n        eventImageUrl,\r\n        timeFrom,\r\n        timeTo,\r\n        hour_from,\r\n        minutes_from,\r\n        gmt_from,\r\n        hour_to,\r\n        minutes_to,\r\n        gmt_to\r\n      });\r\n      setSpeakers(eventSpeakers);\r\n      setAgenda(eventAgenda);\r\n    }\r\n  }, []);\r\n  const modal = isEditProcess ? \"#EventPostModal\" + eventId : \"#EventPostModal\";\r\n  $(modal).on(\"hidden.bs.modal\", function() {\r\n    if (!isEditProcess) clearState();\r\n    $(this).modal(\"dispose\");\r\n  });\r\n  /* handling loaders and errors */\r\n  useEffect(() => {\r\n    if (\r\n      (loading && uploadingEvent === false) ||\r\n      (loading && editingEvent === false) ||\r\n      (deleteLoading && deletingEvent === false)\r\n    ) {\r\n      setLoading(false);\r\n\r\n      const modal = isEditProcess\r\n        ? \"#EventPostModal\" + eventId\r\n        : \"#EventPostModal\";\r\n      $(modal).modal(\"hide\");\r\n    }\r\n    if (\r\n      (loading && uploadingEventErr === true) ||\r\n      (loading && editingEventErr === true)\r\n    )\r\n      setLoading(null);\r\n  }, [\r\n    uploadingEvent,\r\n    uploadingEventErr,\r\n    editingEvent,\r\n    editingEventErr,\r\n    deletingEvent\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id={\r\n        isEditProcess === true ? \"EventPostModal\" + eventId : \"EventPostModal\"\r\n      }\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content postModal\">\r\n          <form onSubmit={onPost}>\r\n            <input\r\n              className=\"general-input d-block full-width\"\r\n              type=\"text\"\r\n              placeholder=\"Title....\"\r\n              name=\"title\"\r\n              value={event.title}\r\n              required\r\n              onChange={onChangeHandler}\r\n            />\r\n            <textarea\r\n              className=\"general-input full-width\"\r\n              placeholder=\"Description....\"\r\n              name=\"desc\"\r\n              value={event.desc}\r\n              onChange={onChangeHandler}\r\n              rows=\"5\"\r\n            ></textarea>\r\n            <input\r\n              type=\"file\"\r\n              hidden\r\n              id={\r\n                isEditProcess\r\n                  ? \"event_image_upload\" + eventId\r\n                  : \"event_image_upload\"\r\n              }\r\n              accept=\".png,.jpg\"\r\n              onChange={e => uploadImage(e)}\r\n            />\r\n            {event.eventImageUrl && (\r\n              <div\r\n                className=\"responsive_img_container mb-3\"\r\n                style={{\r\n                  width: \"80%\",\r\n                  margin: \"auto\",\r\n                  border: \"1px solid #DDD\",\r\n                  padding: 3,\r\n                  height: 200,\r\n                  borderRadius: 10\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ borderRadius: 10 }}\r\n                  src={event.eventImageUrl || \"http://placehold.it/100/100\"}\r\n                />\r\n              </div>\r\n            )}\r\n            <label\r\n              style={{ cursor: \"pointer\" }}\r\n              className=\"general-input white-bg remove-outline w-100 text-center mb-3\"\r\n              htmlFor={\r\n                isEditProcess\r\n                  ? \"event_image_upload\" + eventId\r\n                  : \"event_image_upload\"\r\n              }\r\n            >\r\n              Upload Event Image\r\n              <i className=\"fas fa-upload ml-3\" />\r\n            </label>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">From</div>\r\n              <div className=\"col-6\">To</div>\r\n              <div className=\"col\">\r\n                <input\r\n                  className=\"general-input w-100\"\r\n                  type=\"date\"\r\n                  value={event.timeFrom}\r\n                  name=\"timeFrom\"\r\n                  onChange={onChangeHandler}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  className=\"general-input  w-100\"\r\n                  type=\"date\"\r\n                  value={event.timeTo}\r\n                  name=\"timeTo\"\r\n                  onChange={onChangeHandler}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <select\r\n                  className=\"general-input full-width mb-2\"\r\n                  name=\"hour_from\"\r\n                  onChange={onChangeHandler}\r\n                  value={event.hour_from}\r\n                >\r\n                  <option value=\"\">Select Hour</option>\r\n                  {hoursArray.map(hr => (\r\n                    <option key={hr} value={hr}>\r\n                      {hr}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select\r\n                  className=\"general-input full-width mb-2\"\r\n                  name=\"minutes_from\"\r\n                  onChange={onChangeHandler}\r\n                  value={event.minutes_from}\r\n                >\r\n                  <option value=\"\">Select minute</option>\r\n                  {minutesArray.map(min => (\r\n                    <option key={min} value={min}>\r\n                      {min}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  className=\"general-input full-width mb-2\"\r\n                  name=\"gmt_from\"\r\n                  onChange={onChangeHandler}\r\n                  value={event.gmt_from}\r\n                >\r\n                  <option>AM</option>\r\n                  <option>PM</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <select\r\n                  className=\"general-input full-width mb-2\"\r\n                  name=\"hour_to\"\r\n                  onChange={onChangeHandler}\r\n                  value={event.hour_to}\r\n                >\r\n                  <option value=\"\">Select Hour</option>\r\n                  {hoursArray.map(hr => (\r\n                    <option key={hr} value={hr}>\r\n                      {hr}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select\r\n                  className=\"general-input full-width mb-2\"\r\n                  name=\"minutes_to\"\r\n                  onChange={onChangeHandler}\r\n                  value={event.minutes_to}\r\n                >\r\n                  <option value=\"\">Select minute</option>\r\n                  {minutesArray.map(min => (\r\n                    <option key={min} value={min}>\r\n                      {min}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  className=\"general-input full-width mb-2\"\r\n                  name=\"gmt_to\"\r\n                  onChange={onChangeHandler}\r\n                  value={event.gmt_to}\r\n                >\r\n                  <option>AM</option>\r\n                  <option>PM</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <hr className=\"mb-5\" />\r\n            {/* speakers */}\r\n            <h6 className=\"mb-3\">Event Speakers</h6>\r\n            {speakers.map((speaker, index) => (\r\n              <React.Fragment key={speaker.id}>\r\n                {index !== 0 && (\r\n                  <div className=\"d-flex align-items-center justify-content-center mb-3\">\r\n                    <div\r\n                      className=\"bg-info\"\r\n                      style={{ width: \"30%\", height: 1 }}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {speaker.speakerImgUrl && (\r\n                  <div\r\n                    className=\"responsive_img_container mb-3\"\r\n                    style={{\r\n                      width: 100,\r\n                      margin: \"auto\",\r\n                      height: 100,\r\n                      borderRadius: \"50%\"\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ borderRadius: \"50%\" }}\r\n                      src={\r\n                        speaker.speakerImgUrl || \"http://placehold.it/100/100\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                )}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <input\r\n                    className=\"general-input d-block flex-grow-1\"\r\n                    type=\"text\"\r\n                    placeholder=\"Speaker Name....\"\r\n                    value={speaker.speakerName}\r\n                    name=\"speakerName\"\r\n                    onChange={e => onSpeakerChange(e, index)}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger ml-3\"\r\n                    style={{ width: 40, height: 40 }}\r\n                    title=\"Delete Speaker\"\r\n                    onClick={() => {\r\n                      let newSpeaks = [...speakers];\r\n                      newSpeaks.splice(index, 1);\r\n                      setSpeakers([...newSpeaks]);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-times\" style={{ color: \"#FFF\" }} />\r\n                  </button>\r\n                </div>\r\n\r\n                <textarea\r\n                  className=\"general-input d-block full-width\"\r\n                  type=\"text\"\r\n                  placeholder=\"Extra Info....\"\r\n                  value={speaker.speakerInfo}\r\n                  name=\"speakerInfo\"\r\n                  rows={5}\r\n                  onChange={e => onSpeakerChange(e, index)}\r\n                />\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\".png,.jpg\"\r\n                  onChange={e => uploadImage(e, index)}\r\n                  id={speaker.id + \"speaker\"}\r\n                />\r\n                <label\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\" general-input white-bg remove-outline w-100 text-center mb-3\"\r\n                  htmlFor={speaker.id + \"speaker\"}\r\n                >\r\n                  Upload Speaker Image\r\n                  <i className=\"ml-3 fas fa-upload\" />\r\n                </label>\r\n              </React.Fragment>\r\n            ))}\r\n            {speakerError && (\r\n              <div className=\"row text-center text-danger mb-3\">\r\n                {speakerError}\r\n              </div>\r\n            )}\r\n            Add New Speaker\r\n            <button\r\n              className=\"plus-btn ml-3\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (\r\n                  speakers.length > 0 &&\r\n                  speakers[speakers.length - 1].speakerName?.trim() === \"\"\r\n                )\r\n                  return setSpeakerError(\r\n                    \"Please fill out speaker name to be able to add others\"\r\n                  );\r\n\r\n                //success case\r\n\r\n                setSpeakerError(\"\");\r\n                setSpeakers(prevSpeakers => [\r\n                  ...prevSpeakers,\r\n                  {\r\n                    id: uuid(),\r\n                    speakerName: \"\",\r\n                    speakerInfo: \"\",\r\n                    speakerImgUrl: \"\"\r\n                  }\r\n                ]);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n            <hr className=\"mb-5\" />\r\n            <h6 className=\"mb-3\">Event Agendas</h6>\r\n            {/* agendas adding */}\r\n            {agenda.map((ag, index) => {\r\n              return (\r\n                <React.Fragment key={ag.id}>\r\n                  {index !== 0 && (\r\n                    <div className=\"d-flex align-items-center justify-content-center mb-3\">\r\n                      <div\r\n                        className=\"bg-info\"\r\n                        style={{ width: \"30%\", height: 1 }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <input\r\n                      className=\"general-input d-block flex-grow-1\"\r\n                      type=\"text\"\r\n                      placeholder=\"Agenda-1 Title....\"\r\n                      name=\"title\"\r\n                      onChange={e => onAgendaChange(e, index)}\r\n                      value={ag.title || \"\"}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger ml-3\"\r\n                      style={{ width: 40, height: 40 }}\r\n                      title=\"Delete Agenda Element\"\r\n                      onClick={() => {\r\n                        let newAgenda = [...agenda];\r\n                        newAgenda.splice(index, 1);\r\n                        console.log(newAgenda);\r\n                        setAgenda([...newAgenda]);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-times\" style={{ color: \"#FFF\" }} />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <textarea\r\n                    className=\"general-input d-block full-width\"\r\n                    placeholder=\"Agenda-1 Description....\"\r\n                    onChange={e => onAgendaChange(e, index)}\r\n                    name=\"desc\"\r\n                    rows=\"5\"\r\n                    value={ag.desc || \"\"}\r\n                  />\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n            {agendaError && (\r\n              <div className=\"row text-center text-danger mb-3\">\r\n                {agendaError}\r\n              </div>\r\n            )}\r\n            Add New Agenda\r\n            <button\r\n              className=\"plus-btn remove-outline ml-3\"\r\n              onClick={() => {\r\n                if (\r\n                  agenda.length > 0 &&\r\n                  agenda[agenda.length - 1].title?.trim() === \"\"\r\n                )\r\n                  return setAgendaError(\r\n                    \"Please fill out agenda title to be able to add others\"\r\n                  );\r\n\r\n                //success case\r\n\r\n                setAgendaError(\"\");\r\n                setAgenda(prevAgenda => [\r\n                  ...prevAgenda,\r\n                  { id: uuid(), title: \"\", desc: \"\" }\r\n                ]);\r\n              }}\r\n              type=\"button\"\r\n            >\r\n              +\r\n            </button>\r\n            <br />\r\n            {deletingEventErr === true && (\r\n              <div className=\"alert alert-danger alert-dismissible remove-outline\">\r\n                <button className=\"close\" type=\"button\" data-dismiss=\"alert\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n            {loading === null && (\r\n              <p className=\"alert alert-danger alert-sm my-2\">\r\n                Could not upload event, please try again!\r\n              </p>\r\n            )}\r\n            <div className=\"d-flex\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"post-btn green-btn remove-outline\"\r\n              >\r\n                {loading ? (\r\n                  <span className=\"spinner-border text-light\" role=\"status\" />\r\n                ) : (\r\n                  <>\r\n                    {isEditProcess ? (\r\n                      <span>Save Edits</span>\r\n                    ) : (\r\n                      <span>Post</span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </button>\r\n              {isEditProcess && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger ml-auto\"\r\n                  title=\"Delete Event\"\r\n                  onClick={() => {\r\n                    setDeleteLoading(true);\r\n                    dispatch(deleteEvent(eventId));\r\n                    $(\r\n                      isEditProcess === true\r\n                        ? \"#EventPostModal\" + eventId\r\n                        : \"#EventPostModal\"\r\n                    ).modal(\"hide\");\r\n                  }}\r\n                >\r\n                  {deletingEvent === true ? (\r\n                    <span\r\n                      className=\"spinner spinner-border text-light\"\r\n                      role=\"status\"\r\n                    />\r\n                  ) : (\r\n                    \"Delete\"\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPostModal;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\ResetPassword\\index.jsx",["888"],"import React, { useEffect, useState } from \"react\";\r\nimport qs from \"query-string\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport { resetPassword } from \"../../../services/user\";\r\nconst ResetPassword = () => {\r\n  const location = useLocation();\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const _handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const query = qs.parse(location.search);\r\n\r\n    if (newPassword !== newPasswordConfirm)\r\n      return setError(\"Password does not match confirmation!\");\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n    resetPassword(newPassword, query.token)\r\n      .then(() => setRedirect(true))\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(\"Failed, Please try again !\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const query = qs.parse(location.search);\r\n    if (!query?.token) setRedirect(true);\r\n    else {\r\n      console.log(query.token);\r\n    }\r\n  }, []);\r\n  if (redirect) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    >\r\n      <form\r\n        className=\"card\"\r\n        style={{ minWidth: 300, width: \"50vw\", borderRadius: 10 }}\r\n        onSubmit={_handleSubmit}\r\n      >\r\n        <h2 className=\"card-header\">Reset password - WorkEgypt</h2>\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <label for=\"newPass\">New password</label>\r\n            <input\r\n              required\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              type=\"password\"\r\n              className=\"general-input w-100\"\r\n              id=\"newPass\"\r\n              placeholder=\"New Password\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"newPassConfirm\">New password confirm</label>\r\n            <input\r\n              value={newPasswordConfirm}\r\n              onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n              required\r\n              type=\"password\"\r\n              className=\"general-input w-100\"\r\n              id=\"newPassConfirm\"\r\n              placeholder=\"Confirm password\"\r\n            />\r\n          </div>\r\n          {error && <div className=\"alert alert-danger\">{error}</div>}\r\n          <button disabled={loading} className=\"btn btn-block btn-primary mt-5\">\r\n            {loading ? (\r\n              <span className=\"spinner-border text-light\"></span>\r\n            ) : (\r\n              \"Submit\"\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Privacy.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\NotFound.js",["889"],"import React from \"react\";\r\n\r\nexport default () => {\r\n  return <h1>404 page not found</h1>;\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Settings.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Interview\\InterviewRoom.js",["890","891"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { removeInterviewCode } from \"../../../redux/actions/index.js\";\r\nimport {\r\n  initCall,\r\n  onPeerLeave,\r\n  onStreamAddedEvent,\r\n  onStreamRemove,\r\n  onStreamSubscribedEvent,\r\n} from \"../../../utils/aograUtils.js\";\r\nimport \"./room.css\";\r\nconst InterviewRoom = () => {\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [remoteStream, setRemoteStream] = useState(null);\r\n  const code = useSelector((state) => state.interview.interviewCode);\r\n\r\n  const _handleEndCall = () => {\r\n    setRemoteStream(null);\r\n    localStream.close();\r\n    dispatch(removeInterviewCode());\r\n  };\r\n\r\n  /* note channel name,token is all what it takes to call some user(it can be the two users ids) */\r\n\r\n  useEffect(() => {\r\n    if (code) {\r\n      // Subscribe to the remote stream when it is published\r\n      const { client, localStream } = initCall(code);\r\n      setLocalStream(localStream);\r\n      onStreamAddedEvent(client, (evt) => {\r\n        // console.log(\"stream added event\", evt);\r\n      });\r\n      // Play the remote stream when it is subsribed\r\n      onStreamSubscribedEvent(client, (stream) => {\r\n        let streamId = String(stream.getId());\r\n        setRemoteStream(streamId);\r\n        stream.play(streamId);\r\n      });\r\n      onStreamRemove(client, () => {\r\n        setRemoteStream(null);\r\n        localStream.close();\r\n        // history.replace(\"/interview/join\");\r\n      });\r\n      onPeerLeave(client, () => {\r\n        setRemoteStream(null);\r\n        localStream.close();\r\n        // history.replace(\"/interview/join\");\r\n      });\r\n    }\r\n    if (!code) {\r\n      window.location.replace(\"/interview/join\");\r\n    }\r\n  }, [code]);\r\n\r\n  if (!code) return null;\r\n  return (\r\n    <div>\r\n      <div id=\"my-stream\"></div>\r\n      {remoteStream && (\r\n        <div className=\"remote-stream\" id={remoteStream}>\r\n          <div className=\"actions\">\r\n            <button\r\n              className=\"btn btn-danger text-light\"\r\n              onClick={_handleEndCall}\r\n            >\r\n              End Call\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewRoom;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Contact.js",["892","893","894"],"import React, { Component } from \"react\";\r\nclass Contact extends Component {\r\n  state = {};\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          color: \"#FFF\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          src=\"images/contact_background.jpg\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: \"-2\",\r\n            top: 0,\r\n            right: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            objectFit: \"cover\",\r\n          }}\r\n          alt=\"\"\r\n        />\r\n        <span\r\n          style={{\r\n            position: \"absolute\",\r\n            display: \"block\",\r\n            zIndex: \"-1\",\r\n            top: 0,\r\n            right: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            backgroundColor: \" rgba(0, 10, 50,0.5)\",\r\n          }}\r\n        />\r\n        <div className=\"container avoid-navbar\">\r\n          <div className=\"row pt-4\">\r\n            <div className=\"col\">\r\n              <h3 className=\"mb-5\" style={{ position: \"relative\" }}>\r\n                Contact Links\r\n                <span\r\n                  style={{\r\n                    display: \"block\",\r\n                    position: \"absolute\",\r\n                    background: \"#6aFfff\",\r\n                    height: 2,\r\n                    width: 75,\r\n                    left: -30,\r\n                    right: 0,\r\n                    margin: \"auto\",\r\n                    marginTop: 10,\r\n                  }}\r\n                />\r\n              </h3>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <ul className=\"list-unstyled\" style={{ width: 130 }}>\r\n                  <a\r\n                    className=\"ml-5 text-light\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href=\"https://www.facebook.com/WorkEgyptHiring/\"\r\n                  >\r\n                    <li className=\"mb-3 d-flex justify-content-between \">\r\n                      <img className=\"\" src=\"images/facebook.svg\" alt=\"\" />\r\n                      Facebook\r\n                    </li>\r\n                  </a>\r\n                  <a\r\n                    className=\"ml-5 text-light\"\r\n                    href=\"https://www.instagram.com/workegypthiring\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <li className=\"mb-3 d-flex justify-content-between\">\r\n                      <img className=\"\" src=\"images/instagram.svg\" alt=\"\" />\r\n                      Instagram\r\n                    </li>\r\n                  </a>\r\n                  <a\r\n                    className=\"ml-5 text-light\"\r\n                    href=\"https://www.linkedin.com/company/workegypt\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <li className=\"mb-3 d-flex justify-content-between\">\r\n                      <img className=\"\" src=\"images/linkedin.svg\" alt=\"\" />\r\n                      LinkedIn\r\n                    </li>\r\n                  </a>\r\n                  <a\r\n                    className=\"ml-5 text-light\"\r\n                    href=\"https://chat.whatsapp.com/IEhYoefAapt7OetIrxyD3T\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <li className=\"mb-3 d-flex justify-content-between\">\r\n                      <img\r\n                        className=\"\"\r\n                        style={{ width: 25 }}\r\n                        src=\"images/whatsapp.svg\"\r\n                        alt=\"\"\r\n                      />\r\n                      WhatsApp\r\n                    </li>\r\n                  </a>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <h3 style={{ position: \"relative\" }} className=\"mb-5\">\r\n                Payment\r\n                <span\r\n                  style={{\r\n                    display: \"block\",\r\n                    position: \"absolute\",\r\n                    background: \"#6aFfff\",\r\n                    height: 2,\r\n                    width: 51,\r\n                    left: -16,\r\n                    right: 0,\r\n                    margin: \"auto\",\r\n                    marginTop: 10,\r\n                  }}\r\n                />\r\n              </h3>\r\n              <ul className=\"list-unstyled\">\r\n                <li>please contact us to pay more quota</li>\r\n                <li>+20 109 213 8126</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\AdminLogin.js",["895"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminLogin } from \"../../redux/actions\";\r\nfunction AdminLogin() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const admin = useSelector(state => state.admin);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(adminLogin(username, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (admin.loaders.login === true) setLoading(true);\r\n    else if (admin.loaders.login === false) {\r\n      setLoading(false);\r\n    } else if (admin.loaders.login === undefined) setLoading(undefined);\r\n  }, [admin.loaders.login]);\r\n  return (\r\n    <form\r\n      className=\"d-flex justify-content-center align-items-center flex-column pt-5\"\r\n      style={{ height: \"90vh\" }}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <h1 className=\"text-center display-4\">\r\n        <span\r\n          style={{\r\n            color: \"#3c82d8\",\r\n          }}\r\n        >\r\n          WorkEgypt\r\n        </span>{\" \"}\r\n        Dashboard Access\r\n      </h1>\r\n\r\n      <div\r\n        className=\"main-card-layout p-4\"\r\n        style={{ maxWidth: 500, minWidth: 400, margin: \"auto\" }}\r\n      >\r\n        <h1 className=\"text-center mb-5\">Admin Login</h1>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"admin-username\">Admin Username:</label>\r\n          <input\r\n            id=\"admin-username\"\r\n            className=\"form-control\"\r\n            placeholder=\"Admin username...\"\r\n            style={{ height: 40, borderRadius: \"1rem \" }}\r\n            value={username}\r\n            type=\"text\"\r\n            required\r\n            onChange={e => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"admin-password\">Admin password:</label>\r\n          <input\r\n            id=\"admin-password\"\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            style={{ height: 40, borderRadius: \"1rem \" }}\r\n            placeholder=\"Admin Password...\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        {loading === undefined && (\r\n          <span className=\"text-danger\">\r\n            Login Failed Please Make sure Username and Password are correct!\r\n          </span>\r\n        )}\r\n        <hr />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!!loading}\r\n          className=\"btn btn-primary btn-block\"\r\n        >\r\n          {loading === true ? \"Loading...\" : \"Login\"}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Interview\\JoinInterview.js",["896","897"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setInterviewCode } from \"../../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst JoinInterview = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const textareaRef = useRef();\r\n  const [valid, setValid] = useState(null);\r\n  const [validating, setValidating] = useState(false);\r\n  const _handleJoinClick = async () => {\r\n    setValidating(true);\r\n    setValid(null);\r\n    try {\r\n      const token = textareaRef.current.value;\r\n      if (token.length !== 9) throw new Error();\r\n      dispatch(setInterviewCode(token));\r\n      setValid(true);\r\n    } catch (error) {\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (validating && valid) {\r\n      //   success\r\n      setValidating(false);\r\n      history.replace(\"/interview/room\");\r\n    }\r\n    if (validating && valid === false) {\r\n      setValidating(undefined);\r\n    }\r\n  }, [validating, valid, setValid]);\r\n  return (\r\n    <div\r\n      className=\"container w-100  flex-centered flex-column\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      {valid === false && (\r\n        <div className=\"alert alert-danger\">Error, this code is not valid</div>\r\n      )}\r\n\r\n      <div\r\n        className=\"card\"\r\n        style={{ width: \"50vw\", height: \"auto\", minWidth: 300, minHeight: 200 }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <div className=\"flex-centered flex-column w-100 h-100\">\r\n            <div className=\"flex-grow-1 w-100\">\r\n              <h2 className=\"mb-4\">Please enter interview code</h2>\r\n              <textarea\r\n                ref={textareaRef}\r\n                placeholder=\"interview code\"\r\n                className=\"w-100 form-control\"\r\n                style={{ resize: \"none\", border: \"1px solid #DDD\" }}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={_handleJoinClick}\r\n              className=\"btn btn-primary  btn-block \"\r\n            >\r\n              Join\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinInterview;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\Home.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\Profile.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\ApplicantProfilePreview.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\CompanyProfile.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\CompanyProfilePreview.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\timeline\\Timeline.js",["898","899"],"import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport Pagination from \"react-paginate\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { fetchJobs } from \"../../../redux/actions\";\r\nimport jobsSearchFilter from \"../../../utils/selectors/jobsSearchFilter\";\r\nimport truncate_text from \"../../../utils/truncate_text\";\r\nimport DotsGroup from \"../../reusable/loaders/DotsGroup\";\r\nimport InfoCard from \"../timeline/InfoCard\";\r\nimport Post from \"../timeline/Post\";\r\nimport qs from \"query-string\";\r\n// const textFilter = useSelector(state => state.filters.text);\r\nclass Timeline extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      pageNumber: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchJobs(this.state.pageNumber);\r\n    const search = qs.parse(this.props.history.location.search);\r\n    if (!search?.page || search?.page <= 0) {\r\n      this.setState({ ...this.state, pageNumber: 0 });\r\n      this.props.history.push({\r\n        search: qs.stringify({ ...search, page: 1 }),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.loading && this.props.jobLoaders.fetchingJobs === false) {\r\n      this.setState({ ...this.state, loading: false });\r\n    }\r\n    if (this.props.filters.text !== prevProps.filters.text) {\r\n      // whenever user hits search with new text reset page number\r\n      // this.setState({ ...this.state, pageNumber: 0 });\r\n    }\r\n    if (\r\n      prevState.pageNumber !== this.state.pageNumber ||\r\n      this.props.filters.text !== prevProps.filters.text\r\n    ) {\r\n      // fetching jobs whenever page number changes || user hit search button\r\n      const { text = \"\" } = this.props.filters || {};\r\n      const query = text.trim() === \"\" ? \"\" : `?searchText=${text}`;\r\n      this.props.fetchJobs(this.state.pageNumber, query);\r\n    }\r\n  }\r\n  onPageChangeHandler = ({ selected }) => {\r\n    this.setState({\r\n      ...this.state,\r\n      pageNumber: selected,\r\n    });\r\n    const search = qs.stringify({ page: selected + 1 });\r\n    this.props.history.push({\r\n      search,\r\n    });\r\n  };\r\n  render() {\r\n    const { userData: ud, profile: pd, isAuth } = this.props;\r\n    const name = (ud && ud.name) || \"user name\";\r\n    const profession = (pd && pd?.job_title) || \"your profession\";\r\n    const img = (pd && pd?.image) || \"https://placehold.it/100/ddd\";\r\n    const { jobs = [] } = this.props.job || {};\r\n    // const searchResult = jobsSearchFilter(this.props.job.jobs, {\r\n    //   text: this.props.filters.text || \"\",\r\n    //   sortBy: this.props.filters.sortBy,\r\n    //   startDate: this.props.filters.startDate,\r\n    //   endDate: this.props.filters.endDate,\r\n    // });\r\n\r\n    return (\r\n      <div className=\"timeline avoid-navbar\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {isAuth ? (\r\n              <div className=\" col-12 col-md-9 col-lg-3 order-1 order-lg-1\">\r\n                <div className=\"profile__brief main-card-layout relative-container\">\r\n                  <div className=\"d-flex flex-column justify-content-center align-items-center mb-2\">\r\n                    <Link to=\"/profile\">\r\n                      <div\r\n                        className=\"img-preview\"\r\n                        style={{\r\n                          width: \"8rem\",\r\n                          height: \"8rem\",\r\n                        }}\r\n                      >\r\n                        <img className=\"rounded-circle\" src={img} alt=\"\" />\r\n                      </div>\r\n                    </Link>\r\n                    <div className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                      <h6>{name}</h6>\r\n\r\n                      <p className=\"text--secondary w-100 text-center\">\r\n                        {ud && ud.type === false\r\n                          ? profession\r\n                          : pd?.company_about &&\r\n                            truncate_text(pd?.company_about, 100)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <h6 className=\"main-card-layout col-12 text-center\">\r\n                Recent Jobs\r\n              </h6>\r\n            )}\r\n            <div className=\"col-lg-6 order-3 order-lg-2\">\r\n              {this.state.loading || this.props?.jobLoaders?.fetchingJobs ? (\r\n                <DotsGroup isCentered={true} />\r\n              ) : (\r\n                <main\r\n                  className=\"d-flex flex-column align-items-center \"\r\n                  style={{ height: \"87vh\" }}\r\n                >\r\n                  {jobs instanceof Array && jobs.length > 0 ? (\r\n                    <>\r\n                      <div className=\"w-100\">\r\n                        {jobs.map((job) => (\r\n                          <Post\r\n                            key={job._id}\r\n                            _id={job._id}\r\n                            userName={job.company.user.name}\r\n                            open={job.open}\r\n                            about={job.desc} //should come from job\r\n                            jobTitle={job.title}\r\n                            profileImg={\r\n                              job.company.image || \"http://placehold.it/100/ddd\"\r\n                            }\r\n                            postingTime={moment(job.created_date).fromNow(\r\n                              false\r\n                            )}\r\n                            isBelonging={isAuth && job.company._id === pd?._id}\r\n                            isAuth={isAuth}\r\n                            userId={job.company.user._id}\r\n                            companyId={job.company._id}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n\r\n                      <Pagination\r\n                        previousLabel={\"previous\"}\r\n                        forcePage={this.state.pageNumber}\r\n                        nextLabel={\"next\"}\r\n                        breakLabel={\"...\"}\r\n                        breakClassName={\"pagination_link_box\"}\r\n                        pageCount={Math.ceil(this.props.job?.totalResults / 25)}\r\n                        pageClassName=\"pagination_pages\"\r\n                        containerClassName=\"pagination_container\"\r\n                        pageLinkClassName=\"pageLinkClass\"\r\n                        activeLinkClassName=\"pagination_active_link\"\r\n                        nextClassName=\"pagination_next\"\r\n                        previousClassName=\"pagination_prev\"\r\n                        nextLinkClassName={\"prev_next_link\"}\r\n                        previousLinkClassName={\"prev_next_link\"}\r\n                        marginPagesDisplayed={2}\r\n                        pageRangeDisplayed={5}\r\n                        containerClassName={\"pagination\"}\r\n                        subContainerClassName={\"pages pagination\"}\r\n                        onPageChange={this.onPageChangeHandler}\r\n                        activeClassName={\"\"}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    \"No Results Found\"\r\n                  )}\r\n                </main>\r\n              )}\r\n            </div>\r\n            <div className=\"col-lg-3 col-12 order-2 order-lg-3\">\r\n              <h4 className=\"right-widget__title\">Today's Analysis</h4>\r\n              <div className=\"row info-card-row\">\r\n                <div className=\"col-12 col-sm-6 col-lg-12\">\r\n                  <InfoCard\r\n                    title=\"Posts\"\r\n                    info={this.props.job.jobs.length}\r\n                    src=\"/images/writing.svg\"\r\n                    loading={this.state.loading}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 col-lg-12\">\r\n                  <InfoCard\r\n                    title={\"Jobs\"}\r\n                    info={this.props.job.jobs.length}\r\n                    src=\"/images/suitcase.svg\"\r\n                    loading={this.state.loading}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userData: state.user.userData,\r\n  isAuth: state.auth.isAuth,\r\n  job: state.job,\r\n  profile: state.profile.profileData,\r\n  jobLoaders: state.job.loaders,\r\n  profileLoaders: state.profile.loaders,\r\n  userDataLoading: state.user.userDataLoading,\r\n  filters: state.filters,\r\n});\r\nexport default connect(mapStateToProps, { fetchJobs })(Timeline);\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\completeRegistration\\CompleteRegistration.js",["900"],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobDescription.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\OurJobs.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobApplyQuiz.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\AnswerJobQuiz.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\CreateJobQuiz.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\ShowJobApplicants.js",["901"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editApplicantStatus, getApplicants } from \"../../../redux/actions\";\r\nimport DotsGroup from \"../../reusable/loaders/DotsGroup\";\r\nimport JobApplicantCard from \"./JobApplicantCard\";\r\nimport { socket } from \"../../../index\";\r\nexport class ShowJobApplicants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n  popupCenter = ({ url, title, w, h }) => {\r\n    // Fixes dual-screen position                             Most browsers      Firefox\r\n    const dualScreenLeft =\r\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\r\n    const dualScreenTop =\r\n      window.screenTop !== undefined ? window.screenTop : window.screenY;\r\n\r\n    const width = window.innerWidth\r\n      ? window.innerWidth\r\n      : document.documentElement.clientWidth\r\n      ? document.documentElement.clientWidth\r\n      : window.screen.width;\r\n    const height = window.innerHeight\r\n      ? window.innerHeight\r\n      : document.documentElement.clientHeight\r\n      ? document.documentElement.clientHeight\r\n      : window.screen.height;\r\n\r\n    const systemZoom = width / window.screen.availWidth;\r\n    const left = (width - w) / 2 / systemZoom + dualScreenLeft;\r\n    const top = (height - h) / 2 / systemZoom + dualScreenTop;\r\n    const newWindow = window.open(\r\n      url,\r\n      title,\r\n      `\r\n      scrollbars=yes,\r\n      width=${w / systemZoom}, \r\n      height=${h / systemZoom}, \r\n      top=${top}, \r\n      left=${left}\r\n      `\r\n    );\r\n\r\n    if (window.focus) newWindow.focus();\r\n  };\r\n  //this.popupCenter({url:`${window.location.origin}/interview/${companyId}/${applicantId}`,title:\"workegypt\",w:\"900\",h:\"900\"})\r\n\r\n  createPeer(applicantId) {\r\n    // to insure that open popup from interview button\r\n    localStorage.setItem(\"#$import\", \"#$im\");\r\n    //Check online or not\r\n\r\n    const companyId = this.props.user.userData._id;\r\n    this.popupCenter({\r\n      url: `${window.location.origin}/interview/${companyId}/${applicantId}`,\r\n      title: \"workegypt\",\r\n      w: \"900\",\r\n      h: \"900\",\r\n    });\r\n    //socket.emit(\"CheckOnline\",{applicantId,companyId})\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { jobId } = this.props.match.params;\r\n    this.props.getApplicants(jobId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.loading && this.props.applicantsLoading === false) {\r\n      this.setState({ ...this.state, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { jobId } = this.props.match.params;\r\n    const { applicants } = this.props;\r\n    return (\r\n      <div className=\"avoid-navbar container\">\r\n        <div className=\"show-job-applicants pt-5\">\r\n          <h3 className=\"mb-4\">Job Applicants</h3>\r\n          {this.state.loading === false ? (\r\n            <div className=\"row\">\r\n              {applicants?.length > 0 ? (\r\n                <>\r\n                  {applicants.map((ap) => (\r\n                    <JobApplicantCard\r\n                      key={ap._id}\r\n                      userName={ap.applicant.user.name}\r\n                      profileImg={ap.applicant.image}\r\n                      status={ap.status}\r\n                      quizScore={ap.quiz_score + \"/10\"}\r\n                      applicantId={ap.applicant._id}\r\n                      applicantProfileId={ap.applicant.user._id}\r\n                      jobId={jobId}\r\n                      createPeer={this.createPeer.bind(this)}\r\n                      editApplicantStatus={this.props.editApplicantStatus}\r\n                    />\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <span>No Applicants Applied Yet</span>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <DotsGroup isCentered={true} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  applicants: state.job.jobApplicants,\r\n  applicantsLoading: state.job.loaders.gettingApplicants,\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editApplicantStatus, getApplicants })(\r\n  ShowJobApplicants\r\n);\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobApply.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\ApplicantAppliedJobsHistory.js",["902"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAppliedJobs, cancelJobApplication } from \"../../../redux/actions\";\r\nimport DotsGroup from \"../../reusable/loaders/DotsGroup\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ApplicationHistoryCard = ({ job }) => {\r\n  //redux config\r\n  const dispatch = useDispatch();\r\n  const userProfileId = useSelector(state => state.profile.profileData._id);\r\n  const cancellingApplication = useSelector(\r\n    state => state.job.loaders.cancellingApplication\r\n  );\r\n\r\n  //own\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (cancellingApplication === false) {\r\n      setLoading(false);\r\n    }\r\n  }, [cancellingApplication]);\r\n  return (\r\n    <div\r\n      className=\"d-flex  flex-wrap justify-content-center relative-container mb-3\"\r\n      style={{ overflow: \"hidden\" }}\r\n    >\r\n      <div\r\n        className=\"main-card-layout mr-3 relative-container\"\r\n        style={{ width: 250, overflow: \"hidden\" }}\r\n      >\r\n        {/* delete loader start */}\r\n        {loading && (\r\n          <div className=\"full-loader white\">\r\n            <span className=\"spinner-border text-danger\" role=\"status\"></span>\r\n          </div>\r\n        )}\r\n        {/* delete loader end */}\r\n        {/*  */}\r\n        <button\r\n          type=\"button \"\r\n          className=\"input--blank \"\r\n          style={{\r\n            position: \"absolute\",\r\n            background: \"transparent\",\r\n            top: 5,\r\n            right: 5\r\n          }}\r\n          onClick={() => {\r\n            setLoading(true);\r\n            dispatch(cancelJobApplication(job._id));\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times text-danger\" />\r\n        </button>\r\n        {/*  */}\r\n\r\n        <div\r\n          className=\"d-flex flex-centered flex-column flex-grow-2\r\n        h-75\r\n      \"\r\n        >\r\n          {/* company image start */}\r\n          <div\r\n            className=\"responsive_img_container rounded-circle mb-3 border\"\r\n            style={{ width: 50, height: 50 }}\r\n          >\r\n            <Link to={`/profile/${job.company._id}/${job.company.user._id}`}>\r\n              <img\r\n                src={\r\n                  (job.company && job.company.image) ||\r\n                  \"http://placehold.it/100/100\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          {/* company image end */}\r\n          <Link\r\n            to={`/profile/${job.company._id}/${job.company.user._id}`}\r\n            className=\"link-unstyled\"\r\n          >\r\n            <span>{job.company.user.name || \"company name\"}</span>\r\n          </Link>\r\n          <small className=\"text-muted\">\r\n            {moment(job.created_date).fromNow()}\r\n          </small>\r\n          <p className=\"text-center mt-3\">{job.title}</p>\r\n        </div>\r\n        <div className=\"flex-grow-1\">\r\n          <hr />\r\n          <p className=\"text-center\">\r\n            {job.applicants &&\r\n              job.applicants.find(ap => ap.applicant === userProfileId).status}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ApplicantAppliedJobsHistory() {\r\n  //redux config\r\n  const dispatch = useDispatch();\r\n  const jobs = useSelector(state => state.job.userJobs);\r\n  const gettingAppliedJobs = useSelector(\r\n    state => state.job.loaders.gettingAppliedJobs\r\n  );\r\n\r\n  //own state\r\n  useEffect(() => {\r\n    dispatch(getAppliedJobs());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"avoid-navbar  pt-4 container\">\r\n      <h3 className=\"mb-5\">Applied job History</h3>\r\n      {gettingAppliedJobs === false ? (\r\n        <>\r\n          {jobs.length > 0 ? (\r\n            <div className=\"row\">\r\n              {jobs.map(job => {\r\n                return <ApplicationHistoryCard key={job._id} job={job} />;\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"no job applications\"\r\n          )}\r\n        </>\r\n      ) : (\r\n        <DotsGroup isCentered={true} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApplicantAppliedJobsHistory;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\Analysis.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Chat.js",["903","904","905","906","907"],"/* \r\nget conversations returns a shape different than get one conversation\r\nget one conversations does not return conversation id\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { socket } from \"../../../index\";\r\nimport Contact from \"./Contact\";\r\nimport Mymessage from \"./Mymessage\";\r\nimport Reply from \"./Reply\";\r\nimport { useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport messageSentSound from \"../../../assets/message_sent.mp3\";\r\nimport messageReceivedSound from \"../../../assets/message_sound.mp3\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  fetchConversations,\r\n  getConversation,\r\n  addNewMsg,\r\n} from \"../../../redux/actions\";\r\nimport moment from \"moment\";\r\nimport { checkAddNewConv } from \"../../../redux/actions\";\r\nconst Chat = () => {\r\n  const params = useParams();\r\n  const { remoteUserID } = params || {};\r\n  const dispatch = useDispatch();\r\n  const inputRef = useRef();\r\n  // selectors\r\n  const user = useSelector((state) => state.user.userData);\r\n  const profile = useSelector((state) => state.profile.profileData);\r\n  const { conversations } = useSelector((state) => state.chat);\r\n  const { currentConversation } = useSelector((state) => state.chat);\r\n  const { fetchingConversations, gettingConversation } = useSelector(\r\n    (state) => state.chat.loaders\r\n  );\r\n  // states\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageSent, setMessageSend] = useState(false);\r\n  const [messageReceived, setMessageReceived] = useState(false);\r\n  if (!!document.getElementById(\"messages_container\")) {\r\n    document.getElementById(\r\n      \"messages_container\"\r\n    ).scrollTop = document.getElementById(\"messages_container\").scrollHeight;\r\n  }\r\n  useEffect(() => {\r\n    socket.on(\"NewMessage\", ({ message = {}, conversation = {} }) => {\r\n      if (message?.info?.to === user?._id) {\r\n        setMessageReceived(true);\r\n      }\r\n      if (message?.info?.from !== user?._id) {\r\n        // add new messages if it is not my own message\r\n        dispatch(addNewMsg(message));\r\n      }\r\n      dispatch(checkAddNewConv(conversation));\r\n    });\r\n\r\n    /* sending get conversation request */\r\n    dispatch(fetchConversations());\r\n  }, []);\r\n\r\n  const sendMessage = async (text) => {\r\n    try {\r\n      setMessageSend(true);\r\n      socket.emit(\"message\", {\r\n        text,\r\n        from: user._id,\r\n        to: remoteUserID,\r\n        type: user.type,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleInputKeyDown = ({ target, keyCode }) => {\r\n    if (keyCode === 13) {\r\n      const value = inputRef.current.value;\r\n      if (value.trim() === \"\") {\r\n        inputRef.current.value = \"\";\r\n      } else {\r\n        sendMessage(value);\r\n        const msg = {\r\n          _id: uuid(),\r\n          temp: true,\r\n          info: { from: user._id, to: remoteUserID },\r\n          text: inputRef.current.value,\r\n          created_date: Date.now(),\r\n        };\r\n        dispatch(addNewMsg(msg));\r\n        inputRef.current.value = \"\";\r\n        inputRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  /* fetching message on url id change */\r\n  useEffect(() => {\r\n    if (!!remoteUserID && fetchingConversations === false)\r\n      dispatch(getConversation(remoteUserID));\r\n  }, [remoteUserID, fetchingConversations]);\r\n\r\n  // handling loaders\r\n  useEffect(() => {\r\n    if (isLoading && fetchingConversations === false) {\r\n      //  success\r\n      setIsLoading(false);\r\n    } else if (isLoading && fetchingConversations === undefined) {\r\n      //  error\r\n      setIsLoading(false);\r\n      setErrors({ ...errors, fetch: true });\r\n    }\r\n  }, [fetchingConversations]);\r\n  useEffect(() => {\r\n    if (\r\n      gettingConversation === false &&\r\n      !!document.getElementById(\"messages_container\")\r\n    ) {\r\n      document.getElementById(\r\n        \"messages_container\"\r\n      ).scrollTop = document.getElementById(\"messages_container\").scrollHeight;\r\n    }\r\n  }, [gettingConversation]);\r\n\r\n  return (\r\n    <>\r\n      {messageSent && (\r\n        <audio\r\n          src={messageSentSound}\r\n          autoPlay\r\n          onEnded={() => setMessageSend(false)}\r\n        />\r\n      )}\r\n      {messageReceived && (\r\n        <audio\r\n          src={messageReceivedSound}\r\n          autoPlay\r\n          onEnded={() => setMessageReceived(false)}\r\n        />\r\n      )}\r\n      <div className=\"container avoid-navbar py-3 relative-container\">\r\n        {isLoading === true || gettingConversation === true ? (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n              background: \"#fff\",\r\n              zIndex: 100,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100vw\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <span\r\n              className=\"spinner spinner-border text-primary\"\r\n              style={{ width: \"6rem\", height: \"6rem\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"chat\">\r\n            <div className=\"chat__header row\">\r\n              <div className=\"col-3\">\r\n                <h2 className=\"text-center pt-5\">Messages</h2>\r\n              </div>\r\n              <div className=\"col-9 p-0\">\r\n                {remoteUserID && (\r\n                  <div className=\"chat__header-name align-items-center\">\r\n                    <div\r\n                      className=\"responsive_img_container\"\r\n                      style={{\r\n                        width: 50,\r\n                        height: 50,\r\n                        borderRadius: \"50%\",\r\n                        border: \"1px solid #DDD\",\r\n                        padding: 1,\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          currentConversation?.user_profile?.image ||\r\n                          \"http://placehold.it/100/ddd\"\r\n                        }\r\n                        alt=\"Logo\"\r\n                        className=\"mr-2 mb-3 rounded-circle\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"ml-4 text-secondary\" style={{ fontSize: 14 }}>\r\n                      {currentConversation.user_profile?.user?.name ||\r\n                        \"user name\"}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"chat__content row \">\r\n              <div className=\"all-contacts col-3\">\r\n                {conversations instanceof Array && conversations.length > 0 ? (\r\n                  <>\r\n                    {conversations.map((conv) => (\r\n                      <>\r\n                        <Contact\r\n                          key={conv?._id}\r\n                          remoteUserID={conv?.user?._id}\r\n                          remoteUserName={conv?.user?.name}\r\n                          remoteUserImg={conv?.user_profile?.image}\r\n                        />\r\n                      </>\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <p className=\"text-center text-secondary my-3\">\r\n                    No Conversations Available\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className=\"col-9 p-0\">\r\n                {!remoteUserID && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      right: 0,\r\n                      bottom: 0,\r\n                      zIndex: 100,\r\n                      background: \"#DDD\",\r\n                    }}\r\n                  />\r\n                )}\r\n                <div id=\"messages_container\" className=\"messages\">\r\n                  {currentConversation?.messages?.length > 0 ? (\r\n                    <>\r\n                      {currentConversation?.messages?.map((msg, key) => {\r\n                        return msg.info.from === user._id ? (\r\n                          <Mymessage\r\n                            imgSrc={profile?.image}\r\n                            key={msg._id + key}\r\n                            text={msg.text}\r\n                            time={moment(msg.created_date).fromNow(true)}\r\n                          />\r\n                        ) : (\r\n                          <Reply\r\n                            imgSrc={currentConversation?.user_profile?.image}\r\n                            key={msg._id + key}\r\n                            text={msg.text}\r\n                            time={moment(msg.created_date).fromNow(true)}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </>\r\n                  ) : (\r\n                    <p>start chatting with remote user name</p>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  size=\"\"\r\n                  ref={inputRef}\r\n                  placeholder=\"Write your message...\"\r\n                  onKeyDown={handleInputKeyDown}\r\n                  autoFocus\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Chat;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\payment\\Payment.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\searchProfiles\\SearchProfiles.js",["908","909","910","911","912"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport FiltrationForm from \"./FilterationForm\";\r\nimport Pagination from \"react-paginate\";\r\nimport { profile } from \"../../../utils/fixtures\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSomeProfiles } from \"../../../redux/actions\";\r\nimport isEmpty from \"../../../utils/isEmpty\";\r\nimport UserCard from \"./UserCard\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction SearchProfiles() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [filters, setFilters] = useState({\r\n    searchText: \"\",\r\n    searchBy: \"name\", //name || job title\r\n    country: \"\",\r\n    city: \"\",\r\n    language: \"\",\r\n    careerLvl: \"\",\r\n    educationLvl: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(null);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [currentPaginationIndex, setCurrentPaginationIndex] = useState(0);\r\n  const [queryString, setQueryString] = useState(\"\");\r\n  const profileLoaders = useSelector((state) => state.profile.loaders);\r\n  const subscription = useSelector(\r\n    (state) => state.profile.profileData?.subscribe\r\n  );\r\n\r\n  const profileErrors = useSelector((state) => state.profile.errors);\r\n  const someProfiles = useSelector((state) => state.profile.someProfiles);\r\n  const onChangeHandler = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    setFilters((prevFilters) => ({ ...prevFilters, [name]: value }));\r\n  }, []);\r\n  const onFormSubmitHandler = useCallback((e) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const resetFilters = useCallback(() => {\r\n    setQueryString(\"\");\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      searchBy: \"name\", //name || job title\r\n      country: \"\",\r\n      city: \"\",\r\n      language: \"\",\r\n      careerLvl: \"\",\r\n      educationLvl: \"\",\r\n    }));\r\n  }, []);\r\n  const onSetFilters = useCallback(() => {\r\n    // send filters as queries with getSomeProfiles request\r\n    let queryString = \"?\";\r\n    for (let key in filters) {\r\n      if (!isEmpty(filters[key])) {\r\n        queryString =\r\n          queryString === \"?\"\r\n            ? queryString + `${key}=${filters[key]}`\r\n            : queryString + `&${key}=${filters[key]}`;\r\n      }\r\n    }\r\n    setQueryString(queryString);\r\n  }, [filters]);\r\n\r\n  const onSearch = () => {\r\n    if (!isEmpty(filters.searchText)) {\r\n      setQueryString(\r\n        `?searchText=${filters.searchText}&searchBy=${filters.searchBy}`\r\n      );\r\n    } else {\r\n      setQueryString(\"\");\r\n    }\r\n  };\r\n  // pagination handler\r\n  const onPageChangeHandler = useCallback(({ selected }) => {\r\n    setCurrentPaginationIndex(selected);\r\n  }, []);\r\n  // handle searching and pagination requests\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getSomeProfiles(currentPaginationIndex, queryString));\r\n  }, [queryString, currentPaginationIndex]);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    // initial fetch\r\n    dispatch(getSomeProfiles(0));\r\n  }, []);\r\n\r\n  // handling fetching loaders and errors\r\n  useEffect(() => {\r\n    if (profileLoaders.gettingSomeProfiles === true) {\r\n      setLoading(true);\r\n    } else if (profileLoaders.gettingSomeProfiles === false) {\r\n      setLoading(false);\r\n    } else if (profileErrors.gettingSomeProfiles === true) {\r\n      setLoading(false);\r\n      setFetchError(true);\r\n    }\r\n  }, [profileLoaders?.gettingSomeProfiles, profileErrors?.gettingSomeProfiles]);\r\n\r\n  if (subscription?.count <= 0) return <Redirect to=\"/contact\" />;\r\n  return (\r\n    <div className=\"avoid-navbar pt-3\">\r\n      <div className=\"container\" style={{ height: \"90vh\" }}>\r\n        <div className=\"d-flex flex-column h-100\">\r\n          <FiltrationForm\r\n            onChangeHandler={onChangeHandler}\r\n            onFormSubmitHandler={onFormSubmitHandler}\r\n            resetFilters={resetFilters}\r\n            onSetFilters={onSetFilters}\r\n            onSearch={onSearch}\r\n            filters={filters}\r\n          />\r\n\r\n          <main className=\"d-flex flex-1 flex-column flex-grow-1  h-100\">\r\n            <section className=\"search-results flex-grow-1\">\r\n              {loading ? (\r\n                <div className=\"d-flex justify-content-center align-items-center \">\r\n                  <div\r\n                    className=\"spinner-border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"row\">\r\n                  {someProfiles instanceof Array && someProfiles.length > 0\r\n                    ? someProfiles.map((profile) => (\r\n                        <div\r\n                          className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-3\"\r\n                          key={profile._id}\r\n                        >\r\n                          <UserCard\r\n                            userId={profile?.user?._id}\r\n                            userImg={profile.image ? profile.image : undefined}\r\n                            username={profile?.user?.name}\r\n                          />\r\n                        </div>\r\n                      ))\r\n                    : \"No results found\"}\r\n                </div>\r\n              )}\r\n            </section>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-12\">\r\n                {!loading && (\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    {someProfiles instanceof Array &&\r\n                      someProfiles.length > 0 && (\r\n                        <Pagination\r\n                          previousLabel={\"previous\"}\r\n                          nextLabel={\"next\"}\r\n                          breakLabel={\"...\"}\r\n                          breakClassName={\"pagination_link_box\"}\r\n                          pageCount={Math.ceil(someProfiles.length / 25)}\r\n                          pageClassName=\"pagination_pages\"\r\n                          containerClassName=\"pagination_container\"\r\n                          pageLinkClassName=\"pageLinkClass\"\r\n                          activeLinkClassName=\"pagination_active_link\"\r\n                          nextClassName=\"pagination_next\"\r\n                          previousClassName=\"pagination_prev\"\r\n                          nextLinkClassName={\"prev_next_link\"}\r\n                          previousLinkClassName={\"prev_next_link\"}\r\n                          marginPagesDisplayed={2}\r\n                          pageRangeDisplayed={5}\r\n                          containerClassName={\"pagination\"}\r\n                          subContainerClassName={\"pages pagination\"}\r\n                          onPageChange={onPageChangeHandler}\r\n                          activeClassName={\"\"}\r\n                        />\r\n                      )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchProfiles;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\notification.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\Validator.js",["913","914"],"export default {\r\n  minLength(value, length) {\r\n    return value.length < length ?\r\n      1 : 0\r\n  },\r\n  maxLength(value, length) {\r\n    return value.length > length ?\r\n      1 : 0\r\n  },\r\n  validChar(value) {\r\n    return !/^[0-9a-zA-Z\\_]+$/.test(value) ?\r\n      1 : 0\r\n  },\r\n  isNonEmpty(value) {\r\n    return value === '' ?\r\n      1 : 0\r\n  }\r\n}","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\interviews.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\agora.config.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Events\\Speaker.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\user.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\aograUtils.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\ServicesCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\Footer.js",["915","916","917"],"import $ from \"jquery\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* \r\nOnly FaceBook link exists. we need to Add \r\nLinkedIn also:\r\nWhatsApp: https://chat.whatsapp.com/IEhYoefAapt7OetIrxyD3T\r\nInstagram: \r\n */\r\nconst Footer = ({ setFormShow, isAuth, userType }) => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"footer__links col-lg-4\">\r\n          <h5>WorkEgypt</h5>\r\n\r\n          <ul className=\"footer-list list-unstyled ml-auto\">\r\n            <li className=\"footer-item\">\r\n              <NavLink\r\n                className=\"footer-link\"\r\n                activeclassname=\"active\"\r\n                exact\r\n                to=\"/\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"footer-item\">\r\n              <a\r\n                className=\"footer-link\"\r\n                activeclassname=\"active\"\r\n                href=\"/privacy\"\r\n              >\r\n                Privacy\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"footer-item\">\r\n              {isAuth && userType === false && (\r\n                <Link to={\"/jobs\"} className=\"btn footer-link btn-link p-0\">\r\n                  Find a Job Now\r\n                </Link>\r\n              )}\r\n              {!isAuth && (\r\n                <button\r\n                  onClick={() => {\r\n                    setFormShow();\r\n                    $(\"#registerModal\").modal(\"show\");\r\n                  }}\r\n                  className=\"btn footer-link btn-link p-0\"\r\n                >\r\n                  Find a Job Now\r\n                </button>\r\n              )}\r\n            </li>\r\n            {/*  */}\r\n\r\n            <li className=\"footer-item\">\r\n              {isAuth && userType === true && (\r\n                <Link to={\"/profile\"} className=\"btn footer-link btn-link p-0\">\r\n                  Start Hiring Now\r\n                </Link>\r\n              )}\r\n              {!isAuth && (\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ ...this.state, formShown: \"company\" });\r\n                    $(\"#registerModal\").modal(\"show\");\r\n                  }}\r\n                  className=\"btn footer-link btn-link p-0\"\r\n                >\r\n                  Start Hiring Now\r\n                </button>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"follow-us col-lg-4\">\r\n          <h4>Follow Us</h4>\r\n          <div className=\"follow-us-list mx-auto text-center\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <img className=\"\" src=\"images/facebook.svg\" alt=\"\" />\r\n                <a\r\n                  className=\"general-link\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href=\"https://www.facebook.com/WorkEgyptHiring/\"\r\n                >\r\n                  Facebook\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <img className=\"\" src=\"images/instagram.svg\" alt=\"\" />\r\n                <a\r\n                  className=\"general-link\"\r\n                  href=\"https://www.instagram.com/workegypthiring\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Instagram\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"list-unstyled ml-auto \">\r\n              <li>\r\n                <img className=\"\" src=\"images/linkedin.svg\" alt=\"\" />\r\n                <a\r\n                  className=\"general-link\"\r\n                  href=\"https://www.linkedin.com/company/workegypt\"\r\n                  target=\"_blank\"\r\n                >\r\n                  LinkedIn\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <img\r\n                  className=\"\"\r\n                  style={{ width: 25 }}\r\n                  src=\"images/whatsapp.svg\"\r\n                  alt=\"\"\r\n                />\r\n                <a\r\n                  className=\"general-link\"\r\n                  href=\"https://chat.whatsapp.com/IEhYoefAapt7OetIrxyD3T\"\r\n                  target=\"_blank\"\r\n                >\r\n                  WhatsApp\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"copy-right col-lg-4\">\r\n          <h5>2020 WORKEGYPT</h5>\r\n          <span> &copy; All right reserved by WORKEGYPT</span> <br />\r\n          <small>thames team</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\BrandingVideoModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\fixtures.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\searchProfiles\\UserCard.js",["918"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst UserCard = ({\r\n  username = \"\",\r\n  userImg = \"http://via.placeholder.com/100\",\r\n  userId,\r\n}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"card-img-top\" src={userImg} alt=\"image\" />\r\n      <div className=\"card-body\">\r\n        <h3 className=\"card-title\">{username}</h3>\r\n        <Link to={`/profile/${userId}`} className=\"btn btn-primary\">\r\n          Show Profile\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\searchProfiles\\FilterationForm.js",["919"],"import React from \"react\";\r\nimport { profile } from \"../../../utils/fixtures\";\r\nimport { useState } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\nfunction FiltrationForm({\r\n  onFormSubmitHandler = () => {},\r\n  resetFilters = () => {},\r\n  onSetFilters = () => {},\r\n  onSearch = () => {},\r\n  onChangeHandler = () => {},\r\n  filters = {},\r\n}) {\r\n  const [filtersShown, setFiltersShown] = useState(false);\r\n  const toggleFilters = useCallback(() => {\r\n    setFiltersShown(!filtersShown);\r\n  }, [filtersShown]);\r\n  return (\r\n    <form className=\"form-row\" onSubmit={onFormSubmitHandler}>\r\n      <div className=\"col-12 col-md-5 pl-0 pr-md-5\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            name=\"searchText\"\r\n            placeholder=\"Search for profiles\"\r\n            value={filters.searchText}\r\n            onChange={onChangeHandler}\r\n            className=\"form-control\"\r\n            style={{ height: 35 }}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"submit\"\r\n              onClick={onSearch}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n          <p className=\"mt-3 text-secondary\">\r\n            Search is set to applicant name by default, if you want other\r\n            criteria please select other filters.\r\n          </p>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"form-group w-50 pr-2\">\r\n            <select\r\n              name=\"searchBy\"\r\n              value={filters.searchBy}\r\n              onChange={onChangeHandler}\r\n              className=\"custom-select form-control\"\r\n            >\r\n              <option value=\"name\">Applicant name</option>\r\n              <option value=\"jobTitle\">Job title</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group w-50 pl-2\">\r\n            <a\r\n              onClick={toggleFilters}\r\n              style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n              className=\"hover-opacity\"\r\n            >\r\n              {filtersShown ? \"Hide\" : \"Show\"} other filters\r\n              <i\r\n                className={`fas fa-${filtersShown ? \"eye-slash\" : \"eye\"} ml-2`}\r\n                style={{ fontSize: 12 }}\r\n              />\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n        {/* filters */}\r\n      </div>\r\n      <div className=\"col-12 col-md-7\">\r\n        {filtersShown && (\r\n          <>\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className=\"form-group pr-2\"\r\n                style={{ width: \"calc(100% / 3.2)\" }}\r\n              >\r\n                <select\r\n                  name=\"educationLvl\"\r\n                  value={filters.educationLvl}\r\n                  onChange={onChangeHandler}\r\n                  className=\"custom-select form-control\"\r\n                  id=\"filter_Edu_lvl\"\r\n                >\r\n                  <option value=\"\">Select Education Level</option>\r\n                  <option value=\"Bachelor degree\">Bachelor degree</option>\r\n                  <option value=\"Master's degree\">Master's degree</option>\r\n                  <option value=\"Doctoral degree\">Doctoral degree</option>\r\n                  <option value=\"High school\">High school</option>\r\n                  <option value=\"Diploma\">Diploma</option>\r\n                </select>\r\n              </div>\r\n              <div\r\n                className=\"form-group pl-2 \"\r\n                style={{ width: \"calc(100% / 3.2)\" }}\r\n              >\r\n                <select\r\n                  name=\"language\"\r\n                  id=\"language\"\r\n                  value={filters.language}\r\n                  onChange={onChangeHandler}\r\n                  className=\"custom-select form-control\"\r\n                >\r\n                  <option value=\"\">Select Language</option>\r\n                  {profile.languages.map((lang) => (\r\n                    <>\r\n                      <option key={lang} value={lang}>\r\n                        {lang}\r\n                      </option>\r\n                    </>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group pl-2\">\r\n                <select\r\n                  name=\"careerLvl\"\r\n                  value={filters.careerLvl}\r\n                  onChange={onChangeHandler}\r\n                  className=\"custom-select form-control\"\r\n                  id=\"filter_careerLvl\"\r\n                >\r\n                  <option value=\"\">Select Career Level</option>\r\n                  <option value=\"Student\">Student</option>\r\n                  <option value=\"Entry level\">Entry level</option>\r\n                  <option value=\"Experienced (non manger)\">\r\n                    Experienced {\"(\"}non manger{\")\"}\r\n                  </option>\r\n                  <option value=\"Manager\">Manager</option>\r\n                  <option value=\"Senior management\">Senior management</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className=\"form-group pr-2\"\r\n                style={{ width: \"calc(100% / 3.2)\" }}\r\n              >\r\n                <select\r\n                  name=\"country\"\r\n                  value={filters.country}\r\n                  onChange={onChangeHandler}\r\n                  className=\"custom-select form-control\"\r\n                  id=\"filter_country\"\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {profile.countries.map((country) => (\r\n                    <option value={country}>{country}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div\r\n                className=\"form-group pl-2\"\r\n                style={{ width: \"calc(100% / 3.2)\" }}\r\n              >\r\n                <select\r\n                  disabled={filters.country !== \"Egypt\"}\r\n                  name=\"city\"\r\n                  value={filters.city}\r\n                  onChange={onChangeHandler}\r\n                  className=\"custom-select form-control\"\r\n                  id=\"filter_city\"\r\n                >\r\n                  <option value=\"\">Select City</option>\r\n                  {profile.states.map((st) => (\r\n                    <option value={st}>{st}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n              <button\r\n                onClick={resetFilters}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary col my-3 mr-2\"\r\n                style={{ maxWidth: 100 }}\r\n              >\r\n                Reset filters\r\n              </button>\r\n              <button\r\n                onClick={onSetFilters}\r\n                type=\"button\"\r\n                className=\"btn btn-primary col my-3 ml-2\"\r\n                style={{ maxWidth: 100 }}\r\n              >\r\n                Set filters\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FiltrationForm;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\payment\\PlanCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Mymessage.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Reply.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\chat\\Contact.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AnalysisSidebar.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\routes\\AnalysisRoutes.js",["920"],"import React from \"react\";\r\nimport WebsiteAnalysis from \"../components/pages/analysis/WebsiteAnalysis\";\r\nimport GeneralAnalysis from \"../components/pages/analysis/GeneralAnalysis\";\r\nimport EventsAnalysis from \"../components/pages/analysis/EventsAnalysis\";\r\nimport PaymentsAnalysis from \"../components/pages/analysis/PaymentsAnalysis\";\r\nimport AdminNotifications from \"../components/pages/analysis/AdminNotifications\";\r\nimport AdminSettings from \"../components/pages/analysis/AdminSettings\";\r\nimport StrictAdminRoute from \"../components/reusable/StrictAdminRoute\";\r\nfunction AnalysisRoutes() {\r\n  return (\r\n    <>\r\n      <StrictAdminRoute\r\n        path={\"/analysis/website\"}\r\n        component={WebsiteAnalysis}\r\n      />\r\n      <StrictAdminRoute\r\n        path={\"/analysis/general\"}\r\n        component={GeneralAnalysis}\r\n      />\r\n      {/* <StrictAdminRoute path={\"/analysis/events\"} component={EventsAnalysis} /> */}\r\n      <StrictAdminRoute\r\n        path={\"/analysis/payment/:pageNumber\"}\r\n        component={PaymentsAnalysis}\r\n      />\r\n      <StrictAdminRoute\r\n        path={\"/analysis/notification\"}\r\n        component={AdminNotifications}\r\n      />\r\n      <StrictAdminRoute path={\"/analysis/settings\"} component={AdminSettings} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AnalysisRoutes;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\JobApplicantCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\FakeExtraData.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\QuizElementPreview.js",["921","922"],"import React, { useState, useEffect } from \"react\";\r\nimport isEmpty from \"../../../utils/isEmpty\";\r\nimport $ from \"jquery\";\r\nconst Answer = ({ isRight, answerTitle }) => (\r\n  <li className={`list-group-item ${isRight ? \"text-success\" : \"text-danger\"}`}>\r\n    {answerTitle}\r\n  </li>\r\n);\r\n\r\nfunction QuizElementPreview({\r\n  questionId,\r\n  jobId,\r\n  deleteQuestion,\r\n  question,\r\n  answers\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const onDeleteQuizElement = () => {\r\n    setLoading(true);\r\n    deleteQuestion(jobId, questionId);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      $('[data-toggle=\"tooltip\"]').tooltip(\"dispose\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-12 col-sm-6 col-md-4  mb-5\">\r\n      <div className=\"quiz-element\">\r\n        <ul className=\"list-group\">\r\n          <li\r\n            className=\"list-group-item bg-dark text-light\"\r\n            aria-disabled=\"true\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <button\r\n              className=\"btn btn-danger btn-sm rounded-circle flex-centered\"\r\n              onClick={onDeleteQuizElement}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Delete Quiz Element\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"-12px\",\r\n                right: \"-15px\",\r\n                width: 30,\r\n                height: 30\r\n              }}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span\r\n                    className=\"spinner-grow spinner-grow-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </>\r\n              ) : (\r\n                <i className=\"fas fa-trash fa-sm \" />\r\n              )}\r\n            </button>\r\n\r\n            <h6>Quiz Element</h6>\r\n          </li>\r\n          <li className=\"list-group-item \" aria-disabled=\"true\">\r\n            <div className=\"question\">\r\n              <p>{question}</p>\r\n            </div>\r\n          </li>\r\n          {answers\r\n            .filter(ans => !isEmpty(ans.answerTitle))\r\n            .map((ans, index) => (\r\n              <Answer\r\n                key={ans + index}\r\n                answerTitle={ans.answerTitle}\r\n                isRight={ans.isRight}\r\n              />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizElementPreview;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\QuizElement.js",["923","924"],"import React, { useState } from \"react\";\r\nimport isEmpty from \"../../../utils/isEmpty\";\r\nconst Answer = ({\r\n  answerIndex = 0,\r\n  isRight,\r\n  question = \"qq\",\r\n  answerTitle,\r\n  onChangeHandler,\r\n  onAddQuizElement\r\n}) => (\r\n  <li className=\"list-group-item p-0\">\r\n    <div className=\"input-group w-100 h-100 \">\r\n      <div className=\"input-group-prepend \">\r\n        <div className=\"input-group-text \" style={{ border: \"none\" }}>\r\n          <input\r\n            onChange={onChangeHandler}\r\n            name={question}\r\n            data-name=\"isRight\"\r\n            data-index={answerIndex}\r\n            title=\"choose as a right answer\"\r\n            type=\"radio\"\r\n            aria-label=\"Radio button for following text input\"\r\n            checked={isRight}\r\n            id={question + answerIndex}\r\n          />\r\n          <label htmlFor={question + answerIndex} className=\"ml-2 mb-0\">\r\n            Right answer\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <input\r\n        name=\"answerTitle\"\r\n        onChange={onChangeHandler}\r\n        value={answerTitle}\r\n        type=\"text\"\r\n        data-name=\"answerTitle\"\r\n        data-index={answerIndex}\r\n        placeholder=\"Type your answer\"\r\n        className=\"form-control\"\r\n        aria-label=\"Text input with radio button\"\r\n        style={{ border: \"none\" }}\r\n      />\r\n    </div>\r\n  </li>\r\n);\r\n\r\nconst QuizElement = ({ jobId, addQuestion, isEditingProcess, editJob }) => {\r\n  //state\r\n  const [quizEl, setQuizEl] = useState({\r\n    question: \"\",\r\n    time: \"\",\r\n    answers: [{ answerTitle: \"\", isRight: false }],\r\n    rightSelected: false,\r\n    reachedMaxAns: false,\r\n    error: \"\"\r\n  });\r\n\r\n  const clearFields = () => {\r\n    setQuizEl({\r\n      question: \"\",\r\n      answers: [{ answerTitle: \"\", isRight: false }],\r\n      rightSelected: false,\r\n      reachedMaxAns: false,\r\n\r\n      error: \"\"\r\n    });\r\n  };\r\n\r\n  const onChangeHandler = e => {\r\n    const { name, value } = e.target;\r\n    const dataName = e.target.getAttribute(\"data-name\");\r\n    const dataIndex = e.target.getAttribute(\"data-index\");\r\n    switch (dataName) {\r\n      case \"isRight\": {\r\n        let answers = [...quizEl.answers];\r\n        answers = answers.map(ans => {\r\n          ans.isRight = false;\r\n          return ans;\r\n        });\r\n\r\n        answers[dataIndex].isRight = true;\r\n\r\n        setQuizEl({\r\n          ...quizEl,\r\n          answers: [...answers],\r\n          rightSelected: true\r\n        });\r\n        break;\r\n      }\r\n\r\n      case \"answerTitle\": {\r\n        let answers = [...quizEl.answers];\r\n        answers[dataIndex] = { ...answers[dataIndex], answerTitle: value };\r\n        setQuizEl({ ...quizEl, answers });\r\n        break;\r\n      }\r\n\r\n      default:\r\n        setQuizEl({\r\n          ...quizEl,\r\n          [name]: value\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onAddAnswer = () => {\r\n    //validate\r\n    const prevAns = quizEl.answers[quizEl.answers.length - 1];\r\n    if (isEmpty(prevAns.answerTitle)) {\r\n      setQuizEl({\r\n        ...quizEl,\r\n        error: \"please complete the answer before adding a new one!\"\r\n      });\r\n      return;\r\n    }\r\n    if (quizEl.answers.length >= 4) {\r\n      setQuizEl({\r\n        ...quizEl,\r\n        reachedMaxAns: true\r\n      });\r\n      return;\r\n    }\r\n    setQuizEl({\r\n      ...quizEl,\r\n      reachedMaxAns: false,\r\n      error: \"\"\r\n    });\r\n\r\n    let answers = [...quizEl.answers, { answerTitle: \"\", isRight: false }];\r\n    setQuizEl({ ...quizEl, answers, error: \"\" });\r\n  };\r\n\r\n  const onAddQuizElement = () => {\r\n    const filteredAnswers = quizEl.answers.filter(\r\n      ans => !isEmpty(ans.answerTitle)\r\n    );\r\n\r\n    if (filteredAnswers.length < 2) {\r\n      setQuizEl({\r\n        ...quizEl,\r\n        error: \"at least two answers added!\"\r\n      });\r\n    } else if (isEmpty(quizEl.question)) {\r\n      setQuizEl({\r\n        ...quizEl,\r\n        error: \"please provide a question!\"\r\n      });\r\n    } else if (!quizEl.rightSelected) {\r\n      setQuizEl({\r\n        ...quizEl,\r\n        error: \"please choose a right answer\"\r\n      });\r\n    } else {\r\n      setQuizEl({\r\n        ...quizEl,\r\n        error: \"\"\r\n      });\r\n      const [answer1, answer2, answer3, answer4] = filteredAnswers;\r\n\r\n      const question = {\r\n        question: quizEl.question,\r\n        answer1: (answer1 && answer1.answerTitle) || \"\",\r\n        answer2: (answer2 && answer2.answerTitle) || \"\",\r\n        answer3: (answer3 && answer3.answerTitle) || \"\",\r\n        answer4: (answer4 && answer4.answerTitle) || \"\",\r\n        isRight1: (answer1 && answer1.isRight) || false,\r\n        isRight2: (answer1 && answer2.isRight) || false,\r\n        isRight3: (answer3 && answer3.isRight) || false,\r\n        isRight4: (answer4 && answer4.isRight) || false\r\n      };\r\n      editJob(jobId, { quiz_time: quizEl.time });\r\n      addQuestion(jobId, question);\r\n      clearFields();\r\n    }\r\n  };\r\n\r\n  const onEditQuizElement = () => {};\r\n  const onDeleteQuizElement = () => {};\r\n  return (\r\n    <div className=\"col-12 col-sm-6 col-md-4  mb-3\">\r\n      <div className=\"quiz-element \">\r\n        <ul className=\"list-group\">\r\n          <li\r\n            className=\"list-group-item bg-dark text-light\"\r\n            aria-disabled=\"true\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            {isEditingProcess ? (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-success btn-sm rounded-circle\"\r\n                  onClick={onEditQuizElement}\r\n                  title=\"edit quiz\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"-12px\",\r\n                    right: \"20px\",\r\n                    width: 30,\r\n                    height: 30\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-pen fa-sm\" />\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger btn-sm rounded-circle\"\r\n                  onClick={onDeleteQuizElement}\r\n                  title=\"delete quiz\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"-12px\",\r\n                    right: \"-15px\",\r\n                    width: 30,\r\n                    height: 30\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-trash fa-sm \" />\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-primary rounded-circle\"\r\n                onClick={onAddQuizElement}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"-12px\",\r\n                  right: \"-15px\"\r\n                }}\r\n              >\r\n                <i\r\n                  className=\"fas fa-plus\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Add Quiz Element\"\r\n                />\r\n              </button>\r\n            )}\r\n\r\n            <h6>Quiz Element</h6>\r\n          </li>\r\n\r\n          <li className=\"list-group-item \" aria-disabled=\"true\">\r\n            <div className=\"question\">\r\n              <input\r\n                name=\"question\"\r\n                onChange={onChangeHandler}\r\n                placeholder=\"write your question.. \"\r\n                className=\"w-100 h-100 input--blank\"\r\n                value={quizEl.question}\r\n              />\r\n            </div>\r\n          </li>\r\n\r\n          {quizEl.answers.map((ans, index) => (\r\n            <Answer\r\n              key={ans + index}\r\n              onChangeHandler={onChangeHandler}\r\n              answerTitle={ans.answerTitle}\r\n              isRight={ans.isRight}\r\n              answerIndex={index}\r\n              onAddQuizElement={onAddQuizElement}\r\n            />\r\n          ))}\r\n          <button\r\n            disabled={quizEl.reachedMaxAns}\r\n            onClick={onAddAnswer}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Add Answer\r\n            <i className=\"fas fa-plus ml-4\" />\r\n          </button>\r\n          {quizEl.error && <p className=\"text-danger\">{quizEl.error}</p>}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizElement;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\timeline\\InfoCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\truncate_text.js",["925"],"export default (text, maxSize = 30) => {\r\n  if (text.length > maxSize) {\r\n    let truncated_text = text;\r\n    truncated_text = truncated_text.substr(0, maxSize);\r\n    truncated_text = truncated_text + \"...\";\r\n    return truncated_text;\r\n  }\r\n\r\n  return text;\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\OurJobCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\JobsCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\CircularLoader.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\PostCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\timeline\\Post.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\PostJobModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\EditCompanyProfileModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\auth\\LoginModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\Home\\auth\\RegisterModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\data\\profileQuestions.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\selectors\\jobsSearchFilter.js",["926","927"],"import moment from \"moment\";\r\n\r\n// Get visible jobs\r\n\r\nexport default (jobs, { text, sortBy, startDate, endDate }) => {\r\n  return jobs\r\n    .filter(job => {\r\n      const createdAtMoment = moment(job.created_date);\r\n      const startDateMatch = startDate\r\n        ? startDate.isSameOrBefore(createdAtMoment, \"year\")\r\n        : true;\r\n      const endDateMatch = endDate\r\n        ? endDate.isSameOrAfter(createdAtMoment, \"year\")\r\n        : true;\r\n      const textMatch = job.title.toLowerCase().includes(text.toLowerCase());\r\n\r\n      return startDateMatch && endDateMatch && textMatch;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortBy === \"date\") {\r\n        return a.createdAt < b.createdAt ? 1 : -1;\r\n      } else if (sortBy === \"amount\") {\r\n        return a.amount < b.amount ? 1 : -1;\r\n      }\r\n    });\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\AgoraVideoCall\\index.jsx",["928","929","930","931"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\n\r\nimport \"./canvas.css\";\r\nimport \"../../assets/fonts/css/icons.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst tile_canvas = {\r\n  1: [\"span 12/span 24\"],\r\n  2: [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  3: [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  4: [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  5: [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  6: [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  7: [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      console.log(\"AgoraRTC client initialized\");\r\n      this.subscribeStreamEvents();\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        console.log(\"At \" + new Date().toLocaleTimeString());\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n                console.log(\"Publish local stream error: \" + err);\r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n            console.log(\"getUserMedia failed\", err);\r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //     // remove listener\r\n  //     let canvas = document.querySelector('#ag-canvas')\r\n  //     canvas.removeEventListener('mousemove')\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player && item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          console.log(\"Client succeed to leave.\");\r\n        },\r\n        () => {\r\n          console.log(\"Client failed to leave.\");\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"New stream added: \" + stream.getId());\r\n      console.log(\"At \" + new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe \", stream);\r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"Subscribe stream failed\", err);\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"Peer has left: \" + evt.uid);\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Got stream-subscribed event\");\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\r\n      console.log(evt);\r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Stream removed: \" + stream.getId());\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if (e.currentTarget.classList.contains(\"disabled\")) {\r\n      return;\r\n    }\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n            console.log(\"Client succeed to leave.\");\r\n          },\r\n          () => {\r\n            console.log(\"Client failed to leave.\");\r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      // redirect to index\r\n      this.props.removeInterviewCode();\r\n      this.props.history.replace(\"/interview/join\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"10px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {/* <span className=\"ag-btn shareScreenBtn\" title=\"Share Screen\">\r\n                        <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n                    </span> */}\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AgoraCanvas);\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\index.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\WebsiteAnalysis.js",["932"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport LineChart from \"../../reusable/charts/LineChart\";\r\nimport AnalysisDataCard from \"./AnalysisDataCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { adminGetWebsiteAnalysis } from \"../../../redux/actions\";\r\nimport DotsLoader from \"../../reusable/loaders/DotsGroup\";\r\nimport { setMaintenanceMode } from \"../../../services/admin\";\r\nfunction WebsiteAnalysis() {\r\n  const [websiteMode, setWebsiteMode] = useState(\"off\");\r\n  const [modeProcessing, setModeProcessing] = useState(false);\r\n  const toggleWebsiteMode = async () => {\r\n    const mode = websiteMode === \"on\" ? \"off\" : \"on\";\r\n    setModeProcessing(true);\r\n    try {\r\n      await setMaintenanceMode(mode);\r\n      setModeProcessing(false);\r\n      setWebsiteMode(mode);\r\n    } catch (error) {\r\n      setModeProcessing(null);\r\n    }\r\n  };\r\n\r\n  // state\r\n  const [loading, setLoading] = useState(true);\r\n  // selectors\r\n  const analysis = useSelector((state) => state.admin.websiteAnalysis);\r\n  const loaders = useSelector((state) => state.admin.loaders);\r\n  const dispatch = useDispatch();\r\n  let usersPerMonth = Array(12).fill(0);\r\n  if (analysis) {\r\n    analysis.per_month.forEach((item) => {\r\n      usersPerMonth[item._id - 1] = item.count;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (analysis === null) dispatch(adminGetWebsiteAnalysis());\r\n  }, [dispatch, analysis]);\r\n\r\n  useEffect(() => {\r\n    if (loading && loaders.getWebsiteAnalysis === false) setLoading(false);\r\n  }, [loaders.getWebsiteAnalysis]);\r\n\r\n  return (\r\n    <div className=\"avoid-navbar website-analysis pt-5\">\r\n      {loading ? (\r\n        <div\r\n          className=\"d-flex justify-content-center flex-column algin-items-center\"\r\n          style={{ height: \"90vh\" }}\r\n        >\r\n          <DotsLoader isCentered />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"row\">\r\n            <AnalysisDataCard\r\n              info={analysis?.views}\r\n              title=\"views\"\r\n              src={\"/images/views.png\"}\r\n            />\r\n            <AnalysisDataCard\r\n              info={analysis?.total}\r\n              title=\"users\"\r\n              src={\"/images/users.png\"}\r\n            />\r\n            <div className=\"main-card-layout website-mode-card\">\r\n              <span>\r\n                Maintenance Mode:\r\n                <span className=\"font-weight-bold\">{websiteMode}</span>\r\n              </span>\r\n              {modeProcessing === null && (\r\n                <span className=\"text-danger\">Failed!</span>\r\n              )}\r\n              {modeProcessing ? (\r\n                <span className=\"spinner spinner-border\" />\r\n              ) : (\r\n                <div\r\n                  className=\"toggle-website-mode\"\r\n                  onClick={toggleWebsiteMode}\r\n                >\r\n                  <span className={`circle ${websiteMode}`} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5\">\r\n            <LineChart values={usersPerMonth} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebsiteAnalysis;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\EventsAnalysis.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\PaymentsAnalysis.js",["933","934","935","936"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PaymentAnalysisCard from \"./paymentAnalysisCard\";\r\nimport { getCompanies } from \"../../../redux/actions\";\r\nimport DotsLoader from \"../../reusable/loaders/DotsGroup\";\r\nimport { useState } from \"react\";\r\nimport Pagination from \"react-paginate\";\r\nimport { Redirect, useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport qs from \"query-string\";\r\nimport CompanyFiltersForm from \"./CompanyFiltersForm\";\r\nimport { useCallback } from \"react\";\r\nfunction PaymentsAnalysis() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const admin = useSelector((state) => state.admin);\r\n  const companies = admin?.companies;\r\n  const loaders = admin?.loaders;\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [currentPaginationIndex, setCurrentPaginationIndex] = useState(1);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchPlan, setSearchPlan] = useState(\"\");\r\n  const [searchBy, setSearchBy] = useState(\"name\");\r\n\r\n  // handlers\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    setCurrentPaginationIndex(1);\r\n    history.push({\r\n      pathname: `/analysis/payment/1`,\r\n      search: `?searchBy=${searchBy}&searchText=${searchText}&searchPlan=${searchPlan}`,\r\n    });\r\n  };\r\n  const resetUrl = useCallback(() => {\r\n    setCurrentPaginationIndex(1);\r\n    setSearchBy(\"name\");\r\n    setSearchPlan(\"\");\r\n    setSearchText(\"\");\r\n    history.push(\"/analysis/payment/1\");\r\n  }, []);\r\n\r\n  // effects\r\n\r\n  // loading effects\r\n  useEffect(() => {\r\n    if (loading && loaders.fetchCompanies === false) setLoading(false);\r\n    if (loading && loaders.fetchCompanies === undefined) setLoading(undefined);\r\n  }, [loaders.fetchCompanies]);\r\n\r\n  // pagination change handler\r\n  const onPageChangeHandler = ({ selected }) => {\r\n    if (selected !== currentPaginationIndex - 1) {\r\n      setCurrentPaginationIndex(selected + 1);\r\n\r\n      const currentQs = qs.parse(location.search);\r\n      const { searchBy = \"name\", searchText = \"\", searchPlan = \"\" } = currentQs;\r\n      const search = `?searchBy=${searchBy}&searchText=${searchText}&searchPlan=${searchPlan}`;\r\n      history.push({\r\n        pathname: `/analysis/payment/${selected + 1}`,\r\n        search,\r\n      });\r\n    }\r\n  };\r\n\r\n  // url change handler\r\n  useEffect(() => {\r\n    const text = searchBy === \"plan\" ? searchPlan : searchText;\r\n    dispatch(getCompanies(currentPaginationIndex - 1, searchBy, text));\r\n    setLoading(true);\r\n    const queries = qs.parse(location.search);\r\n    setSearchBy(queries.searchBy || \"name\");\r\n    setSearchText(queries.searchText || \"\");\r\n    setSearchPlan(queries.searchPlan || \"\");\r\n  }, [location.search, params?.pageNumber]);\r\n\r\n  if (params.pageNumber === \"0\") return <Redirect to=\"/analysis/payment/1\" />;\r\n  return (\r\n    <div className=\"avoid-navbar\">\r\n      {loading === true && (\r\n        <div\r\n          className=\"d-flex justify-content-center flex-column algin-items-center\"\r\n          style={{ height: \"90vh\" }}\r\n        >\r\n          <DotsLoader isCentered />\r\n        </div>\r\n      )}\r\n      {loading === false && (\r\n        <>\r\n          <CompanyFiltersForm\r\n            onSearch={onSearch}\r\n            resetUrl={resetUrl}\r\n            setSearchText={setSearchText}\r\n            setSearchPlan={setSearchPlan}\r\n            setSearchBy={setSearchBy}\r\n            searchBy={searchBy}\r\n            searchText={searchText}\r\n            searchPlan={searchPlan}\r\n          />\r\n          <div className=\"row\">\r\n            {companies?.profiles.map((company) => (\r\n              <div\r\n                className=\"col-xl-3 col-lg-4 col-md-6 col-12 mb-3\"\r\n                key={company._id}\r\n              >\r\n                <PaymentAnalysisCard\r\n                  imgSrc={company?.image ? company.image : undefined}\r\n                  companyName={company?.user?.name}\r\n                  paymentPlan={\r\n                    company?.subscribe?.type ? company?.subscribe?.type : \"none\"\r\n                  }\r\n                  companyProfileId={company._id}\r\n                  companyUserId={company.user._id}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"row \">\r\n            <div className=\"col-12\">\r\n              <div className=\"flex-centered\">\r\n                <Pagination\r\n                  previousLabel={\"previous\"}\r\n                  nextLabel={\"next\"}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"pagination_link_box\"}\r\n                  pageCount={Math.ceil(companies.totalResults / companies.size)}\r\n                  pageClassName=\"pagination_pages\"\r\n                  containerClassName=\"pagination_container\"\r\n                  pageLinkClassName=\"pageLinkClass\"\r\n                  activeLinkClassName=\"pagination_active_link\"\r\n                  nextClassName=\"pagination_next\"\r\n                  previousClassName=\"pagination_prev\"\r\n                  nextLinkClassName={\"prev_next_link\"}\r\n                  previousLinkClassName={\"prev_next_link\"}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  onPageChange={onPageChangeHandler}\r\n                  activeClassName={\"\"}\r\n                  initialPage={currentPaginationIndex - 1}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {typeof loading === \"undefined\" && (\r\n        <div\r\n          className=\"d-flex justify-content-center flex-column algin-items-center\"\r\n          style={{ height: \"90vh\" }}\r\n        >\r\n          <h3 className=\"alert alert-danger text-center\">\r\n            Oops, something went wrong!\r\n          </h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentsAnalysis;\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AdminNotifications.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\GeneralAnalysis.js",["937"],"import React from \"react\";\r\nimport AnalysisDataCard from \"./AnalysisDataCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { adminGetAnalysis } from \"../../../redux/actions\";\r\nimport DotsLoader from \"../../reusable/loaders/DotsGroup\";\r\nexport default function GeneralAnalysis() {\r\n  // state\r\n  const [loading, setLoading] = useState(true);\r\n  // selectors\r\n  const analysis = useSelector((state) => state.admin.analysis);\r\n  const loaders = useSelector((state) => state.admin.loaders);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (analysis == null) dispatch(adminGetAnalysis());\r\n  }, [dispatch, analysis]);\r\n\r\n  useEffect(() => {\r\n    if (loading && loaders.getAnalysis === false) setLoading(false);\r\n  }, [loaders.getAnalysis]);\r\n\r\n  return (\r\n    <div className=\"avoid-navbar general-analysis\">\r\n      {loading ? (\r\n        <div\r\n          className=\"d-flex justify-content-center flex-column algin-items-center\"\r\n          style={{ height: \"90vh\" }}\r\n        >\r\n          <DotsLoader isCentered />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <section>\r\n            <h6 className=\"text-secondary title\">main analysis</h6>\r\n            <div className=\"row\">\r\n              <AnalysisDataCard\r\n                info={analysis?.companies}\r\n                title=\"companies\"\r\n                src=\"/images/company.svg\"\r\n              />\r\n              <AnalysisDataCard\r\n                info={analysis?.applicants}\r\n                title=\"applicants\"\r\n                src=\"/images/employee_1.svg\"\r\n              />\r\n              <AnalysisDataCard\r\n                info={analysis?.jobs?.total}\r\n                title=\"jobs\"\r\n                src={\"/images/jobs.png\"}\r\n              />\r\n              <AnalysisDataCard\r\n                info={analysis?.jobs?.applicantsNo}\r\n                title=\"applied\"\r\n                src={\"/images/applied.png\"}\r\n              />\r\n            </div>\r\n          </section>\r\n          <section>\r\n            <h6 className=\"text-secondary title\">jobs analysis</h6>\r\n            <div className=\"row\">\r\n              <AnalysisDataCard\r\n                info={analysis?.jobs?.accepted}\r\n                title=\"accepted\"\r\n                src={\"/images/accepted.png\"}\r\n              />\r\n              <AnalysisDataCard\r\n                info={analysis?.jobs?.rejected}\r\n                title=\"rejected\"\r\n                src={\"/images/rejected (4).svg\"}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <AnalysisDataCard\r\n                info={analysis?.jobs?.shortlisted}\r\n                title=\"shortlisted\"\r\n                src={\"/images/shortlisted.png\"}\r\n              />\r\n              <AnalysisDataCard\r\n                info={analysis?.jobs?.oncontact}\r\n                title=\"on contact\"\r\n                src={\"/images/oncontact.png\"}\r\n              />\r\n            </div>\r\n          </section>\r\n\r\n          <section>\r\n            <h6 className=\"text-secondary title\">Blog</h6>\r\n            <div className=\"row\">\r\n              <AnalysisDataCard\r\n                info={analysis?.posts}\r\n                title=\"posts\"\r\n                src={\"/images/blog.png\"}\r\n              />\r\n            </div>\r\n          </section>\r\n\r\n          <section>\r\n            <h6 className=\"text-secondary title\">Events</h6>\r\n            <div className=\"row\">\r\n              <AnalysisDataCard\r\n                DataCard\r\n                info={analysis?.events}\r\n                title=\"active events\"\r\n                src={\"/images/event-active.png\"}\r\n              />\r\n              {/* <AnalysisDataCard\r\n                info=\"100\"\r\n                title=\"closed\"\r\n                src={\"/images/event-close.png\"}\r\n              /> */}\r\n            </div>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AdminSettings.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\jobs\\GenerateInterviewModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\validation\\validatePostJob.js",["938"],"import isEmpty from \"../isEmpty\";\r\n\r\nexport default data => {\r\n  const errors = {};\r\n  for (let key in data) {\r\n    if (isEmpty(data[key]) && key !== \"errors\") {\r\n      errors[key] = `${key} is required!`;\r\n    }\r\n  }\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors) ? true : false\r\n  };\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\validation\\validateAuth.js",["939"],"import isEmpty from \"../isEmpty\";\r\nimport validator from \"validator\";\r\nexport default (name, email, password, password2, isRegister = false) => {\r\n  const errors = {};\r\n\r\n  if (!validator.isEmail(email)) {\r\n    errors.email = \"email is not valid!\";\r\n  }\r\n\r\n  if (isEmpty(email)) {\r\n    errors.email = \"email is required!\";\r\n  }\r\n\r\n  if (!validator.isLength(password, { min: 6, max: 100 })) {\r\n    errors.password = \"password have to be between 6 and 100 characters!\";\r\n  }\r\n  if (isEmpty(password)) {\r\n    errors.password = \"password is required!\";\r\n  }\r\n\r\n  // these validations are only performed when it is registeration process\r\n  if (isRegister) {\r\n    if (!validator.isLength(name, { min: 2, max: 50 })) {\r\n      errors.name = \"name have to be between 2 and 50 characters!\";\r\n    }\r\n    if (isEmpty(name)) {\r\n      errors.name = \"name is required!\";\r\n    }\r\n\r\n    if (isEmpty(password2)) {\r\n      errors.password2 = \"password confirmation is required!\";\r\n    }\r\n    if (password !== password2) {\r\n      errors.password2 = \"password does not match confirmation!\";\r\n    }\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors) ? true : false\r\n  };\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Brief.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Education.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Experience.js",["940","941"],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Training.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Certificate.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\ExtraInfo.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Languages.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\QuestionBox.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\Skills.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\LanguagesRating.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\services\\admin.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\CompanyFiltersForm.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\paymentAnalysisCard.js",["942","943","944","945"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { changeCompanyPlan } from \"../../../redux/actions\";\r\nimport ReactConfirmAlert from \"../../reusable/ReactConfirmAlert\";\r\nconst planToColor = {\r\n  gold: \"#B5A900\",\r\n  silver: \"#949494\",\r\n  plat: \"#31B4C9\",\r\n  none: \"#FF6600\",\r\n};\r\nexport default ({\r\n  imgSrc = \"http://placehold.it/100/ddd\",\r\n  companyName = \"company name\",\r\n  paymentPlan = \"none\",\r\n  companyProfileId,\r\n  companyUserId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const loaders = useSelector((state) => state.admin.loaders);\r\n  const [loading, setLoading] = useState(false);\r\n  // effects\r\n  const [currentPayPlan, setPayPlan] = useState(\"none\");\r\n  const prevPlan = useRef();\r\n  useEffect(() => {\r\n    setPayPlan(paymentPlan);\r\n  }, []);\r\n\r\n  const handlePlanSelect = (plan) => {\r\n    if (paymentPlan !== plan) {\r\n      ReactConfirmAlert({\r\n        title: \"Change Company Plan!\",\r\n        message: \"Are you sure you want to subscribe to this plan?\",\r\n        onYes: () => {\r\n          dispatch(changeCompanyPlan(plan, companyProfileId));\r\n          setLoading(true);\r\n          prevPlan.current = currentPayPlan;\r\n          setPayPlan(plan);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading && loaders.subscribingToPlan === false) setLoading(false);\r\n    if (loading && loaders.subscribingToPlan === undefined) {\r\n      setPayPlan(prevPlan.current);\r\n      setLoading(undefined);\r\n    }\r\n  }, [loaders.subscribingToPlan]);\r\n\r\n  return (\r\n    <div\r\n      className=\"payment-analysis-card main-card-layout px-0\"\r\n      style={{\r\n        border: \"none\",\r\n        boxShadow: \"0 0 .2rem rgba(0,0,0,0.3)\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {loading && (\r\n        <div className=\"full-loader white\">\r\n          <span className=\"spinner-border text-primary\"></span>\r\n        </div>\r\n      )}\r\n      {loading === undefined && (\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          please try again!\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"responsive_img_container\"\r\n        style={{ width: 50, height: 50, borderRadius: \"50%\" }}\r\n      >\r\n        <img src={imgSrc} alt=\"company image\" style={{ border: \"50%\" }} />\r\n      </div>\r\n      <p className=\"my-3\">{companyName}</p>\r\n      <div\r\n        className=\"plan-rectangle w-100 flex-centered py-2\"\r\n        style={{ backgroundColor: planToColor[currentPayPlan] }}\r\n      >\r\n        <p style={{ color: \"#FFF\" }}>\r\n          current plan {currentPayPlan === \"plat\" ? \"platinum\" : currentPayPlan}\r\n        </p>\r\n      </div>\r\n\r\n      <p style={{ fontWeight: \"bold\", fontSize: 14 }} className=\"my-3\">\r\n        change plan\r\n      </p>\r\n      <button\r\n        className=\"input--blank d-flex justify-content-between align-items-center px-5 w-100\"\r\n        style={{ background: \"transparent\" }}\r\n        onClick={() => handlePlanSelect(\"plat\")}\r\n      >\r\n        <span style={{ color: planToColor[\"plat\"] }}>platinum</span>\r\n        <div\r\n          style={{\r\n            width: 15,\r\n            height: 15,\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #DDD\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {currentPayPlan === \"plat\" && (\r\n            <i\r\n              className=\"fas fa-check\"\r\n              style={{ fontSize: 10, color: \"#333\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </button>\r\n      <button\r\n        className=\"input--blank d-flex justify-content-between align-items-center px-5 w-100\"\r\n        style={{ background: \"transparent\" }}\r\n        onClick={() => handlePlanSelect(\"gold\")}\r\n      >\r\n        <span style={{ color: planToColor[\"gold\"] }}>gold</span>\r\n        <div\r\n          style={{\r\n            width: 15,\r\n            height: 15,\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #DDD\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {currentPayPlan === \"gold\" && (\r\n            <i\r\n              className=\"fas fa-check\"\r\n              style={{ fontSize: 10, color: \"#333\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </button>\r\n      <button\r\n        className=\"input--blank d-flex justify-content-between align-items-center px-5 w-100\"\r\n        style={{ background: \"transparent\" }}\r\n        onClick={() => handlePlanSelect(\"silver\")}\r\n      >\r\n        <span style={{ color: planToColor[\"silver\"] }}>silver</span>\r\n        <div\r\n          style={{\r\n            width: 15,\r\n            height: 15,\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #DDD\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {currentPayPlan === \"silver\" && (\r\n            <i\r\n              className=\"fas fa-check\"\r\n              style={{ fontSize: 10, color: \"#333\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </button>\r\n\r\n      <button\r\n        className=\"input--blank d-flex justify-content-between align-items-center px-5 w-100\"\r\n        style={{ background: \"transparent\" }}\r\n        onClick={() => handlePlanSelect(\"none\")}\r\n      >\r\n        <span style={{ color: planToColor[\"none\"] }}>none</span>\r\n        <div\r\n          style={{\r\n            width: 15,\r\n            height: 15,\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #DDD\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {currentPayPlan === \"none\" && (\r\n            <i\r\n              className=\"fas fa-check\"\r\n              style={{ fontSize: 10, color: \"#333\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </button>\r\n\r\n      <NavLink\r\n        className=\"btn btn-outline-secondary mt-5\"\r\n        style={{ borderRadius: 20 }}\r\n        to={`/profile/${companyProfileId}/${companyUserId}`}\r\n      >\r\n        Show Company Profile\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n","D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\analysis\\AnalysisDataCard.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\charts\\LineChart.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\loaders\\BarLoader.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\pages\\profile\\profileComponents\\ExtraInfoModal.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\utils\\validation\\validateProfile.js",[],"D:\\projects\\node\\Work\\WorkEG final\\Workegypt\\client\\src\\components\\reusable\\ReactConfirmAlert.js",[],{"ruleId":"946","replacedBy":"947"},{"ruleId":"948","replacedBy":"949"},{"ruleId":"950","severity":1,"message":"951","line":1,"column":8,"nodeType":"952","messageId":"953","endLine":1,"endColumn":9},{"ruleId":"954","severity":1,"message":"955","line":100,"column":29,"nodeType":"956","endLine":103,"endColumn":30},{"ruleId":"950","severity":1,"message":"957","line":5,"column":3,"nodeType":"952","messageId":"953","endLine":5,"endColumn":15},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":31,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":9,"column":1,"nodeType":"960","endLine":32,"endColumn":3},{"ruleId":"950","severity":1,"message":"961","line":3,"column":3,"nodeType":"952","messageId":"953","endLine":3,"endColumn":30},{"ruleId":"950","severity":1,"message":"962","line":29,"column":29,"nodeType":"952","messageId":"953","endLine":29,"endColumn":49},{"ruleId":"963","severity":1,"message":"964","line":64,"column":6,"nodeType":"965","endLine":64,"endColumn":41,"suggestions":"966"},{"ruleId":"963","severity":1,"message":"967","line":70,"column":6,"nodeType":"965","endLine":70,"endColumn":59,"suggestions":"968"},{"ruleId":"950","severity":1,"message":"969","line":23,"column":3,"nodeType":"952","messageId":"953","endLine":23,"endColumn":10},{"ruleId":"950","severity":1,"message":"970","line":26,"column":3,"nodeType":"952","messageId":"953","endLine":26,"endColumn":16},{"ruleId":"950","severity":1,"message":"971","line":27,"column":3,"nodeType":"952","messageId":"953","endLine":27,"endColumn":16},{"ruleId":"958","severity":1,"message":"959","line":40,"column":1,"nodeType":"960","endLine":123,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":25,"column":1,"nodeType":"960","endLine":116,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":26,"column":1,"nodeType":"960","endLine":105,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":37,"column":1,"nodeType":"960","endLine":165,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":1,"column":1,"nodeType":"960","endLine":10,"endColumn":3},{"ruleId":"950","severity":1,"message":"972","line":2,"column":3,"nodeType":"952","messageId":"953","endLine":2,"endColumn":33},{"ruleId":"958","severity":1,"message":"959","line":10,"column":1,"nodeType":"960","endLine":19,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":6,"column":1,"nodeType":"960","endLine":18,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":42,"column":1,"nodeType":"960","endLine":257,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":12,"column":1,"nodeType":"960","endLine":42,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":37,"column":1,"nodeType":"960","endLine":219,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":82,"column":1,"nodeType":"960","endLine":339,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":22,"column":1,"nodeType":"960","endLine":95,"endColumn":3},{"ruleId":"963","severity":1,"message":"973","line":42,"column":6,"nodeType":"965","endLine":42,"endColumn":8,"suggestions":"974"},{"ruleId":"963","severity":1,"message":"975","line":57,"column":6,"nodeType":"965","endLine":57,"endColumn":78,"suggestions":"976"},{"ruleId":"950","severity":1,"message":"977","line":20,"column":46,"nodeType":"952","messageId":"953","endLine":20,"endColumn":58},{"ruleId":"950","severity":1,"message":"978","line":25,"column":19,"nodeType":"952","messageId":"953","endLine":25,"endColumn":34},{"ruleId":"963","severity":1,"message":"973","line":33,"column":6,"nodeType":"965","endLine":33,"endColumn":8,"suggestions":"979"},{"ruleId":"963","severity":1,"message":"980","line":43,"column":6,"nodeType":"965","endLine":43,"endColumn":73,"suggestions":"981"},{"ruleId":"950","severity":1,"message":"982","line":2,"column":8,"nodeType":"952","messageId":"953","endLine":2,"endColumn":10},{"ruleId":"950","severity":1,"message":"951","line":5,"column":8,"nodeType":"952","messageId":"953","endLine":5,"endColumn":9},{"ruleId":"983","severity":1,"message":"984","line":24,"column":25,"nodeType":"985","messageId":"986","endLine":24,"endColumn":27},{"ruleId":"983","severity":1,"message":"987","line":60,"column":23,"nodeType":"985","messageId":"986","endLine":60,"endColumn":25},{"ruleId":"988","severity":1,"message":"989","line":120,"column":5,"nodeType":"990","endLine":120,"endColumn":22},{"ruleId":"983","severity":1,"message":"987","line":128,"column":28,"nodeType":"985","messageId":"986","endLine":128,"endColumn":30},{"ruleId":"983","severity":1,"message":"987","line":129,"column":30,"nodeType":"985","messageId":"986","endLine":129,"endColumn":32},{"ruleId":"983","severity":1,"message":"984","line":137,"column":42,"nodeType":"985","messageId":"986","endLine":137,"endColumn":44},{"ruleId":"950","severity":1,"message":"991","line":188,"column":11,"nodeType":"952","messageId":"953","endLine":188,"endColumn":16},{"ruleId":"983","severity":1,"message":"987","line":220,"column":26,"nodeType":"985","messageId":"986","endLine":220,"endColumn":28},{"ruleId":"983","severity":1,"message":"987","line":232,"column":32,"nodeType":"985","messageId":"986","endLine":232,"endColumn":34},{"ruleId":"954","severity":1,"message":"955","line":238,"column":19,"nodeType":"956","endLine":238,"endColumn":70},{"ruleId":"992","severity":1,"message":"993","line":23,"column":7,"nodeType":"956","endLine":23,"endColumn":72},{"ruleId":"994","severity":1,"message":"995","line":77,"column":7,"nodeType":"956","endLine":83,"endColumn":8},{"ruleId":"996","severity":1,"message":"997","line":62,"column":19,"nodeType":"956","endLine":67,"endColumn":20},{"ruleId":"963","severity":1,"message":"998","line":74,"column":6,"nodeType":"965","endLine":74,"endColumn":8,"suggestions":"999"},{"ruleId":"950","severity":1,"message":"1000","line":85,"column":7,"nodeType":"952","messageId":"953","endLine":85,"endColumn":14},{"ruleId":"963","severity":1,"message":"1001","line":89,"column":6,"nodeType":"965","endLine":89,"endColumn":48,"suggestions":"1002"},{"ruleId":"963","severity":1,"message":"1003","line":100,"column":6,"nodeType":"965","endLine":100,"endColumn":57,"suggestions":"1004"},{"ruleId":"950","severity":1,"message":"1005","line":49,"column":13,"nodeType":"952","messageId":"953","endLine":49,"endColumn":16},{"ruleId":"994","severity":1,"message":"995","line":321,"column":11,"nodeType":"956","endLine":326,"endColumn":12},{"ruleId":"963","severity":1,"message":"1006","line":41,"column":6,"nodeType":"965","endLine":41,"endColumn":8,"suggestions":"1007"},{"ruleId":"963","severity":1,"message":"1006","line":55,"column":6,"nodeType":"965","endLine":55,"endColumn":49,"suggestions":"1008"},{"ruleId":"950","severity":1,"message":"1009","line":43,"column":10,"nodeType":"952","messageId":"953","endLine":43,"endColumn":23},{"ruleId":"950","severity":1,"message":"1010","line":44,"column":10,"nodeType":"952","messageId":"953","endLine":44,"endColumn":24},{"ruleId":"963","severity":1,"message":"1011","line":184,"column":6,"nodeType":"965","endLine":184,"endColumn":8,"suggestions":"1012"},{"ruleId":"963","severity":1,"message":"1013","line":209,"column":6,"nodeType":"965","endLine":215,"endColumn":4,"suggestions":"1014"},{"ruleId":"954","severity":1,"message":"955","line":271,"column":17,"nodeType":"956","endLine":274,"endColumn":19},{"ruleId":"954","severity":1,"message":"955","line":412,"column":21,"nodeType":"956","endLine":417,"endColumn":23},{"ruleId":"963","severity":1,"message":"1015","line":35,"column":6,"nodeType":"965","endLine":35,"endColumn":8,"suggestions":"1016"},{"ruleId":"958","severity":1,"message":"959","line":3,"column":1,"nodeType":"960","endLine":5,"endColumn":3},{"ruleId":"950","severity":1,"message":"1017","line":3,"column":10,"nodeType":"952","messageId":"953","endLine":3,"endColumn":18},{"ruleId":"950","severity":1,"message":"1018","line":15,"column":9,"nodeType":"952","messageId":"953","endLine":15,"endColumn":16},{"ruleId":"992","severity":1,"message":"993","line":79,"column":19,"nodeType":"956","endLine":83,"endColumn":20},{"ruleId":"992","severity":1,"message":"993","line":89,"column":19,"nodeType":"956","endLine":93,"endColumn":20},{"ruleId":"992","severity":1,"message":"993","line":99,"column":19,"nodeType":"956","endLine":103,"endColumn":20},{"ruleId":"950","severity":1,"message":"1018","line":11,"column":9,"nodeType":"952","messageId":"953","endLine":11,"endColumn":16},{"ruleId":"950","severity":1,"message":"1019","line":2,"column":8,"nodeType":"952","messageId":"953","endLine":2,"endColumn":11},{"ruleId":"963","severity":1,"message":"1020","line":34,"column":6,"nodeType":"965","endLine":34,"endColumn":35,"suggestions":"1021"},{"ruleId":"950","severity":1,"message":"1022","line":8,"column":8,"nodeType":"952","messageId":"953","endLine":8,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1024","line":163,"column":25,"nodeType":"1025","endLine":163,"endColumn":58},{"ruleId":"988","severity":1,"message":"989","line":69,"column":7,"nodeType":"990","endLine":69,"endColumn":17},{"ruleId":"950","severity":1,"message":"1026","line":6,"column":10,"nodeType":"952","messageId":"953","endLine":6,"endColumn":16},{"ruleId":"963","severity":1,"message":"973","line":114,"column":6,"nodeType":"965","endLine":114,"endColumn":8,"suggestions":"1027"},{"ruleId":"950","severity":1,"message":"1028","line":39,"column":10,"nodeType":"952","messageId":"953","endLine":39,"endColumn":18},{"ruleId":"950","severity":1,"message":"1029","line":39,"column":20,"nodeType":"952","messageId":"953","endLine":39,"endColumn":31},{"ruleId":"963","severity":1,"message":"1030","line":61,"column":6,"nodeType":"965","endLine":61,"endColumn":8,"suggestions":"1031"},{"ruleId":"963","severity":1,"message":"973","line":102,"column":6,"nodeType":"965","endLine":102,"endColumn":43,"suggestions":"1032"},{"ruleId":"963","severity":1,"message":"1033","line":114,"column":6,"nodeType":"965","endLine":114,"endColumn":29,"suggestions":"1034"},{"ruleId":"950","severity":1,"message":"1035","line":4,"column":10,"nodeType":"952","messageId":"953","endLine":4,"endColumn":17},{"ruleId":"950","severity":1,"message":"1036","line":24,"column":10,"nodeType":"952","messageId":"953","endLine":24,"endColumn":20},{"ruleId":"963","severity":1,"message":"973","line":85,"column":6,"nodeType":"965","endLine":85,"endColumn":43,"suggestions":"1037"},{"ruleId":"963","severity":1,"message":"973","line":90,"column":6,"nodeType":"965","endLine":90,"endColumn":8,"suggestions":"1038"},{"ruleId":"1023","severity":1,"message":"1024","line":169,"column":27,"nodeType":"1025","endLine":169,"endColumn":60},{"ruleId":"958","severity":1,"message":"1039","line":1,"column":1,"nodeType":"960","endLine":18,"endColumn":2},{"ruleId":"1040","severity":1,"message":"1041","line":11,"column":25,"nodeType":"1042","messageId":"1043","endLine":11,"endColumn":26,"suggestions":"1044"},{"ruleId":"992","severity":1,"message":"993","line":98,"column":17,"nodeType":"956","endLine":102,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":110,"column":17,"nodeType":"956","endLine":114,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":125,"column":17,"nodeType":"956","endLine":129,"endColumn":18},{"ruleId":"1045","severity":1,"message":"1046","line":10,"column":7,"nodeType":"956","endLine":10,"endColumn":65},{"ruleId":"994","severity":1,"message":"995","line":57,"column":13,"nodeType":"956","endLine":61,"endColumn":14},{"ruleId":"950","severity":1,"message":"1047","line":4,"column":8,"nodeType":"952","messageId":"953","endLine":4,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":32,"column":11,"nodeType":"956","endLine":36,"endColumn":12},{"ruleId":"1048","severity":1,"message":"1049","line":67,"column":11,"nodeType":"956","endLine":67,"endColumn":65},{"ruleId":"1048","severity":1,"message":"1049","line":184,"column":11,"nodeType":"956","endLine":188,"endColumn":12},{"ruleId":"1048","severity":1,"message":"1049","line":242,"column":11,"nodeType":"956","endLine":242,"endColumn":65},{"ruleId":"958","severity":1,"message":"959","line":1,"column":1,"nodeType":"960","endLine":10,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":5,"column":1,"nodeType":"960","endLine":26,"endColumn":3},{"ruleId":"1050","severity":1,"message":"1051","line":19,"column":18,"nodeType":"1052","messageId":"1053","endLine":19,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1054","line":126,"column":47,"nodeType":"1052","messageId":"1055","endLine":126,"endColumn":49},{"ruleId":"1050","severity":1,"message":"1054","line":152,"column":47,"nodeType":"1052","messageId":"1055","endLine":152,"endColumn":49},{"ruleId":"1050","severity":1,"message":"1054","line":249,"column":45,"nodeType":"1052","messageId":"1055","endLine":249,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1054","line":327,"column":21,"nodeType":"1052","messageId":"1055","endLine":327,"endColumn":23},{"ruleId":"963","severity":1,"message":"1003","line":43,"column":6,"nodeType":"965","endLine":43,"endColumn":34,"suggestions":"1056"},{"ruleId":"963","severity":1,"message":"1057","line":43,"column":6,"nodeType":"965","endLine":43,"endColumn":8,"suggestions":"1058"},{"ruleId":"963","severity":1,"message":"1003","line":51,"column":6,"nodeType":"965","endLine":51,"endColumn":30,"suggestions":"1059"},{"ruleId":"963","severity":1,"message":"1060","line":77,"column":6,"nodeType":"965","endLine":77,"endColumn":43,"suggestions":"1061"},{"ruleId":"1023","severity":1,"message":"1024","line":139,"column":19,"nodeType":"1025","endLine":139,"endColumn":52},{"ruleId":"963","severity":1,"message":"1003","line":20,"column":6,"nodeType":"965","endLine":20,"endColumn":27,"suggestions":"1062"},{"ruleId":"958","severity":1,"message":"959","line":3,"column":1,"nodeType":"960","endLine":14,"endColumn":3},{"ruleId":"958","severity":1,"message":"959","line":3,"column":1,"nodeType":"960","endLine":42,"endColumn":3},{"ruleId":"1063","severity":1,"message":"1064","line":301,"column":11,"nodeType":"1065","messageId":"1066","endLine":301,"endColumn":35},{"ruleId":"988","severity":1,"message":"989","line":301,"column":11,"nodeType":"990","endLine":301,"endColumn":21},{"ruleId":"958","severity":1,"message":"959","line":14,"column":1,"nodeType":"960","endLine":215,"endColumn":3},{"ruleId":"963","severity":1,"message":"1067","line":29,"column":6,"nodeType":"965","endLine":29,"endColumn":8,"suggestions":"1068"},{"ruleId":"963","severity":1,"message":"1003","line":52,"column":6,"nodeType":"965","endLine":52,"endColumn":33,"suggestions":"1069"},{"ruleId":"1045","severity":1,"message":"1046","line":89,"column":9,"nodeType":"956","endLine":89,"endColumn":75},"no-native-reassign",["1070"],"no-negated-in-lhs",["1071"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LOGOUT_START' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CREATE_CONVERSATION_SUCCESS' is defined but never used.","'setLoadingUnreadNotf' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user?._id'. Either include them or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1072"],"React Hook useEffect has an unnecessary dependency: 'getUnreadNotifications'. Either exclude it or remove the dependency array. Outer scope values like 'getUnreadNotifications' aren't valid dependencies because mutating them doesn't re-render the component.",["1073"],"'Payment' is defined but never used.","'InterviewRoom' is defined but never used.","'JoinInterview' is defined but never used.","'GET_UNREAD_NOTIFICATIONS_START' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1074"],"React Hook useEffect has missing dependencies: 'loading', 'localErrors', and 'moreLoading'. Either include them or remove the dependency array. You can also do a functional update 'setLocalErrors(l => ...)' if you only need 'localErrors' in the 'setLocalErrors' call.",["1075"],"'settingGoing' is assigned a value but never used.","'settingGoingErr' is assigned a value but never used.",["1076"],"React Hook useEffect has a missing dependency: 'fetching'. Either include it or remove the dependency array.",["1077"],"'io' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'video' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'isEditProcess', 'isVideo', 'text', and 'url'. Either include them or remove the dependency array. If 'setPost' needs the current value of 'url', you can also switch to useReducer instead of useState and read 'url' in the reducer.",["1078"],"'timeout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loading' and 'onClose'. Either include them or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1079"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["1080"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'eventId'. Either include it or remove the dependency array.",["1081"],["1082"],"'uploadSuccess' is assigned a value but never used.","'imageUploading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'desc', 'eventAgenda', 'eventImageUrl', 'eventSpeakers', 'gmt_from', 'gmt_to', 'hour_from', 'hour_to', 'isEditProcess', 'minutes_from', 'minutes_to', 'timeFrom', 'timeTo', and 'title'. Either include them or remove the dependency array. If 'setEvent' needs the current value of 'title', you can also switch to useReducer instead of useState and read 'title' in the reducer.",["1083"],"React Hook useEffect has missing dependencies: 'deleteLoading', 'eventId', 'isEditProcess', and 'loading'. Either include them or remove the dependency array.",["1084"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["1085"],"'Redirect' is defined but never used.","'history' is assigned a value but never used.","'jwt' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1086"],"'jobsSearchFilter' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'socket' is defined but never used.",["1087"],"'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user?._id'. Either include them or remove the dependency array.",["1088"],["1089"],"React Hook useEffect has missing dependencies: 'errors' and 'isLoading'. Either include them or remove the dependency array. You can also do a functional update 'setErrors(e => ...)' if you only need 'errors' in the 'setErrors' call.",["1090"],"'profile' is defined but never used.","'fetchError' is assigned a value but never used.",["1091"],["1092"],"Assign object to a variable before exporting as module default","no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["1093","1094"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'EventsAnalysis' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-disabled is not supported by the role listitem. This role is implicit on the element li.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside",["1095"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["1096"],["1097"],"React Hook useEffect has missing dependencies: 'currentPaginationIndex', 'dispatch', 'searchBy', 'searchPlan', and 'searchText'. Either include them or remove the dependency array.",["1098"],["1099"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has a missing dependency: 'paymentPlan'. Either include it or remove the dependency array. If 'setPayPlan' needs the current value of 'paymentPlan', you can also switch to useReducer instead of useState and read 'paymentPlan' in the reducer.",["1100"],["1101"],"no-global-assign","no-unsafe-negation",{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1106","fix":"1110"},{"desc":"1111","fix":"1112"},{"desc":"1113","fix":"1114"},{"desc":"1115","fix":"1116"},{"desc":"1117","fix":"1118"},{"desc":"1119","fix":"1120"},{"desc":"1121","fix":"1122"},{"desc":"1123","fix":"1124"},{"desc":"1125","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1106","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1106","fix":"1140"},{"messageId":"1141","fix":"1142","desc":"1143"},{"messageId":"1144","fix":"1145","desc":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1159","fix":"1160"},"Update the dependencies array to be: [setRecMsg, location, notf, user?._id, dispatch]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [dispatch, loadingUnreadNotf]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [dispatch]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [fetchingPosts, fetchingPostsErr, loading, loadingMorePosts, loadingMorePostsErr, localErrors, moreLoading]",{"range":"1167","text":"1168"},{"range":"1169","text":"1166"},"Update the dependencies array to be: [fetching, fetchingEvents, fetchingEventsErr, loadingMoreEvents, moreLoading]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [isEditProcess, isVideo, text, url]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [uploadingPost, editingPost, deletingPost, loading, onClose]",{"range":"1174","text":"1175"},"Update the dependencies array to be: [uploadingPostErr, editingPostErr, deletingPostErr, loading]",{"range":"1176","text":"1177"},"Update the dependencies array to be: [eventId]",{"range":"1178","text":"1179"},"Update the dependencies array to be: [eventId, goingLoader, setGoingLoader, settingGoing]",{"range":"1180","text":"1181"},"Update the dependencies array to be: [desc, eventAgenda, eventImageUrl, eventSpeakers, gmt_from, gmt_to, hour_from, hour_to, isEditProcess, minutes_from, minutes_to, timeFrom, timeTo, title]",{"range":"1182","text":"1183"},"Update the dependencies array to be: [uploadingEvent, uploadingEventErr, editingEvent, editingEventErr, deletingEvent, loading, deleteLoading, isEditProcess, eventId]",{"range":"1184","text":"1185"},"Update the dependencies array to be: [location.search]",{"range":"1186","text":"1187"},"Update the dependencies array to be: [validating, valid, setValid, history]",{"range":"1188","text":"1189"},{"range":"1190","text":"1166"},"Update the dependencies array to be: [dispatch, user?._id]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [remoteUserID, fetchingConversations, dispatch]",{"range":"1193","text":"1194"},"Update the dependencies array to be: [errors, fetchingConversations, isLoading]",{"range":"1195","text":"1196"},"Update the dependencies array to be: [queryString, currentPaginationIndex, dispatch]",{"range":"1197","text":"1198"},{"range":"1199","text":"1166"},"removeEscape",{"range":"1200","text":"1201"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1202","text":"1203"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [loaders.getWebsiteAnalysis, loading]",{"range":"1204","text":"1205"},"Update the dependencies array to be: [history]",{"range":"1206","text":"1207"},"Update the dependencies array to be: [loaders.fetchCompanies, loading]",{"range":"1208","text":"1209"},"Update the dependencies array to be: [currentPaginationIndex, dispatch, location.search, params.pageNumber, searchBy, searchPlan, searchText]",{"range":"1210","text":"1211"},"Update the dependencies array to be: [loaders.getAnalysis, loading]",{"range":"1212","text":"1213"},"Update the dependencies array to be: [paymentPlan]",{"range":"1214","text":"1215"},"Update the dependencies array to be: [loaders.subscribingToPlan, loading]",{"range":"1216","text":"1217"},[2197,2232],"[setRecMsg, location, notf, user?._id, dispatch]",[2353,2406],"[dispatch, loadingUnreadNotf]",[1497,1499],"[dispatch]",[1984,2056],"[fetchingPosts, fetchingPostsErr, loading, loadingMorePosts, loadingMorePostsErr, localErrors, moreLoading]",[1067,1069],[1385,1452],"[fetching, fetchingEvents, fetchingEventsErr, loadingMoreEvents, moreLoading]",[2005,2007],"[isEditProcess, isVideo, text, url]",[2362,2404],"[uploadingPost, editingPost, deletingPost, loading, onClose]",[2674,2725],"[uploadingPostErr, editingPostErr, deletingPostErr, loading]",[1209,1211],"[eventId]",[1692,1735],"[eventId, goingLoader, setGoingLoader, settingGoing]",[5176,5178],"[desc, eventAgenda, eventImageUrl, eventSpeakers, gmt_from, gmt_to, hour_from, hour_to, isEditProcess, minutes_from, minutes_to, timeFrom, timeTo, title]",[5921,6032],"[uploadingEvent, uploadingEventErr, editingEvent, editingEventErr, deletingEvent, loading, deleteLoading, isEditProcess, eventId]",[1166,1168],"[location.search]",[1043,1072],"[validating, valid, setValid, history]",[3514,3516],[2342,2344],"[dispatch, user?._id]",[3394,3431],"[remoteUserID, fetchingConversations, dispatch]",[3756,3779],"[errors, fetchingConversations, isLoading]",[2815,2852],"[queryString, currentPaginationIndex, dispatch]",[2962,2964],[234,235],"",[234,234],"\\",[1513,1541],"[loaders.getWebsiteAnalysis, loading]",[1626,1628],"[history]",[1852,1876],"[loaders.fetchCompanies, loading]",[2817,2854],"[currentPaginationIndex, dispatch, location.search, params.pageNumber, searchBy, searchPlan, searchText]",[795,816],"[loaders.getAnalysis, loading]",[902,904],"[paymentPlan]",[1589,1616],"[loaders.subscribingToPlan, loading]"]